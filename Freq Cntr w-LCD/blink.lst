

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Tue Sep 22 19:02:57 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F648A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 79 "C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 79 "C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
    45  2007  FF22               	dw 0xFFEE & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFB & 0xFF7F & 0xFFFF & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_lcd_init
    48                           	FNCALL	_main,_timersON
    49                           	FNCALL	_main,_lcd_puts
    50                           	FNCALL	_main,_lcd_goto
    51                           	FNCALL	_main,_lcd_clear
    52                           	FNCALL	_main,_timersOFF
    53                           	FNCALL	_main,_doScale
    54                           	FNCALL	_main,_doFrequency
    55                           	FNCALL	_doFrequency,_lcd_goto
    56                           	FNCALL	_doFrequency,_lcd_putnumber
    57                           	FNCALL	_doFrequency,_lcd_puts
    58                           	FNCALL	_doFrequency,___lmul
    59                           	FNCALL	_doFrequency,_ultoa
    60                           	FNCALL	_lcd_init,_lcd_write
    61                           	FNCALL	_lcd_init,_lcd_clear
    62                           	FNCALL	_lcd_putnumber,___lldiv
    63                           	FNCALL	_lcd_putnumber,___llmod
    64                           	FNCALL	_lcd_putnumber,_lcd_putdigit
    65                           	FNCALL	_lcd_putnumber,___awmod
    66                           	FNCALL	_lcd_putnumber,_lcd_puts
    67                           	FNCALL	_lcd_putdigit,_lcd_write
    68                           	FNCALL	_lcd_clear,_lcd_write
    69                           	FNCALL	_lcd_puts,_lcd_write
    70                           	FNCALL	_lcd_goto,_lcd_write
    71                           	FNCALL	_timersOFF,___tmul
    72                           	FNCALL	_timersOFF,___lmul
    73                           	FNCALL	_timersON,_initTimer0
    74                           	FNCALL	_timersON,_initTimer1
    75                           	FNCALL	_ultoa,___lldiv
    76                           	FNCALL	_ultoa,___llmod
    77                           	FNROOT	_main
    78                           	FNCALL	intlevel1,_ISR
    79                           	global	intlevel1
    80                           	FNROOT	intlevel1
    81                           	global	lcd_putnumber@F612
    82                           	global	_findScale
    83                           	global	_preScaleSelect
    84                           psect	idataBANK0,class=CODE,space=0,delta=2
    85                           global __pidataBANK0
    86  0F7E                     __pidataBANK0:
    87                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
    88                           	line	154
    89                           
    90                           ;initializer for lcd_putnumber@F612
    91  0F7E  342E               	retlw	02Eh
    92  0F7F  3400               	retlw	0
    93                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
    94                           	line	92
    95                           
    96                           ;initializer for _findScale
    97  0F80  3401               	retlw	01h
    98                           	line	50
    99                           
   100                           ;initializer for _preScaleSelect
   101  0F81  3407               	retlw	07h
   102                           	global	_HZ
   103                           psect	strings,class=STRING,delta=2
   104                           global __pstrings
   105  0239                     __pstrings:
   106                           ;	global	stringdir,stringtab,__stringbase
   107  0239                     stringtab:
   108                           ;	String table - string pointers are 1 byte each
   109  0239  1BFF               	btfsc	(btemp+1),7
   110  023A  2A43               	ljmp	stringcode
   111  023B  1383               	bcf	status,7
   112  023C  187F               	btfsc	(btemp+1),0
   113  023D  1783               	bsf	status,7
   114  023E  0800               	movf	indf,w
   115  023F  0A84               	incf fsr
   116  0240  1903               skipnz
   117  0241  0AFF               incf btemp+1
   118  0242  0008               	return
   119  0243                     stringcode:stringdir:
      + 0243                     stringdir:	
   120  0243  3002               movlw high(stringdir)
   121  0244  008A               movwf pclath
   122  0245  0804               movf fsr,w
   123  0246  0A84               incf fsr
   124  0247  0782               	addwf pc
   125  0248                     __stringbase:
   126  0248  3400               	retlw	0
   127                           psect	strings
   128                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
   129                           	line	49
   130  0249                     _HZ:
   131  0249  3420               	retlw	020h
   132  024A  3420               	retlw	020h
   133  024B  3420               	retlw	020h
   134  024C  3420               	retlw	020h
   135  024D  344B               	retlw	04Bh
   136  024E  344B               	retlw	04Bh
   137  024F  344B               	retlw	04Bh
   138  0250  344D               	retlw	04Dh
   139  0251  344D               	retlw	04Dh
   140  0252  344D               	retlw	04Dh
   141  0253  3447               	retlw	047h
   142  0254  3400               	retlw	0
   143                           	global	_prescaleExternalBits
   144                           psect	strings
   145                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
   146                           	line	64
   147  0255                     _prescaleExternalBits:
   148  0255  3400               	retlw	0
   149  0256  3400               	retlw	0
   150  0257  3400               	retlw	0
   151  0258  3400               	retlw	0
   152  0259  3400               	retlw	0
   153  025A  3400               	retlw	0
   154  025B  3400               	retlw	0
   155  025C  3400               	retlw	0
   156  025D  3401               	retlw	01h
   157  025E  3402               	retlw	02h
   158  025F  3403               	retlw	03h
   159                           	global	_prescaleExternalShift
   160                           psect	strings
   161                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
   162                           	line	65
   163  0260                     _prescaleExternalShift:
   164  0260  3400               	retlw	0
   165  0261  3400               	retlw	0
   166  0262  3400               	retlw	0
   167  0263  3400               	retlw	0
   168  0264  3400               	retlw	0
   169  0265  3400               	retlw	0
   170  0266  3400               	retlw	0
   171  0267  3400               	retlw	0
   172  0268  3406               	retlw	06h
   173  0269  3407               	retlw	07h
   174  026A  3408               	retlw	08h
   175                           	global	_prescaleInternalBits
   176                           psect	strings
   177                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
   178                           	line	62
   179  026B                     _prescaleInternalBits:
   180  026B  3400               	retlw	0
   181  026C  3401               	retlw	01h
   182  026D  3402               	retlw	02h
   183  026E  3403               	retlw	03h
   184  026F  3404               	retlw	04h
   185  0270  3405               	retlw	05h
   186  0271  3406               	retlw	06h
   187  0272  3407               	retlw	07h
   188  0273  3402               	retlw	02h
   189  0274  3402               	retlw	02h
   190  0275  3402               	retlw	02h
   191                           	global	_FREQ
   192                           psect	strings
   193                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
   194                           	line	90
   195  0276                     _FREQ:
   196  0276  340A               	retlw	0Ah
   197                           	global	_SCALE
   198                           psect	strings
   199                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
   200                           	line	91
   201  0277                     _SCALE:
   202  0277  3401               	retlw	01h
   203                           	global	_noinput
   204                           psect	strings
   205                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
   206                           	line	43
   207  0278                     _noinput:
   208  0278  342D               	retlw	02Dh
   209  0279  342D               	retlw	02Dh
   210  027A  342D               	retlw	02Dh
   211  027B  343E               	retlw	03Eh
   212  027C  344E               	retlw	04Eh
   213  027D  346F               	retlw	06Fh
   214  027E  3420               	retlw	020h
   215  027F  3469               	retlw	069h
   216  0280  346E               	retlw	06Eh
   217  0281  3470               	retlw	070h
   218  0282  3475               	retlw	075h
   219  0283  3474               	retlw	074h
   220  0284  343C               	retlw	03Ch
   221  0285  342D               	retlw	02Dh
   222  0286  342D               	retlw	02Dh
   223  0287  342D               	retlw	02Dh
   224  0288  3400               	retlw	0
   225                           	global	_version
   226                           psect	strings
   227                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
   228                           	line	42
   229  0289                     _version:
   230  0289  3448               	retlw	048h
   231  028A  347A               	retlw	07Ah
   232  028B  3420               	retlw	020h
   233  028C  3443               	retlw	043h
   234  028D  346F               	retlw	06Fh
   235  028E  3475               	retlw	075h
   236  028F  346E               	retlw	06Eh
   237  0290  3474               	retlw	074h
   238  0291  3465               	retlw	065h
   239  0292  3472               	retlw	072h
   240  0293  3420               	retlw	020h
   241  0294  3476               	retlw	076h
   242  0295  3431               	retlw	031h
   243  0296  342E               	retlw	02Eh
   244  0297  3431               	retlw	031h
   245  0298  3468               	retlw	068h
   246  0299  3400               	retlw	0
   247                           	global	_bands
   248                           psect	strings
   249                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
   250                           	line	67
   251  029A                     _bands:
   252  029A  34A0               	retlw	(STR_1-__stringbase)&0ffh
   253  029B  34A3               	retlw	(STR_2-__stringbase)&0ffh
   254  029C  349D               	retlw	(STR_3-__stringbase)&0ffh
   255  029D  34A6               	retlw	(STR_4-__stringbase)&0ffh
   256  029E  3491               	retlw	(STR_5-__stringbase)&0ffh
   257  029F  349A               	retlw	(STR_6-__stringbase)&0ffh
   258  02A0  3497               	retlw	(STR_7-__stringbase)&0ffh
   259  02A1  3494               	retlw	(STR_8-__stringbase)&0ffh
   260  02A2  348E               	retlw	(STR_9-__stringbase)&0ffh
   261  02A3  3400               	retlw	0
   262  02A4  3400               	retlw	0
   263  02A5  3400               	retlw	0
   264  02A6  3400               	retlw	0
   265  02A7  3400               	retlw	0
   266  02A8  3400               	retlw	0
   267  02A9  3400               	retlw	0
   268                           	global	_qbytes
   269                           psect	strings
   270                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
   271                           	line	41
   272  02AA                     _qbytes:
   273  02AA  3451               	retlw	051h
   274  02AB  342D               	retlw	02Dh
   275  02AC  3442               	retlw	042h
   276  02AD  3479               	retlw	079h
   277  02AE  3474               	retlw	074h
   278  02AF  3465               	retlw	065h
   279  02B0  3473               	retlw	073h
   280  02B1  3420               	retlw	020h
   281  02B2  3457               	retlw	057h
   282  02B3  346F               	retlw	06Fh
   283  02B4  3472               	retlw	072h
   284  02B5  346C               	retlw	06Ch
   285  02B6  3464               	retlw	064h
   286  02B7  342E               	retlw	02Eh
   287  02B8  3400               	retlw	0
   288                           	global	_prescaleInternalShift
   289                           psect	strings
   290                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
   291                           	line	63
   292  02B9                     _prescaleInternalShift:
   293  02B9  3401               	retlw	01h
   294  02BA  3402               	retlw	02h
   295  02BB  3403               	retlw	03h
   296  02BC  3404               	retlw	04h
   297  02BD  3405               	retlw	05h
   298  02BE  3406               	retlw	06h
   299  02BF  3407               	retlw	07h
   300  02C0  3408               	retlw	08h
   301  02C1  3403               	retlw	03h
   302  02C2  3403               	retlw	03h
   303  02C3  3403               	retlw	03h
   304                           	global	_HZ
   305                           	global	_prescaleExternalBits
   306                           	global	_prescaleExternalShift
   307                           	global	_prescaleInternalBits
   308                           	global	_FREQ
   309                           	global	_SCALE
   310                           	global	_noinput
   311                           	global	_version
   312                           	global	_bands
   313                           	global	_qbytes
   314                           	global	_prescaleInternalShift
   315                           	global	_TMR0cnt
   316                           	global	_divBy
   317                           	global	_number
   318                           	global	_preScaleValue
   319                           	global	_TMR1cnt
   320                           	global	_band
   321                           	global	_digit
   322                           	global	_sig
   323                           	global	_calcScaleValue
   324                           	global	_buffer
   325                           	global	_CMCON
   326  001F                     _CMCON	set	31
   327                           	global	_INTCON
   328  000B                     _INTCON	set	11
   329                           	global	_T1CON
   330  0010                     _T1CON	set	16
   331                           	global	_TMR0
   332  0001                     _TMR0	set	1
   333                           	global	_TMR1H
   334  000F                     _TMR1H	set	15
   335                           	global	_TMR1L
   336  000E                     _TMR1L	set	14
   337                           	global	_CARRY
   338  0018                     _CARRY	set	24
   339                           	global	_GIE
   340  005F                     _GIE	set	95
   341                           	global	_RA0
   342  0028                     _RA0	set	40
   343                           	global	_RA1
   344  0029                     _RA1	set	41
   345                           	global	_RA3
   346  002B                     _RA3	set	43
   347                           	global	_RB4
   348  0034                     _RB4	set	52
   349                           	global	_RB5
   350  0035                     _RB5	set	53
   351                           	global	_RB7
   352  0037                     _RB7	set	55
   353                           	global	_T0IE
   354  005D                     _T0IE	set	93
   355                           	global	_TMR0IF
   356  005A                     _TMR0IF	set	90
   357                           	global	_TMR1IF
   358  0060                     _TMR1IF	set	96
   359                           	global	_EEADR
   360  009B                     _EEADR	set	155
   361                           	global	_EECON1
   362  009C                     _EECON1	set	156
   363                           	global	_EECON2
   364  009D                     _EECON2	set	157
   365                           	global	_EEDATA
   366  009A                     _EEDATA	set	154
   367                           	global	_OPTION_REG
   368  0081                     _OPTION_REG	set	129
   369                           	global	_TRISA
   370  0085                     _TRISA	set	133
   371                           	global	_TRISB
   372  0086                     _TRISB	set	134
   373                           	global	_RD
   374  04E0                     _RD	set	1248
   375                           	global	_TMR1IE
   376  0460                     _TMR1IE	set	1120
   377                           	global	_WR
   378  04E1                     _WR	set	1249
   379                           	global	_WREN
   380  04E2                     _WREN	set	1250
   381                           	global	_PORTB
   382  0006                     _PORTB	set	6
   383                           	
   384  02C4                     STR_10:	
   385  02C4  346D               	retlw	109	;'m'
   386  02C5  3457               	retlw	87	;'W'
   387  02C6  342F               	retlw	47	;'/'
   388  02C7  3464               	retlw	100	;'d'
   389  02C8  3442               	retlw	66	;'B'
   390  02C9  3420               	retlw	32	;' '
   391  02CA  3400               	retlw	0
   392                           psect	strings
   393                           	
   394  02CB                     STR_13:	
   395  02CB  3420               	retlw	32	;' '
   396  02CC  3420               	retlw	32	;' '
   397  02CD  3420               	retlw	32	;' '
   398  02CE  3400               	retlw	0
   399                           psect	strings
   400                           	
   401  02CF                     STR_12:	
   402  02CF  3420               	retlw	32	;' '
   403  02D0  3431               	retlw	49	;'1'
   404  02D1  342F               	retlw	47	;'/'
   405  02D2  3400               	retlw	0
   406                           psect	strings
   407                           	
   408  02D3                     STR_16:	
   409  02D3  3448               	retlw	72	;'H'
   410  02D4  347A               	retlw	122	;'z'
   411  02D5  3400               	retlw	0
   412                           psect	strings
   413                           	
   414  02D6                     STR_9:	
   415  02D6  343F               	retlw	63	;'?'
   416  02D7  343F               	retlw	63	;'?'
   417  02D8  3400               	retlw	0
   418                           psect	strings
   419                           	
   420  02D9                     STR_5:	
   421  02D9  3420               	retlw	32	;' '
   422  02DA  3448               	retlw	72	;'H'
   423  02DB  3400               	retlw	0
   424                           psect	strings
   425                           	
   426  02DC                     STR_8:	
   427  02DC  3453               	retlw	83	;'S'
   428  02DD  3448               	retlw	72	;'H'
   429  02DE  3400               	retlw	0
   430                           psect	strings
   431                           	
   432  02DF                     STR_7:	
   433  02DF  3455               	retlw	85	;'U'
   434  02E0  3448               	retlw	72	;'H'
   435  02E1  3400               	retlw	0
   436                           psect	strings
   437                           	
   438  02E2                     STR_6:	
   439  02E2  3456               	retlw	86	;'V'
   440  02E3  3448               	retlw	72	;'H'
   441  02E4  3400               	retlw	0
   442                           psect	strings
   443                           	
   444  02E5                     STR_3:	
   445  02E5  3420               	retlw	32	;' '
   446  02E6  344C               	retlw	76	;'L'
   447  02E7  3400               	retlw	0
   448                           psect	strings
   449                           	
   450  02E8                     STR_1:	
   451  02E8  3445               	retlw	69	;'E'
   452  02E9  344C               	retlw	76	;'L'
   453  02EA  3400               	retlw	0
   454                           psect	strings
   455                           	
   456  02EB                     STR_2:	
   457  02EB  3456               	retlw	86	;'V'
   458  02EC  344C               	retlw	76	;'L'
   459  02ED  3400               	retlw	0
   460                           psect	strings
   461                           	
   462  02EE                     STR_4:	
   463  02EE  3420               	retlw	32	;' '
   464  02EF  344D               	retlw	77	;'M'
   465  02F0  3400               	retlw	0
   466                           psect	strings
   467                           	
   468  02F1                     STR_11:	
   469  02F1  3446               	retlw	70	;'F'
   470  02F2  3400               	retlw	0
   471                           psect	strings
   472  02CD                     STR_14	equ	STR_13+2
   473  02CD                     STR_15	equ	STR_13+2
   474                           	file	"C:\Users\davidq\AppData\Local\Temp\s5g4."
   475                           	line	#
   476                           psect cinit,class=CODE,delta=2
   477                           global start_initialization
   478  07E2                     start_initialization:
   479                           
   480                           psect	bssCOMMON,class=COMMON,space=1
   481                           global __pbssCOMMON
   482  0077                     __pbssCOMMON:
   483  0077                     _calcScaleValue:
   484  0077                            ds      3
   485                           
   486                           psect	bssBANK0,class=BANK0,space=1
   487                           global __pbssBANK0
   488  0041                     __pbssBANK0:
   489  0041                     _TMR0cnt:
   490  0041                            ds      4
   491                           
   492  0045                     _divBy:
   493  0045                            ds      4
   494                           
   495  0049                     _number:
   496  0049                            ds      4
   497                           
   498  004D                     _preScaleValue:
   499  004D                            ds      3
   500                           
   501  0050                     _TMR1cnt:
   502  0050                            ds      2
   503                           
   504  0052                     _band:
   505  0052                            ds      1
   506                           
   507  0053                     _digit:
   508  0053                            ds      1
   509                           
   510  0054                     _sig:
   511  0054                            ds      1
   512                           
   513  0055                     _buffer:
   514  0055                            ds      10
   515                           
   516                           psect	dataBANK0,class=BANK0,space=1
   517                           global __pdataBANK0
   518  005F                     __pdataBANK0:
   519                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
   520                           	line	154
   521  005F                     lcd_putnumber@F612:
   522  005F                            ds      2
   523                           
   524                           psect	dataBANK0
   525                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
   526                           	line	92
   527  0061                     _findScale:
   528  0061                            ds      1
   529                           
   530                           psect	dataBANK0
   531                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
   532                           	line	50
   533  0062                     _preScaleSelect:
   534  0062                            ds      1
   535                           
   536                           psect clrtext,class=CODE,delta=2
   537                           global clear_ram
   538                           ;	Called with FSR containing the base address, and
   539                           ;	W with the last address+1
   540  0F82                     clear_ram:
   541  0F82  0064               	clrwdt			;clear the watchdog before getting into this loop
   542  0F83                     clrloop:
   543  0F83  0180               	clrf	indf		;clear RAM location pointed to by FSR
   544  0F84  0A84               	incf	fsr,f		;increment pointer
   545  0F85  0604               	xorwf	fsr,w		;XOR with final address
   546  0F86  1903               	btfsc	status,2	;have we reached the end yet?
   547  0F87  3400               	retlw	0		;all done for this memory range, return
   548  0F88  0604               	xorwf	fsr,w		;XOR again to restore value
   549  0F89  2F83               	goto	clrloop		;do the next byte
   550                           
   551                           ; Clear objects allocated to COMMON
   552                           psect cinit,class=CODE,delta=2
   553  07E2  01F7               	clrf	((__pbssCOMMON)+0)&07Fh
   554  07E3  01F8               	clrf	((__pbssCOMMON)+1)&07Fh
   555  07E4  01F9               	clrf	((__pbssCOMMON)+2)&07Fh
   556                           ; Clear objects allocated to BANK0
   557                           psect cinit,class=CODE,delta=2
   558  07E5  1383               	bcf	status, 7	;select IRP bank0
   559  07E6  3041               	movlw	low(__pbssBANK0)
   560  07E7  0084               	movwf	fsr
   561  07E8  305F               	movlw	low((__pbssBANK0)+01Eh)
   562  07E9  158A  2782  118A   	fcall	clear_ram
   563                           ; Initialize objects allocated to BANK0
   564                           	global __pidataBANK0
   565                           psect cinit,class=CODE,delta=2
   566  07EC  158A  277E  118A   	fcall	__pidataBANK0+0		;fetch initializer
   567  07EF  00DF               	movwf	__pdataBANK0+0&07fh		
   568  07F0  158A  277F  118A   	fcall	__pidataBANK0+1		;fetch initializer
   569  07F3  00E0               	movwf	__pdataBANK0+1&07fh		
   570  07F4  158A  2780  118A   	fcall	__pidataBANK0+2		;fetch initializer
   571  07F7  00E1               	movwf	__pdataBANK0+2&07fh		
   572  07F8  158A  2781  118A   	fcall	__pidataBANK0+3		;fetch initializer
   573  07FB  00E2               	movwf	__pdataBANK0+3&07fh		
   574                           psect cinit,class=CODE,delta=2
   575                           global end_of_initialization
   576                           
   577                           ;End of C runtime variable initialization code
   578                           
   579  07FC                     end_of_initialization:
   580  07FC  0183               clrf status
   581  07FD  118A  2C2C         ljmp _main	;jump to C main() function
   582                           psect	cstackCOMMON,class=COMMON,space=1
   583                           global __pcstackCOMMON
   584  0070                     __pcstackCOMMON:
   585                           	global	?_lcd_goto
   586  0070                     ?_lcd_goto:	; 0 bytes @ 0x0
   587                           	global	?_lcd_init
   588  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   589                           	global	?_lcd_clear
   590  0070                     ?_lcd_clear:	; 0 bytes @ 0x0
   591                           	global	?_lcd_write
   592  0070                     ?_lcd_write:	; 0 bytes @ 0x0
   593                           	global	?_init
   594  0070                     ?_init:	; 0 bytes @ 0x0
   595                           	global	?_initTimer0
   596  0070                     ?_initTimer0:	; 0 bytes @ 0x0
   597                           	global	?_initTimer1
   598  0070                     ?_initTimer1:	; 0 bytes @ 0x0
   599                           	global	?_ISR
   600  0070                     ?_ISR:	; 0 bytes @ 0x0
   601                           	global	??_ISR
   602  0070                     ??_ISR:	; 0 bytes @ 0x0
   603                           	global	?_doScale
   604  0070                     ?_doScale:	; 0 bytes @ 0x0
   605                           	global	?_doFrequency
   606  0070                     ?_doFrequency:	; 0 bytes @ 0x0
   607                           	global	?_timersON
   608  0070                     ?_timersON:	; 0 bytes @ 0x0
   609                           	global	?_timersOFF
   610  0070                     ?_timersOFF:	; 0 bytes @ 0x0
   611                           	global	?_main
   612  0070                     ?_main:	; 0 bytes @ 0x0
   613                           	global	?_lcd_putdigit
   614  0070                     ?_lcd_putdigit:	; 0 bytes @ 0x0
   615  0070                     	ds	4
   616                           	global	??_lcd_write
   617  0074                     ??_lcd_write:	; 0 bytes @ 0x4
   618                           	global	??_init
   619  0074                     ??_init:	; 0 bytes @ 0x4
   620                           	global	??_initTimer1
   621  0074                     ??_initTimer1:	; 0 bytes @ 0x4
   622                           	global	??_timersON
   623  0074                     ??_timersON:	; 0 bytes @ 0x4
   624                           	global	??___lmul
   625  0074                     ??___lmul:	; 0 bytes @ 0x4
   626                           	global	??___llmod
   627  0074                     ??___llmod:	; 0 bytes @ 0x4
   628                           	global	??___lldiv
   629  0074                     ??___lldiv:	; 0 bytes @ 0x4
   630                           	global	??___awmod
   631  0074                     ??___awmod:	; 0 bytes @ 0x4
   632                           	global	??___tmul
   633  0074                     ??___tmul:	; 0 bytes @ 0x4
   634                           	global	___tmul@product
   635  0074                     ___tmul@product:	; 3 bytes @ 0x4
   636  0074                     	ds	1
   637                           	global	___llmod@counter
   638  0075                     ___llmod@counter:	; 1 bytes @ 0x5
   639                           	global	___awmod@counter
   640  0075                     ___awmod@counter:	; 1 bytes @ 0x5
   641  0075                     	ds	1
   642                           	global	??_ultoa
   643  0076                     ??_ultoa:	; 0 bytes @ 0x6
   644                           	global	lcd_write@c
   645  0076                     lcd_write@c:	; 1 bytes @ 0x6
   646                           	global	___awmod@sign
   647  0076                     ___awmod@sign:	; 1 bytes @ 0x6
   648  0076                     	ds	1
   649                           	global	??_lcd_goto
   650  0077                     ??_lcd_goto:	; 0 bytes @ 0x7
   651                           	global	??_lcd_puts
   652  0077                     ??_lcd_puts:	; 0 bytes @ 0x7
   653                           	global	??_lcd_putdigit
   654  0077                     ??_lcd_putdigit:	; 0 bytes @ 0x7
   655                           psect	cstackBANK0,class=BANK0,space=1
   656                           global __pcstackBANK0
   657  0020                     __pcstackBANK0:
   658                           	global	?_lcd_puts
   659  0020                     ?_lcd_puts:	; 0 bytes @ 0x0
   660                           	global	??_lcd_clear
   661  0020                     ??_lcd_clear:	; 0 bytes @ 0x0
   662                           	global	??_initTimer0
   663  0020                     ??_initTimer0:	; 0 bytes @ 0x0
   664                           	global	??_doScale
   665  0020                     ??_doScale:	; 0 bytes @ 0x0
   666                           	global	?___awmod
   667  0020                     ?___awmod:	; 2 bytes @ 0x0
   668                           	global	?___tmul
   669  0020                     ?___tmul:	; 3 bytes @ 0x0
   670                           	global	?___lmul
   671  0020                     ?___lmul:	; 4 bytes @ 0x0
   672                           	global	?___llmod
   673  0020                     ?___llmod:	; 4 bytes @ 0x0
   674                           	global	?___lldiv
   675  0020                     ?___lldiv:	; 4 bytes @ 0x0
   676                           	global	lcd_goto@pos
   677  0020                     lcd_goto@pos:	; 1 bytes @ 0x0
   678                           	global	lcd_putdigit@c
   679  0020                     lcd_putdigit@c:	; 1 bytes @ 0x0
   680                           	global	lcd_puts@s
   681  0020                     lcd_puts@s:	; 2 bytes @ 0x0
   682                           	global	___awmod@divisor
   683  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
   684                           	global	___tmul@multiplier
   685  0020                     ___tmul@multiplier:	; 3 bytes @ 0x0
   686                           	global	___lmul@multiplier
   687  0020                     ___lmul@multiplier:	; 4 bytes @ 0x0
   688                           	global	___llmod@divisor
   689  0020                     ___llmod@divisor:	; 4 bytes @ 0x0
   690                           	global	___lldiv@divisor
   691  0020                     ___lldiv@divisor:	; 4 bytes @ 0x0
   692  0020                     	ds	2
   693                           	global	??_lcd_init
   694  0022                     ??_lcd_init:	; 0 bytes @ 0x2
   695                           	global	___awmod@dividend
   696  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
   697  0022                     	ds	1
   698                           	global	___tmul@multiplicand
   699  0023                     ___tmul@multiplicand:	; 3 bytes @ 0x3
   700  0023                     	ds	1
   701                           	global	___lmul@multiplicand
   702  0024                     ___lmul@multiplicand:	; 4 bytes @ 0x4
   703                           	global	___llmod@dividend
   704  0024                     ___llmod@dividend:	; 4 bytes @ 0x4
   705                           	global	___lldiv@dividend
   706  0024                     ___lldiv@dividend:	; 4 bytes @ 0x4
   707  0024                     	ds	4
   708                           	global	___lmul@product
   709  0028                     ___lmul@product:	; 4 bytes @ 0x8
   710                           	global	___lldiv@quotient
   711  0028                     ___lldiv@quotient:	; 4 bytes @ 0x8
   712  0028                     	ds	4
   713                           	global	??_timersOFF
   714  002C                     ??_timersOFF:	; 0 bytes @ 0xC
   715                           	global	___lldiv@counter
   716  002C                     ___lldiv@counter:	; 1 bytes @ 0xC
   717  002C                     	ds	1
   718                           	global	?_lcd_putnumber
   719  002D                     ?_lcd_putnumber:	; 0 bytes @ 0xD
   720                           	global	?_ultoa
   721  002D                     ?_ultoa:	; 1 bytes @ 0xD
   722                           	global	lcd_putnumber@number
   723  002D                     lcd_putnumber@number:	; 4 bytes @ 0xD
   724                           	global	ultoa@val
   725  002D                     ultoa@val:	; 4 bytes @ 0xD
   726  002D                     	ds	4
   727                           	global	??_lcd_putnumber
   728  0031                     ??_lcd_putnumber:	; 0 bytes @ 0x11
   729                           	global	ultoa@base
   730  0031                     ultoa@base:	; 2 bytes @ 0x11
   731  0031                     	ds	2
   732                           	global	lcd_putnumber@displayHZ
   733  0033                     lcd_putnumber@displayHZ:	; 2 bytes @ 0x13
   734                           	global	ultoa@v
   735  0033                     ultoa@v:	; 4 bytes @ 0x13
   736  0033                     	ds	2
   737                           	global	lcd_putnumber@loop
   738  0035                     lcd_putnumber@loop:	; 2 bytes @ 0x15
   739  0035                     	ds	2
   740                           	global	ultoa@c
   741  0037                     ultoa@c:	; 1 bytes @ 0x17
   742  0037                     	ds	1
   743                           	global	ultoa@buf
   744  0038                     ultoa@buf:	; 1 bytes @ 0x18
   745  0038                     	ds	1
   746                           	global	??_doFrequency
   747  0039                     ??_doFrequency:	; 0 bytes @ 0x19
   748  0039                     	ds	4
   749                           	global	doFrequency@pBands
   750  003D                     doFrequency@pBands:	; 1 bytes @ 0x1D
   751  003D                     	ds	1
   752                           	global	??_main
   753  003E                     ??_main:	; 0 bytes @ 0x1E
   754  003E                     	ds	3
   755 ;;Data sizes: Strings 47, constant 123, data 4, bss 33, persistent 0 stack 0
   756 ;;Auto spaces:   Size  Autos    Used
   757 ;; COMMON          14      7      10
   758 ;; BANK0           80     33      67
   759 ;; BANK1           80      0       0
   760 ;; BANK2           80      0       0
   761                           
   762 ;;
   763 ;; Pointer list with targets:
   764                           
   765 ;; ?___awmod	int  size(1) Largest target is 0
   766 ;;
   767 ;; ?___llmod	unsigned long  size(1) Largest target is 11
   768 ;;		 -> prescaleInternalShift(CODE[11]), 
   769 ;;
   770 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   771 ;;
   772 ;; ?___tmul	unsigned um size(1) Largest target is 0
   773 ;;
   774 ;; ?_ultoa	PTR unsigned char  size(1) Largest target is 10
   775 ;;		 -> buffer(BANK0[10]), 
   776 ;;
   777 ;; ?___lmul	unsigned long  size(1) Largest target is 0
   778 ;;
   779 ;; ultoa@buf	PTR unsigned char  size(1) Largest target is 10
   780 ;;		 -> buffer(BANK0[10]), 
   781 ;;
   782 ;; sp__ltoa	PTR unsigned char  size(1) Largest target is 0
   783 ;;
   784 ;; lcd_puts@s	PTR const unsigned char  size(2) Largest target is 17
   785 ;;		 -> STR_16(CODE[3]), STR_15(CODE[2]), STR_14(CODE[2]), lcd_putnumber@displayHZ(BANK0[2]), 
   786 ;;		 -> version(CODE[17]), qbytes(CODE[15]), STR_13(CODE[4]), buffer(BANK0[10]), 
   787 ;;		 -> STR_12(CODE[4]), STR_11(CODE[2]), STR_10(CODE[7]), noinput(CODE[17]), 
   788 ;;		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 
   789 ;;		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
   790 ;;		 -> STR_1(CODE[3]), 
   791 ;;
   792 ;; sp__ultoa	PTR unsigned char  size(1) Largest target is 10
   793 ;;		 -> buffer(BANK0[10]), 
   794 ;;
   795 ;; doFrequency@pBands	PTR PTR unsigned char  size(1) Largest target is 16
   796 ;;		 -> bands(CODE[16]), 
   797 ;;
   798 ;; bands	const PTR const unsigned char [2][8] size(1) Largest target is 3
   799 ;;		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 
   800 ;;		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
   801 ;;		 -> STR_1(CODE[3]), 
   802 ;;
   803                           
   804                           
   805 ;;
   806 ;; Critical Paths under _main in COMMON
   807 ;;
   808 ;;   _doFrequency->_ultoa
   809 ;;   _lcd_init->_lcd_write
   810 ;;   _lcd_putnumber->___awmod
   811 ;;   _lcd_putdigit->_lcd_write
   812 ;;   _lcd_clear->_lcd_write
   813 ;;   _lcd_puts->_lcd_write
   814 ;;   _lcd_goto->_lcd_write
   815 ;;   _timersOFF->___tmul
   816 ;;   _ultoa->___llmod
   817 ;;
   818 ;; Critical Paths under _ISR in COMMON
   819 ;;
   820 ;;   None.
   821 ;;
   822 ;; Critical Paths under _main in BANK0
   823 ;;
   824 ;;   _main->_doFrequency
   825 ;;   _doFrequency->_ultoa
   826 ;;   _lcd_init->_lcd_clear
   827 ;;   _lcd_putnumber->___lldiv
   828 ;;   _timersOFF->___lmul
   829 ;;   _timersON->_initTimer0
   830 ;;   _ultoa->___lldiv
   831 ;;
   832 ;; Critical Paths under _ISR in BANK0
   833 ;;
   834 ;;   None.
   835 ;;
   836 ;; Critical Paths under _main in BANK1
   837 ;;
   838 ;;   None.
   839 ;;
   840 ;; Critical Paths under _ISR in BANK1
   841 ;;
   842 ;;   None.
   843 ;;
   844 ;; Critical Paths under _main in BANK2
   845 ;;
   846 ;;   None.
   847 ;;
   848 ;; Critical Paths under _ISR in BANK2
   849 ;;
   850 ;;   None.
   851                           
   852 ;;
   853 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   854 ;;
   855                           
   856 ;;
   857 ;;Call Graph Tables:
   858 ;;
   859 ;; ---------------------------------------------------------------------------------
   860 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   861 ;; ---------------------------------------------------------------------------------
   862 ;; (0) _main                                                 3     3      0    3295
   863 ;;                                             30 BANK0      3     3      0
   864 ;;                               _init
   865 ;;                           _lcd_init
   866 ;;                           _timersON
   867 ;;                           _lcd_puts
   868 ;;                           _lcd_goto
   869 ;;                          _lcd_clear
   870 ;;                          _timersOFF
   871 ;;                            _doScale
   872 ;;                        _doFrequency
   873 ;; ---------------------------------------------------------------------------------
   874 ;; (1) _doFrequency                                          5     5      0    2617
   875 ;;                                             25 BANK0      5     5      0
   876 ;;                           _lcd_goto
   877 ;;                      _lcd_putnumber
   878 ;;                           _lcd_puts
   879 ;;                             ___lmul
   880 ;;                              _ultoa
   881 ;; ---------------------------------------------------------------------------------
   882 ;; (1) _lcd_init                                             3     3      0     124
   883 ;;                                              2 BANK0      3     3      0
   884 ;;                          _lcd_write
   885 ;;                          _lcd_clear
   886 ;; ---------------------------------------------------------------------------------
   887 ;; (2) _lcd_putnumber                                       10     6      4    1387
   888 ;;                                             13 BANK0     10     6      4
   889 ;;                            ___lldiv
   890 ;;                            ___llmod
   891 ;;                       _lcd_putdigit
   892 ;;                            ___awmod
   893 ;;                           _lcd_puts
   894 ;; ---------------------------------------------------------------------------------
   895 ;; (3) _lcd_putdigit                                         1     1      0      93
   896 ;;                                              0 BANK0      1     1      0
   897 ;;                          _lcd_write
   898 ;; ---------------------------------------------------------------------------------
   899 ;; (1) _lcd_clear                                            2     2      0      62
   900 ;;                                              0 BANK0      2     2      0
   901 ;;                          _lcd_write
   902 ;; ---------------------------------------------------------------------------------
   903 ;; (2) _lcd_puts                                             2     0      2     127
   904 ;;                                              0 BANK0      2     0      2
   905 ;;                          _lcd_write
   906 ;; ---------------------------------------------------------------------------------
   907 ;; (2) _lcd_goto                                             1     1      0      93
   908 ;;                                              0 BANK0      1     1      0
   909 ;;                          _lcd_write
   910 ;; ---------------------------------------------------------------------------------
   911 ;; (3) _lcd_write                                            3     3      0      62
   912 ;;                                              4 COMMON     3     3      0
   913 ;; ---------------------------------------------------------------------------------
   914 ;; (1) _timersOFF                                           10    10      0     272
   915 ;;                                             12 BANK0     10    10      0
   916 ;;                             ___tmul
   917 ;;                             ___lmul
   918 ;; ---------------------------------------------------------------------------------
   919 ;; (1) _timersON                                             0     0      0       0
   920 ;;                         _initTimer0
   921 ;;                         _initTimer1
   922 ;; ---------------------------------------------------------------------------------
   923 ;; (2) _ultoa                                               13     7      6     837
   924 ;;                                              6 COMMON     1     1      0
   925 ;;                                             13 BANK0     12     6      6
   926 ;;                            ___lldiv
   927 ;;                            ___llmod
   928 ;; ---------------------------------------------------------------------------------
   929 ;; (2) ___tmul                                               9     3      6     136
   930 ;;                                              4 COMMON     3     3      0
   931 ;;                                              0 BANK0      6     0      6
   932 ;; ---------------------------------------------------------------------------------
   933 ;; (3) ___awmod                                              7     3      4     433
   934 ;;                                              4 COMMON     3     3      0
   935 ;;                                              0 BANK0      4     0      4
   936 ;; ---------------------------------------------------------------------------------
   937 ;; (3) ___lldiv                                             14     6      8     241
   938 ;;                                              4 COMMON     1     1      0
   939 ;;                                              0 BANK0     13     5      8
   940 ;; ---------------------------------------------------------------------------------
   941 ;; (3) ___llmod                                             10     2      8     159
   942 ;;                                              4 COMMON     2     2      0
   943 ;;                                              0 BANK0      8     0      8
   944 ;; ---------------------------------------------------------------------------------
   945 ;; (2) ___lmul                                              13     5      8     136
   946 ;;                                              4 COMMON     1     1      0
   947 ;;                                              0 BANK0     12     4      8
   948 ;; ---------------------------------------------------------------------------------
   949 ;; (2) _doScale                                              4     4      0       0
   950 ;;                                              0 BANK0      4     4      0
   951 ;; ---------------------------------------------------------------------------------
   952 ;; (2) _initTimer1                                           0     0      0       0
   953 ;; ---------------------------------------------------------------------------------
   954 ;; (3) _initTimer0                                           4     4      0       0
   955 ;;                                              0 BANK0      4     4      0
   956 ;; ---------------------------------------------------------------------------------
   957 ;; (1) _init                                                 0     0      0       0
   958 ;; ---------------------------------------------------------------------------------
   959 ;; Estimated maximum stack depth 3
   960 ;; ---------------------------------------------------------------------------------
   961 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   962 ;; ---------------------------------------------------------------------------------
   963 ;; (5) _ISR                                                  4     4      0       0
   964 ;;                                              0 COMMON     4     4      0
   965 ;; ---------------------------------------------------------------------------------
   966 ;; Estimated maximum stack depth 5
   967 ;; ---------------------------------------------------------------------------------
   968                           
   969 ;; Call Graph Graphs:
   970                           
   971 ;; _main (ROOT)
   972 ;;   _init
   973 ;;   _lcd_init
   974 ;;     _lcd_write
   975 ;;     _lcd_clear
   976 ;;       _lcd_write
   977 ;;   _timersON
   978 ;;     _initTimer0
   979 ;;     _initTimer1
   980 ;;   _lcd_puts
   981 ;;     _lcd_write
   982 ;;   _lcd_goto
   983 ;;     _lcd_write
   984 ;;   _lcd_clear
   985 ;;     _lcd_write
   986 ;;   _timersOFF
   987 ;;     ___tmul
   988 ;;     ___lmul
   989 ;;   _doScale
   990 ;;   _doFrequency
   991 ;;     _lcd_goto
   992 ;;       _lcd_write
   993 ;;     _lcd_putnumber
   994 ;;       ___lldiv
   995 ;;       ___llmod
   996 ;;       _lcd_putdigit
   997 ;;         _lcd_write
   998 ;;       ___awmod
   999 ;;       _lcd_puts
  1000 ;;         _lcd_write
  1001 ;;     _lcd_puts
  1002 ;;       _lcd_write
  1003 ;;     ___lmul
  1004 ;;     _ultoa
  1005 ;;       ___lldiv
  1006 ;;       ___llmod
  1007 ;;
  1008 ;; _ISR (ROOT)
  1009 ;;
  1010                           
  1011 ;; Address spaces:
  1012                           
  1013 ;;Name               Size   Autos  Total    Cost      Usage
  1014 ;;SFR3                 0      0       0       4        0.0%
  1015 ;;BITSFR3              0      0       0       4        0.0%
  1016 ;;BANK2               50      0       0       7        0.0%
  1017 ;;BITBANK2            50      0       0       6        0.0%
  1018 ;;SFR2                 0      0       0       5        0.0%
  1019 ;;BITSFR2              0      0       0       5        0.0%
  1020 ;;SFR1                 0      0       0       2        0.0%
  1021 ;;BITSFR1              0      0       0       2        0.0%
  1022 ;;BANK1               50      0       0       5        0.0%
  1023 ;;BITBANK1            50      0       0       4        0.0%
  1024 ;;CODE                 0      0       0       0        0.0%
  1025 ;;DATA                 0      0      51      10        0.0%
  1026 ;;ABS                  0      0      4D       8        0.0%
  1027 ;;NULL                 0      0       0       0        0.0%
  1028 ;;STACK                0      0       4       2        0.0%
  1029 ;;BANK0               50     21      43       3       83.8%
  1030 ;;BITBANK0            50      0       0       9        0.0%
  1031 ;;SFR0                 0      0       0       1        0.0%
  1032 ;;BITSFR0              0      0       0       1        0.0%
  1033 ;;COMMON               E      7       A       1       71.4%
  1034 ;;BITCOMMON            E      0       0       0        0.0%
  1035 ;;EEDATA             100      0       0       0        0.0%
  1036                           
  1037                           	global	_main
  1038                           psect	maintext,global,class=CODE,delta=2
  1039                           global __pmaintext
  1040  042C                     __pmaintext:
  1041                           
  1042 ;; *************** function _main *****************
  1043 ;; Defined at:
  1044 ;;		line 410 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;		None               void
  1051 ;; Registers used:
  1052 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 17F/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1058 ;;      Params:         0       0       0       0
  1059 ;;      Locals:         0       0       0       0
  1060 ;;      Temps:          0       3       0       0
  1061 ;;      Totals:         0       3       0       0
  1062 ;;Total ram usage:        3 bytes
  1063 ;; Hardware stack levels required when called:    5
  1064 ;; This function calls:
  1065 ;;		_init
  1066 ;;		_lcd_init
  1067 ;;		_timersON
  1068 ;;		_lcd_puts
  1069 ;;		_lcd_goto
  1070 ;;		_lcd_clear
  1071 ;;		_timersOFF
  1072 ;;		_doScale
  1073 ;;		_doFrequency
  1074 ;; This function is called by:
  1075 ;;		Startup code after reset
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           psect	maintext
  1079                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  1080                           	line	410
  1081                           	global	__size_of_main
  1082  0077                     	__size_of_main	equ	__end_of_main-_main
  1083                           	
  1084  042C                     _main:	
  1085                           	opt	stack 3
  1086                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1087                           	line	413
  1088                           	
  1089  042C                     l3900:	
  1090                           ;blink.c: 413: init();
  1091  042C  158A  278A  118A   	fcall	_init
  1092                           	line	414
  1093                           ;blink.c: 414: lcd_init();
  1094  042F  118A  26B5  118A   	fcall	_lcd_init
  1095                           	line	416
  1096                           	
  1097  0432                     l3902:	
  1098                           ;blink.c: 416: timersON();
  1099  0432  158A  27C7  118A   	fcall	_timersON
  1100                           	line	418
  1101                           	
  1102  0435                     l3904:	
  1103                           ;blink.c: 418: lcd_puts(&qbytes);
  1104  0435  3062               	movlw	low((_qbytes-__stringbase))
  1105  0436  1283               	bcf	status, 5	;RP0=0, select bank0
  1106  0437  1303               	bcf	status, 6	;RP1=0, select bank0
  1107  0438  00A0               	movwf	(?_lcd_puts)
  1108  0439  3080               	movlw	80h
  1109  043A  00A1               	movwf	(?_lcd_puts+1)
  1110  043B  118A  27BD  118A   	fcall	_lcd_puts
  1111                           	line	420
  1112                           	
  1113  043E                     l3906:	
  1114                           ;blink.c: 420: lcd_goto(0x40);
  1115  043E  3040               	movlw	(040h)
  1116  043F  158A  2794  118A   	fcall	_lcd_goto
  1117                           	line	421
  1118                           	
  1119  0442                     l3908:	
  1120                           ;blink.c: 421: lcd_puts(&version);
  1121  0442  3041               	movlw	low((_version-__stringbase))
  1122  0443  1283               	bcf	status, 5	;RP0=0, select bank0
  1123  0444  1303               	bcf	status, 6	;RP1=0, select bank0
  1124  0445  00A0               	movwf	(?_lcd_puts)
  1125  0446  3080               	movlw	80h
  1126  0447  00A1               	movwf	(?_lcd_puts+1)
  1127  0448  118A  27BD  118A   	fcall	_lcd_puts
  1128                           	line	423
  1129                           	
  1130  044B                     l3910:	
  1131                           ;blink.c: 423: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1132                           	opt asmopt_off
  1133  044B  3033               movlw  51
  1134  044C  1283               	bcf	status, 5	;RP0=0, select bank0
  1135  044D  1303               	bcf	status, 6	;RP1=0, select bank0
  1136  044E  00C0               movwf	((??_main+0)+0+2),f
  1137  044F  30BC               movlw	188
  1138  0450  00BF               movwf	((??_main+0)+0+1),f
  1139  0451  3010               	movlw	16
  1140  0452  00BE               movwf	((??_main+0)+0),f
  1141  0453                     u3987:
  1142  0453  0BBE               	decfsz	((??_main+0)+0),f
  1143  0454  2C53               	goto	u3987
  1144  0455  0BBF               	decfsz	((??_main+0)+0+1),f
  1145  0456  2C53               	goto	u3987
  1146  0457  0BC0               	decfsz	((??_main+0)+0+2),f
  1147  0458  2C53               	goto	u3987
  1148                           opt asmopt_on
  1149                           
  1150                           	line	425
  1151                           	
  1152  0459                     l3912:	
  1153                           ;blink.c: 425: lcd_clear();
  1154  0459  158A  27B4  118A   	fcall	_lcd_clear
  1155  045C  2C5F               	goto	l3914
  1156                           	line	428
  1157                           ;blink.c: 428: while(1)
  1158                           	
  1159  045D                     l464:	
  1160                           	line	430
  1161                           ;blink.c: 429: {
  1162                           ;blink.c: 430: while (TMR1cnt < findScale) {}
  1163  045D  2C5F               	goto	l3914
  1164                           	
  1165  045E                     l466:	
  1166  045E  2C5F               	goto	l3914
  1167                           	
  1168  045F                     l465:	
  1169                           	
  1170  045F                     l3914:	
  1171  045F  1283               	bcf	status, 5	;RP0=0, select bank0
  1172  0460  1303               	bcf	status, 6	;RP1=0, select bank0
  1173  0461  0851               	movf	(_TMR1cnt+1),w
  1174  0462  3A80               	xorlw	80h
  1175  0463  00BE               	movwf	(??_main+0)+0
  1176  0464  3080               	movlw	80h
  1177  0465  023E               	subwf	(??_main+0)+0,w
  1178  0466  1D03               	skipz
  1179  0467  2C6A               	goto	u3965
  1180  0468  0861               	movf	(_findScale),w
  1181  0469  0250               	subwf	(_TMR1cnt),w
  1182  046A                     u3965:
  1183                           
  1184  046A  1C03               	skipc
  1185  046B  2C6D               	goto	u3961
  1186  046C  2C6E               	goto	u3960
  1187  046D                     u3961:
  1188  046D  2C5F               	goto	l3914
  1189  046E                     u3960:
  1190  046E  2C6F               	goto	l3916
  1191                           	
  1192  046F                     l467:	
  1193                           	line	432
  1194                           	
  1195  046F                     l3916:	
  1196                           ;blink.c: 431: {
  1197                           ;blink.c: 432: timersOFF();
  1198  046F  118A  2585  118A   	fcall	_timersOFF
  1199                           	line	434
  1200                           	
  1201  0472                     l3918:	
  1202                           ;blink.c: 434: if (findScale == SCALE)
  1203  0472  302F               	movlw	(_SCALE-__stringbase)
  1204  0473  0084               	movwf	fsr0
  1205  0474  118A  2243  118A   	fcall	stringdir
  1206  0477  1283               	bcf	status, 5	;RP0=0, select bank0
  1207  0478  1303               	bcf	status, 6	;RP1=0, select bank0
  1208  0479  00BE               	movwf	(??_main+0)+0
  1209  047A  0861               	movf	(_findScale),w
  1210  047B  063E               	xorwf	(??_main+0)+0,w
  1211  047C  1D03               	skipz
  1212  047D  2C7F               	goto	u3971
  1213  047E  2C80               	goto	u3970
  1214  047F                     u3971:
  1215  047F  2C8E               	goto	l3924
  1216  0480                     u3970:
  1217                           	line	436
  1218                           	
  1219  0480                     l3920:	
  1220                           ;blink.c: 435: {
  1221                           ;blink.c: 436: doScale();
  1222  0480  118A  22F3  118A   	fcall	_doScale
  1223                           	line	437
  1224                           	
  1225  0483                     l3922:	
  1226                           ;blink.c: 437: findScale=FREQ;
  1227  0483  302E               	movlw	(_FREQ-__stringbase)
  1228  0484  0084               	movwf	fsr0
  1229  0485  118A  2243  118A   	fcall	stringdir
  1230  0488  1283               	bcf	status, 5	;RP0=0, select bank0
  1231  0489  1303               	bcf	status, 6	;RP1=0, select bank0
  1232  048A  00BE               	movwf	(??_main+0)+0
  1233  048B  083E               	movf	(??_main+0)+0,w
  1234  048C  00E1               	movwf	(_findScale)
  1235                           	line	438
  1236                           ;blink.c: 438: }
  1237  048D  2C9C               	goto	l3928
  1238                           	line	439
  1239                           	
  1240  048E                     l468:	
  1241                           	line	441
  1242                           	
  1243  048E                     l3924:	
  1244                           ;blink.c: 439: else
  1245                           ;blink.c: 440: {
  1246                           ;blink.c: 441: doFrequency();
  1247  048E  118A  213A  118A   	fcall	_doFrequency
  1248                           	line	442
  1249                           	
  1250  0491                     l3926:	
  1251                           ;blink.c: 442: findScale=SCALE;
  1252  0491  302F               	movlw	(_SCALE-__stringbase)
  1253  0492  0084               	movwf	fsr0
  1254  0493  118A  2243  118A   	fcall	stringdir
  1255  0496  1283               	bcf	status, 5	;RP0=0, select bank0
  1256  0497  1303               	bcf	status, 6	;RP1=0, select bank0
  1257  0498  00BE               	movwf	(??_main+0)+0
  1258  0499  083E               	movf	(??_main+0)+0,w
  1259  049A  00E1               	movwf	(_findScale)
  1260  049B  2C9C               	goto	l3928
  1261                           	line	446
  1262                           	
  1263  049C                     l469:	
  1264                           	line	448
  1265                           	
  1266  049C                     l3928:	
  1267                           ;blink.c: 446: }
  1268                           ;blink.c: 448: timersON();
  1269  049C  158A  27C7  118A   	fcall	_timersON
  1270  049F  2C5F               	goto	l3914
  1271                           	line	450
  1272                           	
  1273  04A0                     l470:	
  1274                           	line	428
  1275  04A0  2C5F               	goto	l3914
  1276                           	
  1277  04A1                     l471:	
  1278                           	line	451
  1279                           	
  1280  04A1                     l472:	
  1281                           	global	start
  1282  04A1  118A  2811         	ljmp	start
  1283                           	opt stack 0
  1284                           GLOBAL	__end_of_main
  1285  04A3                     	__end_of_main:
  1286 ;; =============== function _main ends ============
  1287                           
  1288                           	signat	_main,88
  1289                           	global	_doFrequency
  1290                           psect	text782,local,class=CODE,delta=2
  1291                           global __ptext782
  1292  013A                     __ptext782:
  1293                           
  1294 ;; *************** function _doFrequency *****************
  1295 ;; Defined at:
  1296 ;;		line 309 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;		None
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  pBands          1   29[BANK0 ] PTR PTR unsigned char 
  1301 ;;		 -> bands(16), 
  1302 ;; Return value:  Size  Location     Type
  1303 ;;		None               void
  1304 ;; Registers used:
  1305 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1311 ;;      Params:         0       0       0       0
  1312 ;;      Locals:         0       1       0       0
  1313 ;;      Temps:          0       4       0       0
  1314 ;;      Totals:         0       5       0       0
  1315 ;;Total ram usage:        5 bytes
  1316 ;; Hardware stack levels used:    1
  1317 ;; Hardware stack levels required when called:    4
  1318 ;; This function calls:
  1319 ;;		_lcd_goto
  1320 ;;		_lcd_putnumber
  1321 ;;		_lcd_puts
  1322 ;;		___lmul
  1323 ;;		_ultoa
  1324 ;; This function is called by:
  1325 ;;		_main
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           psect	text782
  1329                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  1330                           	line	309
  1331                           	global	__size_of_doFrequency
  1332  00FF                     	__size_of_doFrequency	equ	__end_of_doFrequency-_doFrequency
  1333                           	
  1334  013A                     _doFrequency:	
  1335                           	opt	stack 3
  1336                           ; Regs used in _doFrequency: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1337                           	line	310
  1338                           	
  1339  013A                     l3848:	
  1340                           ;blink.c: 310: TMR1cnt = TMR0cnt;
  1341  013A  1283               	bcf	status, 5	;RP0=0, select bank0
  1342  013B  1303               	bcf	status, 6	;RP1=0, select bank0
  1343  013C  0842               	movf	(_TMR0cnt+1),w
  1344  013D  01D1               	clrf	(_TMR1cnt+1)
  1345  013E  07D1               	addwf	(_TMR1cnt+1)
  1346  013F  0841               	movf	(_TMR0cnt),w
  1347  0140  01D0               	clrf	(_TMR1cnt)
  1348  0141  07D0               	addwf	(_TMR1cnt)
  1349                           
  1350                           	line	312
  1351                           	
  1352  0142                     l3850:	
  1353                           ;blink.c: 312: lcd_goto(0);
  1354  0142  3000               	movlw	(0)
  1355  0143  158A  2794  118A   	fcall	_lcd_goto
  1356                           	line	314
  1357                           	
  1358  0146                     l3852:	
  1359                           ;blink.c: 314: if (number != 0)
  1360  0146  1283               	bcf	status, 5	;RP0=0, select bank0
  1361  0147  1303               	bcf	status, 6	;RP1=0, select bank0
  1362  0148  084C               	movf	(_number+3),w
  1363  0149  044B               	iorwf	(_number+2),w
  1364  014A  044A               	iorwf	(_number+1),w
  1365  014B  0449               	iorwf	(_number),w
  1366  014C  1903               	skipnz
  1367  014D  294F               	goto	u3901
  1368  014E  2950               	goto	u3900
  1369  014F                     u3901:
  1370  014F  295C               	goto	l3856
  1371  0150                     u3900:
  1372                           	line	316
  1373                           	
  1374  0150                     l3854:	
  1375                           ;blink.c: 315: {
  1376                           ;blink.c: 316: lcd_putnumber(number);
  1377  0150  084C               	movf	(_number+3),w
  1378  0151  00B0               	movwf	(?_lcd_putnumber+3)
  1379  0152  084B               	movf	(_number+2),w
  1380  0153  00AF               	movwf	(?_lcd_putnumber+2)
  1381  0154  084A               	movf	(_number+1),w
  1382  0155  00AE               	movwf	(?_lcd_putnumber+1)
  1383  0156  0849               	movf	(_number),w
  1384  0157  00AD               	movwf	(?_lcd_putnumber)
  1385                           
  1386  0158  118A  2013  118A   	fcall	_lcd_putnumber
  1387                           	line	317
  1388                           ;blink.c: 317: }
  1389  015B  2966               	goto	l3858
  1390                           	line	318
  1391                           	
  1392  015C                     l450:	
  1393                           	line	320
  1394                           	
  1395  015C                     l3856:	
  1396                           ;blink.c: 318: else
  1397                           ;blink.c: 319: {
  1398                           ;blink.c: 320: lcd_puts(&noinput);
  1399  015C  3030               	movlw	low((_noinput-__stringbase))
  1400  015D  1283               	bcf	status, 5	;RP0=0, select bank0
  1401  015E  1303               	bcf	status, 6	;RP1=0, select bank0
  1402  015F  00A0               	movwf	(?_lcd_puts)
  1403  0160  3080               	movlw	80h
  1404  0161  00A1               	movwf	(?_lcd_puts+1)
  1405  0162  118A  27BD  118A   	fcall	_lcd_puts
  1406  0165  2966               	goto	l3858
  1407                           	line	321
  1408                           	
  1409  0166                     l451:	
  1410                           	line	324
  1411                           	
  1412  0166                     l3858:	
  1413                           ;blink.c: 321: }
  1414                           ;blink.c: 324: lcd_goto(0x40);
  1415  0166  3040               	movlw	(040h)
  1416  0167  158A  2794  118A   	fcall	_lcd_goto
  1417                           	line	328
  1418                           	
  1419  016A                     l3860:	
  1420                           ;blink.c: 328: TMR0cnt = 3000;
  1421  016A  3000               	movlw	0
  1422  016B  1283               	bcf	status, 5	;RP0=0, select bank0
  1423  016C  1303               	bcf	status, 6	;RP1=0, select bank0
  1424  016D  00C4               	movwf	(_TMR0cnt+3)
  1425  016E  3000               	movlw	0
  1426  016F  00C3               	movwf	(_TMR0cnt+2)
  1427  0170  300B               	movlw	0Bh
  1428  0171  00C2               	movwf	(_TMR0cnt+1)
  1429  0172  30B8               	movlw	0B8h
  1430  0173  00C1               	movwf	(_TMR0cnt)
  1431                           
  1432                           	line	329
  1433                           	
  1434  0174                     l3862:	
  1435                           ;blink.c: 329: for (band = 0;band <= 7; band ++)
  1436  0174  01D2               	clrf	(_band)
  1437                           	
  1438  0175                     l3864:	
  1439  0175  3008               	movlw	(08h)
  1440  0176  0252               	subwf	(_band),w
  1441  0177  1C03               	skipc
  1442  0178  297A               	goto	u3911
  1443  0179  297B               	goto	u3910
  1444  017A                     u3911:
  1445  017A  297D               	goto	l3868
  1446  017B                     u3910:
  1447  017B  29B9               	goto	l3878
  1448                           	
  1449  017C                     l3866:	
  1450  017C  29B9               	goto	l3878
  1451                           	line	330
  1452                           	
  1453  017D                     l452:	
  1454                           	line	331
  1455                           	
  1456  017D                     l3868:	
  1457                           ;blink.c: 330: {
  1458                           ;blink.c: 331: if (number < TMR0cnt)
  1459  017D  0844               	movf	(_TMR0cnt+3),w
  1460  017E  024C               	subwf	(_number+3),w
  1461  017F  1D03               	skipz
  1462  0180  298B               	goto	u3925
  1463  0181  0843               	movf	(_TMR0cnt+2),w
  1464  0182  024B               	subwf	(_number+2),w
  1465  0183  1D03               	skipz
  1466  0184  298B               	goto	u3925
  1467  0185  0842               	movf	(_TMR0cnt+1),w
  1468  0186  024A               	subwf	(_number+1),w
  1469  0187  1D03               	skipz
  1470  0188  298B               	goto	u3925
  1471  0189  0841               	movf	(_TMR0cnt),w
  1472  018A  0249               	subwf	(_number),w
  1473  018B                     u3925:
  1474  018B  1803               	skipnc
  1475  018C  298E               	goto	u3921
  1476  018D  298F               	goto	u3920
  1477  018E                     u3921:
  1478  018E  2991               	goto	l3872
  1479  018F                     u3920:
  1480  018F  29B9               	goto	l3878
  1481                           	line	333
  1482                           	
  1483  0190                     l3870:	
  1484                           ;blink.c: 332: {
  1485                           ;blink.c: 333: break;
  1486  0190  29B9               	goto	l3878
  1487                           	line	334
  1488                           	
  1489  0191                     l454:	
  1490                           	line	335
  1491                           	
  1492  0191                     l3872:	
  1493                           ;blink.c: 334: }
  1494                           ;blink.c: 335: TMR0cnt *=10;
  1495  0191  3000               	movlw	0
  1496  0192  00A3               	movwf	(?___lmul+3)
  1497  0193  3000               	movlw	0
  1498  0194  00A2               	movwf	(?___lmul+2)
  1499  0195  3000               	movlw	0
  1500  0196  00A1               	movwf	(?___lmul+1)
  1501  0197  300A               	movlw	0Ah
  1502  0198  00A0               	movwf	(?___lmul)
  1503                           
  1504  0199  0844               	movf	(_TMR0cnt+3),w
  1505  019A  00A7               	movwf	3+(?___lmul)+04h
  1506  019B  0843               	movf	(_TMR0cnt+2),w
  1507  019C  00A6               	movwf	2+(?___lmul)+04h
  1508  019D  0842               	movf	(_TMR0cnt+1),w
  1509  019E  00A5               	movwf	1+(?___lmul)+04h
  1510  019F  0841               	movf	(_TMR0cnt),w
  1511  01A0  00A4               	movwf	0+(?___lmul)+04h
  1512                           
  1513  01A1  118A  2704  118A   	fcall	___lmul
  1514  01A4  1283               	bcf	status, 5	;RP0=0, select bank0
  1515  01A5  1303               	bcf	status, 6	;RP1=0, select bank0
  1516  01A6  0823               	movf	(3+(?___lmul)),w
  1517  01A7  00C4               	movwf	(_TMR0cnt+3)
  1518  01A8  0822               	movf	(2+(?___lmul)),w
  1519  01A9  00C3               	movwf	(_TMR0cnt+2)
  1520  01AA  0821               	movf	(1+(?___lmul)),w
  1521  01AB  00C2               	movwf	(_TMR0cnt+1)
  1522  01AC  0820               	movf	(0+(?___lmul)),w
  1523  01AD  00C1               	movwf	(_TMR0cnt)
  1524                           
  1525                           	line	329
  1526                           	
  1527  01AE                     l3874:	
  1528  01AE  3001               	movlw	(01h)
  1529  01AF  00B9               	movwf	(??_doFrequency+0)+0
  1530  01B0  0839               	movf	(??_doFrequency+0)+0,w
  1531  01B1  07D2               	addwf	(_band),f
  1532                           	
  1533  01B2                     l3876:	
  1534  01B2  3008               	movlw	(08h)
  1535  01B3  0252               	subwf	(_band),w
  1536  01B4  1C03               	skipc
  1537  01B5  29B7               	goto	u3931
  1538  01B6  29B8               	goto	u3930
  1539  01B7                     u3931:
  1540  01B7  297D               	goto	l3868
  1541  01B8                     u3930:
  1542  01B8  29B9               	goto	l3878
  1543                           	
  1544  01B9                     l453:	
  1545                           	line	341
  1546                           	
  1547  01B9                     l3878:	
  1548                           ;blink.c: 336: }
  1549                           ;blink.c: 341: lcd_puts("mW/dB ");
  1550  01B9  307C               	movlw	low((STR_10-__stringbase))
  1551  01BA  00A0               	movwf	(?_lcd_puts)
  1552  01BB  3080               	movlw	80h
  1553  01BC  00A1               	movwf	(?_lcd_puts+1)
  1554  01BD  118A  27BD  118A   	fcall	_lcd_puts
  1555                           	line	344
  1556                           	
  1557  01C0                     l3880:	
  1558                           ;blink.c: 344: char** pBands = bands;
  1559  01C0  3052               	movlw	((_bands-__stringbase))&0ffh
  1560  01C1  1283               	bcf	status, 5	;RP0=0, select bank0
  1561  01C2  1303               	bcf	status, 6	;RP1=0, select bank0
  1562  01C3  00B9               	movwf	(??_doFrequency+0)+0
  1563  01C4  0839               	movf	(??_doFrequency+0)+0,w
  1564  01C5  00BD               	movwf	(doFrequency@pBands)
  1565                           	line	345
  1566                           	
  1567  01C6                     l3882:	
  1568                           ;blink.c: 345: pBands += band;
  1569  01C6  0852               	movf	(_band),w
  1570  01C7  00B9               	movwf	(??_doFrequency+0)+0
  1571  01C8  0839               	movf	(??_doFrequency+0)+0,w
  1572  01C9  07BD               	addwf	(doFrequency@pBands),f
  1573                           	line	346
  1574                           	
  1575  01CA                     l3884:	
  1576                           ;blink.c: 346: lcd_puts(*pBands);
  1577  01CA  083D               	movf	(doFrequency@pBands),w
  1578  01CB  0084               	movwf	fsr0
  1579  01CC  118A  2243  118A   	fcall	stringdir
  1580  01CF  00A0               	movwf	(?_lcd_puts)
  1581  01D0  118A  2243  118A   	fcall	stringdir
  1582  01D3  00A1               	movwf	(?_lcd_puts+1)
  1583  01D4  118A  27BD  118A   	fcall	_lcd_puts
  1584                           	line	347
  1585                           	
  1586  01D7                     l3886:	
  1587                           ;blink.c: 347: lcd_puts("F");
  1588  01D7  30A9               	movlw	low((STR_11-__stringbase))
  1589  01D8  1283               	bcf	status, 5	;RP0=0, select bank0
  1590  01D9  1303               	bcf	status, 6	;RP1=0, select bank0
  1591  01DA  00A0               	movwf	(?_lcd_puts)
  1592  01DB  3080               	movlw	80h
  1593  01DC  00A1               	movwf	(?_lcd_puts+1)
  1594  01DD  118A  27BD  118A   	fcall	_lcd_puts
  1595                           	line	350
  1596                           	
  1597  01E0                     l3888:	
  1598                           ;blink.c: 350: lcd_puts(" 1/");
  1599  01E0  3087               	movlw	low((STR_12-__stringbase))
  1600  01E1  1283               	bcf	status, 5	;RP0=0, select bank0
  1601  01E2  1303               	bcf	status, 6	;RP1=0, select bank0
  1602  01E3  00A0               	movwf	(?_lcd_puts)
  1603  01E4  3080               	movlw	80h
  1604  01E5  00A1               	movwf	(?_lcd_puts+1)
  1605  01E6  118A  27BD  118A   	fcall	_lcd_puts
  1606                           	line	351
  1607                           	
  1608  01E9                     l3890:	
  1609                           ;blink.c: 351: ultoa(buffer,preScaleValue,10);
  1610  01E9  1283               	bcf	status, 5	;RP0=0, select bank0
  1611  01EA  1303               	bcf	status, 6	;RP1=0, select bank0
  1612  01EB  084D               	movf	(_preScaleValue),w
  1613  01EC  00AD               	movwf	(?_ultoa)
  1614  01ED  084E               	movf	(_preScaleValue+1),w
  1615  01EE  00AE               	movwf	((?_ultoa))+1
  1616  01EF  084F               	movf	(_preScaleValue+2),w
  1617  01F0  00AF               	movwf	((?_ultoa))+2
  1618  01F1  01B0               	clrf	((?_ultoa))+3
  1619  01F2  300A               	movlw	low(0Ah)
  1620  01F3  00B1               	movwf	0+(?_ultoa)+04h
  1621  01F4  3000               	movlw	high(0Ah)
  1622  01F5  00B2               	movwf	(0+(?_ultoa)+04h)+1
  1623  01F6  3055               	movlw	(_buffer)&0ffh
  1624  01F7  118A  2395  118A   	fcall	_ultoa
  1625                           	line	352
  1626                           	
  1627  01FA                     l3892:	
  1628                           ;blink.c: 352: lcd_puts(buffer);
  1629  01FA  3055               	movlw	(_buffer&0ffh)
  1630  01FB  1283               	bcf	status, 5	;RP0=0, select bank0
  1631  01FC  1303               	bcf	status, 6	;RP1=0, select bank0
  1632  01FD  00A0               	movwf	(?_lcd_puts)
  1633  01FE  3000               	movlw	(0x0/2)
  1634  01FF  00A1               	movwf	(?_lcd_puts+1)
  1635  0200  118A  27BD  118A   	fcall	_lcd_puts
  1636                           	line	355
  1637                           	
  1638  0203                     l3894:	
  1639                           ;blink.c: 355: preScaleSelect = 7;
  1640  0203  3007               	movlw	(07h)
  1641  0204  1283               	bcf	status, 5	;RP0=0, select bank0
  1642  0205  1303               	bcf	status, 6	;RP1=0, select bank0
  1643  0206  00B9               	movwf	(??_doFrequency+0)+0
  1644  0207  0839               	movf	(??_doFrequency+0)+0,w
  1645  0208  00E2               	movwf	(_preScaleSelect)
  1646                           	line	356
  1647                           	
  1648  0209                     l3896:	
  1649                           ;blink.c: 356: preScaleValue = (1 << prescaleInternalShift[preScaleSelect] << prescaleEx
                                 ternalShift[preScaleSelect]);
  1650  0209  0862               	movf	(_preScaleSelect),w
  1651  020A  3E18               	addlw	low((_prescaleExternalShift-__stringbase))
  1652  020B  0084               	movwf	fsr0
  1653  020C  118A  2243  118A   	fcall	stringdir
  1654  020F  00B9               	movwf	(??_doFrequency+0)+0
  1655  0210  0AB9               	incf	(??_doFrequency+0)+0,f
  1656  0211  0862               	movf	(_preScaleSelect),w
  1657  0212  3E71               	addlw	low((_prescaleInternalShift-__stringbase))
  1658  0213  0084               	movwf	fsr0
  1659  0214  118A  2243  118A   	fcall	stringdir
  1660  0217  00BA               	movwf	(??_doFrequency+1)+0
  1661  0218  0ABA               	incf	(??_doFrequency+1)+0,f
  1662  0219  3001               	movlw	low(01h)
  1663  021A  00BB               	movwf	(??_doFrequency+2)+0
  1664  021B  3000               	movlw	high(01h)
  1665  021C  00BC               	movwf	(??_doFrequency+2)+0+1
  1666  021D  2A21               	goto	u3944
  1667  021E                     u3945:
  1668  021E  1003               	clrc
  1669  021F  0DBB               	rlf	(??_doFrequency+2)+0,f
  1670  0220  0DBC               	rlf	(??_doFrequency+2)+1,f
  1671  0221                     u3944:
  1672  0221  0BBA               	decfsz	(??_doFrequency+1)+0,f
  1673  0222  2A1E               	goto	u3945
  1674  0223  2A27               	goto	u3954
  1675  0224                     u3955:
  1676  0224  1003               	clrc
  1677  0225  0DBB               	rlf	(??_doFrequency+2)+0,f
  1678  0226  0DBC               	rlf	(??_doFrequency+2)+1,f
  1679  0227                     u3954:
  1680  0227  0BB9               	decfsz	(??_doFrequency+0)+0,f
  1681  0228  2A24               	goto	u3955
  1682  0229  083B               	movf	0+(??_doFrequency+2)+0,w
  1683  022A  00CD               	movwf	(_preScaleValue)
  1684  022B  083C               	movf	1+(??_doFrequency+2)+0,w
  1685  022C  00CE               	movwf	(_preScaleValue+1)
  1686  022D  3000               	movlw	0
  1687  022E  1BBC               	btfsc	1+(??_doFrequency+2)+0,7
  1688  022F  30FF               	movlw	255
  1689  0230  00CF               	movwf	(_preScaleValue+2)
  1690                           
  1691                           	line	372
  1692                           	
  1693  0231                     l3898:	
  1694                           ;blink.c: 372: lcd_puts("   ");
  1695  0231  3083               	movlw	low((STR_13-__stringbase))
  1696  0232  00A0               	movwf	(?_lcd_puts)
  1697  0233  3080               	movlw	80h
  1698  0234  00A1               	movwf	(?_lcd_puts+1)
  1699  0235  118A  27BD  118A   	fcall	_lcd_puts
  1700                           	line	373
  1701                           	
  1702  0238                     l455:	
  1703  0238  0008               	return
  1704                           	opt stack 0
  1705                           GLOBAL	__end_of_doFrequency
  1706  0239                     	__end_of_doFrequency:
  1707 ;; =============== function _doFrequency ends ============
  1708                           
  1709                           	signat	_doFrequency,88
  1710                           	global	_lcd_init
  1711                           psect	text783,local,class=CODE,delta=2
  1712                           global __ptext783
  1713  06B5                     __ptext783:
  1714                           
  1715 ;; *************** function _lcd_init *****************
  1716 ;; Defined at:
  1717 ;;		line 58 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;		None
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;		None
  1722 ;; Return value:  Size  Location     Type
  1723 ;;		None               void
  1724 ;; Registers used:
  1725 ;;		wreg, status,2, status,0, pclath, cstack
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1731 ;;      Params:         0       0       0       0
  1732 ;;      Locals:         0       0       0       0
  1733 ;;      Temps:          0       3       0       0
  1734 ;;      Totals:         0       3       0       0
  1735 ;;Total ram usage:        3 bytes
  1736 ;; Hardware stack levels used:    1
  1737 ;; Hardware stack levels required when called:    3
  1738 ;; This function calls:
  1739 ;;		_lcd_write
  1740 ;;		_lcd_clear
  1741 ;; This function is called by:
  1742 ;;		_main
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           psect	text783
  1746                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  1747                           	line	58
  1748                           	global	__size_of_lcd_init
  1749  004F                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  1750                           	
  1751  06B5                     _lcd_init:	
  1752                           	opt	stack 4
  1753                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1754                           	line	70
  1755                           	
  1756  06B5                     l3812:	
  1757                           ;lcd.c: 70: RB7 = 1;
  1758  06B5  1283               	bcf	status, 5	;RP0=0, select bank0
  1759  06B6  1303               	bcf	status, 6	;RP1=0, select bank0
  1760  06B7  1786               	bsf	(55/8),(55)&7
  1761                           	line	72
  1762                           	
  1763  06B8                     l3814:	
  1764                           ;lcd.c: 72: _delay((unsigned long)((150)*(20000000/4000.0)));
  1765                           	opt asmopt_off
  1766  06B8  3004               movlw  4
  1767  06B9  00A4               movwf	((??_lcd_init+0)+0+2),f
  1768  06BA  30CF               movlw	207
  1769  06BB  00A3               movwf	((??_lcd_init+0)+0+1),f
  1770  06BC  3003               	movlw	3
  1771  06BD  00A2               movwf	((??_lcd_init+0)+0),f
  1772  06BE                     u3997:
  1773  06BE  0BA2               	decfsz	((??_lcd_init+0)+0),f
  1774  06BF  2EBE               	goto	u3997
  1775  06C0  0BA3               	decfsz	((??_lcd_init+0)+0+1),f
  1776  06C1  2EBE               	goto	u3997
  1777  06C2  0BA4               	decfsz	((??_lcd_init+0)+0+2),f
  1778  06C3  2EBE               	goto	u3997
  1779  06C4  2EC5               	nop2
  1780                           opt asmopt_on
  1781                           
  1782                           	line	74
  1783                           	
  1784  06C5                     l3816:	
  1785                           ;lcd.c: 74: PORTB = 0x3 | (PORTB & 0xF0);
  1786  06C5  1283               	bcf	status, 5	;RP0=0, select bank0
  1787  06C6  1303               	bcf	status, 6	;RP1=0, select bank0
  1788  06C7  0806               	movf	(6),w
  1789  06C8  39F0               	andlw	0F0h
  1790  06C9  3803               	iorlw	03h
  1791  06CA  0086               	movwf	(6)	;volatile
  1792                           	line	75
  1793                           	
  1794  06CB                     l3818:	
  1795                           ;lcd.c: 75: ((RA1 = 1), (RA1=0));
  1796  06CB  1485               	bsf	(41/8),(41)&7
  1797                           	
  1798  06CC                     l3820:	
  1799  06CC  1085               	bcf	(41/8),(41)&7
  1800                           	line	76
  1801                           	
  1802  06CD                     l3822:	
  1803                           ;lcd.c: 76: _delay((unsigned long)((5)*(20000000/4000.0)));
  1804                           	opt asmopt_off
  1805  06CD  3021               movlw	33
  1806  06CE  00A3               movwf	((??_lcd_init+0)+0+1),f
  1807  06CF  3076               	movlw	118
  1808  06D0  00A2               movwf	((??_lcd_init+0)+0),f
  1809  06D1                     u4007:
  1810  06D1  0BA2               	decfsz	((??_lcd_init+0)+0),f
  1811  06D2  2ED1               	goto	u4007
  1812  06D3  0BA3               	decfsz	((??_lcd_init+0)+0+1),f
  1813  06D4  2ED1               	goto	u4007
  1814  06D5  0064               	clrwdt
  1815                           opt asmopt_on
  1816                           
  1817                           	line	77
  1818                           	
  1819  06D6                     l3824:	
  1820                           ;lcd.c: 77: ((RA1 = 1), (RA1=0));
  1821  06D6  1283               	bcf	status, 5	;RP0=0, select bank0
  1822  06D7  1303               	bcf	status, 6	;RP1=0, select bank0
  1823  06D8  1485               	bsf	(41/8),(41)&7
  1824                           	
  1825  06D9                     l3826:	
  1826  06D9  1085               	bcf	(41/8),(41)&7
  1827                           	line	78
  1828                           	
  1829  06DA                     l3828:	
  1830                           ;lcd.c: 78: _delay((unsigned long)((200)*(20000000/4000000.0)));
  1831                           	opt asmopt_off
  1832  06DA  30F9               movlw	249
  1833  06DB  00A2               movwf	(??_lcd_init+0)+0,f
  1834  06DC                     u4017:
  1835  06DC  0064               	clrwdt
  1836  06DD  0BA2               decfsz	(??_lcd_init+0)+0,f
  1837  06DE  2EDC               	goto	u4017
  1838  06DF  2EE0               	nop2	;nop
  1839  06E0  0064               	clrwdt
  1840                           opt asmopt_on
  1841                           
  1842                           	line	79
  1843                           	
  1844  06E1                     l3830:	
  1845                           ;lcd.c: 79: ((RA1 = 1), (RA1=0));
  1846  06E1  1283               	bcf	status, 5	;RP0=0, select bank0
  1847  06E2  1303               	bcf	status, 6	;RP1=0, select bank0
  1848  06E3  1485               	bsf	(41/8),(41)&7
  1849                           	
  1850  06E4                     l3832:	
  1851  06E4  1085               	bcf	(41/8),(41)&7
  1852                           	line	80
  1853                           	
  1854  06E5                     l3834:	
  1855                           ;lcd.c: 80: _delay((unsigned long)((200)*(20000000/4000000.0)));
  1856                           	opt asmopt_off
  1857  06E5  30F9               movlw	249
  1858  06E6  00A2               movwf	(??_lcd_init+0)+0,f
  1859  06E7                     u4027:
  1860  06E7  0064               	clrwdt
  1861  06E8  0BA2               decfsz	(??_lcd_init+0)+0,f
  1862  06E9  2EE7               	goto	u4027
  1863  06EA  2EEB               	nop2	;nop
  1864  06EB  0064               	clrwdt
  1865                           opt asmopt_on
  1866                           
  1867                           	line	81
  1868                           ;lcd.c: 81: PORTB = 2 | (PORTB & 0xF0);;
  1869  06EC  1283               	bcf	status, 5	;RP0=0, select bank0
  1870  06ED  1303               	bcf	status, 6	;RP1=0, select bank0
  1871  06EE  0806               	movf	(6),w
  1872  06EF  39F0               	andlw	0F0h
  1873  06F0  3802               	iorlw	02h
  1874  06F1  0086               	movwf	(6)	;volatile
  1875                           	line	82
  1876                           	
  1877  06F2                     l3836:	
  1878                           ;lcd.c: 82: ((RA1 = 1), (RA1=0));
  1879  06F2  1485               	bsf	(41/8),(41)&7
  1880                           	
  1881  06F3                     l3838:	
  1882  06F3  1085               	bcf	(41/8),(41)&7
  1883                           	line	84
  1884                           	
  1885  06F4                     l3840:	
  1886                           ;lcd.c: 84: lcd_write(0x28);
  1887  06F4  3028               	movlw	(028h)
  1888  06F5  158A  27DD  118A   	fcall	_lcd_write
  1889                           	line	86
  1890                           	
  1891  06F8                     l3842:	
  1892                           ;lcd.c: 86: lcd_write(0b1100);
  1893  06F8  300C               	movlw	(0Ch)
  1894  06F9  158A  27DD  118A   	fcall	_lcd_write
  1895                           	line	87
  1896                           	
  1897  06FC                     l3844:	
  1898                           ;lcd.c: 87: lcd_clear();
  1899  06FC  158A  27B4  118A   	fcall	_lcd_clear
  1900                           	line	88
  1901                           	
  1902  06FF                     l3846:	
  1903                           ;lcd.c: 88: lcd_write(0x6);
  1904  06FF  3006               	movlw	(06h)
  1905  0700  158A  27DD  118A   	fcall	_lcd_write
  1906                           	line	89
  1907                           	
  1908  0703                     l863:	
  1909  0703  0008               	return
  1910                           	opt stack 0
  1911                           GLOBAL	__end_of_lcd_init
  1912  0704                     	__end_of_lcd_init:
  1913 ;; =============== function _lcd_init ends ============
  1914                           
  1915                           	signat	_lcd_init,88
  1916                           	global	_lcd_putnumber
  1917                           psect	text784,local,class=CODE,delta=2
  1918                           global __ptext784
  1919  0013                     __ptext784:
  1920                           
  1921 ;; *************** function _lcd_putnumber *****************
  1922 ;; Defined at:
  1923 ;;		line 153 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  number          4   13[BANK0 ] unsigned long 
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;  loop            2   21[BANK0 ] int 
  1928 ;;  displayHZ       2   19[BANK0 ] unsigned char [2]
  1929 ;; Return value:  Size  Location     Type
  1930 ;;		None               void
  1931 ;; Registers used:
  1932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1938 ;;      Params:         0       4       0       0
  1939 ;;      Locals:         0       4       0       0
  1940 ;;      Temps:          0       2       0       0
  1941 ;;      Totals:         0      10       0       0
  1942 ;;Total ram usage:       10 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:    3
  1945 ;; This function calls:
  1946 ;;		___lldiv
  1947 ;;		___llmod
  1948 ;;		_lcd_putdigit
  1949 ;;		___awmod
  1950 ;;		_lcd_puts
  1951 ;; This function is called by:
  1952 ;;		_doFrequency
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           psect	text784
  1956                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  1957                           	line	153
  1958                           	global	__size_of_lcd_putnumber
  1959  0127                     	__size_of_lcd_putnumber	equ	__end_of_lcd_putnumber-_lcd_putnumber
  1960                           	
  1961  0013                     _lcd_putnumber:	
  1962                           	opt	stack 3
  1963                           ; Regs used in _lcd_putnumber: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1964                           	line	154
  1965                           	
  1966  0013                     l3764:	
  1967                           ;lcd.c: 154: char displayHZ[] = {'.', '\0'};
  1968  0013  1283               	bcf	status, 5	;RP0=0, select bank0
  1969  0014  1303               	bcf	status, 6	;RP1=0, select bank0
  1970  0015  0860               	movf	(lcd_putnumber@F612+1),w
  1971  0016  01B4               	clrf	(lcd_putnumber@displayHZ+1)
  1972  0017  07B4               	addwf	(lcd_putnumber@displayHZ+1)
  1973  0018  085F               	movf	(lcd_putnumber@F612),w
  1974  0019  01B3               	clrf	(lcd_putnumber@displayHZ)
  1975  001A  07B3               	addwf	(lcd_putnumber@displayHZ)
  1976                           
  1977                           	line	156
  1978                           	
  1979  001B                     l3766:	
  1980                           ;lcd.c: 156: divBy = 1000000000;
  1981  001B  303B               	movlw	03Bh
  1982  001C  00C8               	movwf	(_divBy+3)
  1983  001D  309A               	movlw	09Ah
  1984  001E  00C7               	movwf	(_divBy+2)
  1985  001F  30CA               	movlw	0CAh
  1986  0020  00C6               	movwf	(_divBy+1)
  1987  0021  3000               	movlw	0
  1988  0022  00C5               	movwf	(_divBy)
  1989                           
  1990                           	line	157
  1991                           	
  1992  0023                     l3768:	
  1993                           ;lcd.c: 157: sig = 0;
  1994  0023  01D4               	clrf	(_sig)
  1995                           	line	160
  1996                           	
  1997  0024                     l3770:	
  1998                           ;lcd.c: 160: for (int loop=0; loop < 10; loop++)
  1999  0024  01B5               	clrf	(lcd_putnumber@loop)
  2000  0025  01B6               	clrf	(lcd_putnumber@loop+1)
  2001                           	
  2002  0026                     l3772:	
  2003  0026  0836               	movf	(lcd_putnumber@loop+1),w
  2004  0027  3A80               	xorlw	80h
  2005  0028  00FF               	movwf	btemp+1
  2006  0029  3080               	movlw	(high(0Ah))^80h
  2007  002A  027F               	subwf	btemp+1,w
  2008  002B  1D03               	skipz
  2009  002C  282F               	goto	u3825
  2010  002D  300A               	movlw	low(0Ah)
  2011  002E  0235               	subwf	(lcd_putnumber@loop),w
  2012  002F                     u3825:
  2013                           
  2014  002F  1C03               	skipc
  2015  0030  2832               	goto	u3821
  2016  0031  2833               	goto	u3820
  2017  0032                     u3821:
  2018  0032  2835               	goto	l3776
  2019  0033                     u3820:
  2020  0033  291E               	goto	l3806
  2021                           	
  2022  0034                     l3774:	
  2023  0034  291E               	goto	l3806
  2024                           	line	161
  2025                           	
  2026  0035                     l889:	
  2027                           	line	162
  2028                           	
  2029  0035                     l3776:	
  2030                           ;lcd.c: 161: {
  2031                           ;lcd.c: 162: digit = number / divBy;
  2032  0035  1283               	bcf	status, 5	;RP0=0, select bank0
  2033  0036  1303               	bcf	status, 6	;RP1=0, select bank0
  2034  0037  0848               	movf	(_divBy+3),w
  2035  0038  00A3               	movwf	(?___lldiv+3)
  2036  0039  0847               	movf	(_divBy+2),w
  2037  003A  00A2               	movwf	(?___lldiv+2)
  2038  003B  0846               	movf	(_divBy+1),w
  2039  003C  00A1               	movwf	(?___lldiv+1)
  2040  003D  0845               	movf	(_divBy),w
  2041  003E  00A0               	movwf	(?___lldiv)
  2042                           
  2043  003F  0830               	movf	(lcd_putnumber@number+3),w
  2044  0040  00A7               	movwf	3+(?___lldiv)+04h
  2045  0041  082F               	movf	(lcd_putnumber@number+2),w
  2046  0042  00A6               	movwf	2+(?___lldiv)+04h
  2047  0043  082E               	movf	(lcd_putnumber@number+1),w
  2048  0044  00A5               	movwf	1+(?___lldiv)+04h
  2049  0045  082D               	movf	(lcd_putnumber@number),w
  2050  0046  00A4               	movwf	0+(?___lldiv)+04h
  2051                           
  2052  0047  118A  2515  118A   	fcall	___lldiv
  2053  004A  1283               	bcf	status, 5	;RP0=0, select bank0
  2054  004B  1303               	bcf	status, 6	;RP1=0, select bank0
  2055  004C  0820               	movf	0+(((0+(?___lldiv)))),w
  2056  004D  00B1               	movwf	(??_lcd_putnumber+0)+0
  2057  004E  0831               	movf	(??_lcd_putnumber+0)+0,w
  2058  004F  00D3               	movwf	(_digit)
  2059                           	line	163
  2060                           ;lcd.c: 163: number = number % divBy;
  2061  0050  0848               	movf	(_divBy+3),w
  2062  0051  00A3               	movwf	(?___llmod+3)
  2063  0052  0847               	movf	(_divBy+2),w
  2064  0053  00A2               	movwf	(?___llmod+2)
  2065  0054  0846               	movf	(_divBy+1),w
  2066  0055  00A1               	movwf	(?___llmod+1)
  2067  0056  0845               	movf	(_divBy),w
  2068  0057  00A0               	movwf	(?___llmod)
  2069                           
  2070  0058  0830               	movf	(lcd_putnumber@number+3),w
  2071  0059  00A7               	movwf	3+(?___llmod)+04h
  2072  005A  082F               	movf	(lcd_putnumber@number+2),w
  2073  005B  00A6               	movwf	2+(?___llmod)+04h
  2074  005C  082E               	movf	(lcd_putnumber@number+1),w
  2075  005D  00A5               	movwf	1+(?___llmod)+04h
  2076  005E  082D               	movf	(lcd_putnumber@number),w
  2077  005F  00A4               	movwf	0+(?___llmod)+04h
  2078                           
  2079  0060  118A  2657  118A   	fcall	___llmod
  2080  0063  1283               	bcf	status, 5	;RP0=0, select bank0
  2081  0064  1303               	bcf	status, 6	;RP1=0, select bank0
  2082  0065  0823               	movf	(3+(?___llmod)),w
  2083  0066  00B0               	movwf	(lcd_putnumber@number+3)
  2084  0067  0822               	movf	(2+(?___llmod)),w
  2085  0068  00AF               	movwf	(lcd_putnumber@number+2)
  2086  0069  0821               	movf	(1+(?___llmod)),w
  2087  006A  00AE               	movwf	(lcd_putnumber@number+1)
  2088  006B  0820               	movf	(0+(?___llmod)),w
  2089  006C  00AD               	movwf	(lcd_putnumber@number)
  2090                           
  2091                           	line	164
  2092                           	
  2093  006D                     l3778:	
  2094                           ;lcd.c: 164: if (digit > 0 || sig != 0)
  2095  006D  08D3               	movf	(_digit),f
  2096  006E  1D03               	skipz
  2097  006F  2871               	goto	u3831
  2098  0070  2872               	goto	u3830
  2099  0071                     u3831:
  2100  0071  2877               	goto	l3782
  2101  0072                     u3830:
  2102                           	
  2103  0072                     l3780:	
  2104  0072  0854               	movf	(_sig),w
  2105  0073  1D03               	skipz
  2106  0074  2876               	goto	u3840
  2107  0075  28B5               	goto	l3794
  2108  0076                     u3840:
  2109  0076  2877               	goto	l3782
  2110                           	
  2111  0077                     l893:	
  2112                           	line	167
  2113                           	
  2114  0077                     l3782:	
  2115                           ;lcd.c: 165: {
  2116                           ;lcd.c: 167: lcd_putdigit(digit);
  2117  0077  0853               	movf	(_digit),w
  2118  0078  158A  279E  118A   	fcall	_lcd_putdigit
  2119                           	line	168
  2120                           	
  2121  007B                     l3784:	
  2122                           ;lcd.c: 168: sig++;
  2123  007B  3001               	movlw	(01h)
  2124  007C  1283               	bcf	status, 5	;RP0=0, select bank0
  2125  007D  1303               	bcf	status, 6	;RP1=0, select bank0
  2126  007E  00B1               	movwf	(??_lcd_putnumber+0)+0
  2127  007F  0831               	movf	(??_lcd_putnumber+0)+0,w
  2128  0080  07D4               	addwf	(_sig),f
  2129                           	line	169
  2130                           	
  2131  0081                     l3786:	
  2132                           ;lcd.c: 169: if ( ((9 - loop)%3 == 0) && loop != 9)
  2133  0081  3003               	movlw	low(03h)
  2134  0082  00A0               	movwf	(?___awmod)
  2135  0083  3000               	movlw	high(03h)
  2136  0084  00A1               	movwf	((?___awmod))+1
  2137  0085  0935               	comf	(lcd_putnumber@loop),w
  2138  0086  00B1               	movwf	(??_lcd_putnumber+0)+0
  2139  0087  0936               	comf	(lcd_putnumber@loop+1),w
  2140  0088  00B2               	movwf	((??_lcd_putnumber+0)+0+1)
  2141  0089  0AB1               	incf	(??_lcd_putnumber+0)+0,f
  2142  008A  1903               	skipnz
  2143  008B  0AB2               	incf	((??_lcd_putnumber+0)+0+1),f
  2144  008C  0831               	movf	0+(??_lcd_putnumber+0)+0,w
  2145  008D  3E09               	addlw	low(09h)
  2146  008E  00A2               	movwf	0+(?___awmod)+02h
  2147  008F  0832               	movf	1+(??_lcd_putnumber+0)+0,w
  2148  0090  1803               	skipnc
  2149  0091  3E01               	addlw	1
  2150  0092  3E00               	addlw	high(09h)
  2151  0093  00A3               	movwf	1+0+(?___awmod)+02h
  2152  0094  118A  25EF  118A   	fcall	___awmod
  2153  0097  1283               	bcf	status, 5	;RP0=0, select bank0
  2154  0098  1303               	bcf	status, 6	;RP1=0, select bank0
  2155  0099  0821               	movf	((1+(?___awmod))),w
  2156  009A  0420               	iorwf	((0+(?___awmod))),w
  2157  009B  1D03               	skipz
  2158  009C  289E               	goto	u3851
  2159  009D  289F               	goto	u3850
  2160  009E                     u3851:
  2161  009E  28EB               	goto	l3800
  2162  009F                     u3850:
  2163                           	
  2164  009F                     l3788:	
  2165  009F  3009               	movlw	09h
  2166  00A0  0635               	xorwf	(lcd_putnumber@loop),w
  2167  00A1  0436               	iorwf	(lcd_putnumber@loop+1),w
  2168  00A2  1903               	skipnz
  2169  00A3  28A5               	goto	u3861
  2170  00A4  28A6               	goto	u3860
  2171  00A5                     u3861:
  2172  00A5  28EB               	goto	l3800
  2173  00A6                     u3860:
  2174                           	line	171
  2175                           	
  2176  00A6                     l3790:	
  2177                           ;lcd.c: 170: {
  2178                           ;lcd.c: 171: lcd_puts(displayHZ);
  2179  00A6  3033               	movlw	(lcd_putnumber@displayHZ&0ffh)
  2180  00A7  00A0               	movwf	(?_lcd_puts)
  2181  00A8  3000               	movlw	(0x0/2)
  2182  00A9  00A1               	movwf	(?_lcd_puts+1)
  2183  00AA  118A  27BD  118A   	fcall	_lcd_puts
  2184                           	line	172
  2185                           	
  2186  00AD                     l3792:	
  2187                           ;lcd.c: 172: displayHZ[0] = ',';
  2188  00AD  302C               	movlw	(02Ch)
  2189  00AE  1283               	bcf	status, 5	;RP0=0, select bank0
  2190  00AF  1303               	bcf	status, 6	;RP1=0, select bank0
  2191  00B0  00B1               	movwf	(??_lcd_putnumber+0)+0
  2192  00B1  0831               	movf	(??_lcd_putnumber+0)+0,w
  2193  00B2  00B3               	movwf	(lcd_putnumber@displayHZ)
  2194  00B3  28EB               	goto	l3800
  2195                           	line	173
  2196                           	
  2197  00B4                     l894:	
  2198                           	line	174
  2199                           ;lcd.c: 173: }
  2200                           ;lcd.c: 174: }
  2201  00B4  28EB               	goto	l3800
  2202                           	line	175
  2203                           	
  2204  00B5                     l891:	
  2205                           	line	179
  2206                           	
  2207  00B5                     l3794:	
  2208                           ;lcd.c: 175: else
  2209                           ;lcd.c: 176: {
  2210                           ;lcd.c: 179: if ( ((9 - loop)%3 == 0) && loop != 9)
  2211  00B5  3003               	movlw	low(03h)
  2212  00B6  00A0               	movwf	(?___awmod)
  2213  00B7  3000               	movlw	high(03h)
  2214  00B8  00A1               	movwf	((?___awmod))+1
  2215  00B9  0935               	comf	(lcd_putnumber@loop),w
  2216  00BA  00B1               	movwf	(??_lcd_putnumber+0)+0
  2217  00BB  0936               	comf	(lcd_putnumber@loop+1),w
  2218  00BC  00B2               	movwf	((??_lcd_putnumber+0)+0+1)
  2219  00BD  0AB1               	incf	(??_lcd_putnumber+0)+0,f
  2220  00BE  1903               	skipnz
  2221  00BF  0AB2               	incf	((??_lcd_putnumber+0)+0+1),f
  2222  00C0  0831               	movf	0+(??_lcd_putnumber+0)+0,w
  2223  00C1  3E09               	addlw	low(09h)
  2224  00C2  00A2               	movwf	0+(?___awmod)+02h
  2225  00C3  0832               	movf	1+(??_lcd_putnumber+0)+0,w
  2226  00C4  1803               	skipnc
  2227  00C5  3E01               	addlw	1
  2228  00C6  3E00               	addlw	high(09h)
  2229  00C7  00A3               	movwf	1+0+(?___awmod)+02h
  2230  00C8  118A  25EF  118A   	fcall	___awmod
  2231  00CB  1283               	bcf	status, 5	;RP0=0, select bank0
  2232  00CC  1303               	bcf	status, 6	;RP1=0, select bank0
  2233  00CD  0821               	movf	((1+(?___awmod))),w
  2234  00CE  0420               	iorwf	((0+(?___awmod))),w
  2235  00CF  1D03               	skipz
  2236  00D0  28D2               	goto	u3871
  2237  00D1  28D3               	goto	u3870
  2238  00D2                     u3871:
  2239  00D2  28E1               	goto	l896
  2240  00D3                     u3870:
  2241                           	
  2242  00D3                     l3796:	
  2243  00D3  3009               	movlw	09h
  2244  00D4  0635               	xorwf	(lcd_putnumber@loop),w
  2245  00D5  0436               	iorwf	(lcd_putnumber@loop+1),w
  2246  00D6  1903               	skipnz
  2247  00D7  28D9               	goto	u3881
  2248  00D8  28DA               	goto	u3880
  2249  00D9                     u3881:
  2250  00D9  28E1               	goto	l896
  2251  00DA                     u3880:
  2252                           	line	181
  2253                           	
  2254  00DA                     l3798:	
  2255                           ;lcd.c: 180: {
  2256                           ;lcd.c: 181: lcd_puts(" ");
  2257  00DA  3085               	movlw	low((STR_14-__stringbase))
  2258  00DB  00A0               	movwf	(?_lcd_puts)
  2259  00DC  3080               	movlw	80h
  2260  00DD  00A1               	movwf	(?_lcd_puts+1)
  2261  00DE  118A  27BD  118A   	fcall	_lcd_puts
  2262                           	line	182
  2263                           	
  2264  00E1                     l896:	
  2265                           	line	183
  2266                           ;lcd.c: 182: }
  2267                           ;lcd.c: 183: lcd_puts(" ");
  2268  00E1  3085               	movlw	low((STR_15-__stringbase))
  2269  00E2  1283               	bcf	status, 5	;RP0=0, select bank0
  2270  00E3  1303               	bcf	status, 6	;RP1=0, select bank0
  2271  00E4  00A0               	movwf	(?_lcd_puts)
  2272  00E5  3080               	movlw	80h
  2273  00E6  00A1               	movwf	(?_lcd_puts+1)
  2274  00E7  118A  27BD  118A   	fcall	_lcd_puts
  2275  00EA  28EB               	goto	l3800
  2276                           	line	184
  2277                           	
  2278  00EB                     l895:	
  2279                           	line	185
  2280                           	
  2281  00EB                     l3800:	
  2282                           ;lcd.c: 184: }
  2283                           ;lcd.c: 185: divBy = divBy / 10;
  2284  00EB  3000               	movlw	0
  2285  00EC  1283               	bcf	status, 5	;RP0=0, select bank0
  2286  00ED  1303               	bcf	status, 6	;RP1=0, select bank0
  2287  00EE  00A3               	movwf	(?___lldiv+3)
  2288  00EF  3000               	movlw	0
  2289  00F0  00A2               	movwf	(?___lldiv+2)
  2290  00F1  3000               	movlw	0
  2291  00F2  00A1               	movwf	(?___lldiv+1)
  2292  00F3  300A               	movlw	0Ah
  2293  00F4  00A0               	movwf	(?___lldiv)
  2294                           
  2295  00F5  0848               	movf	(_divBy+3),w
  2296  00F6  00A7               	movwf	3+(?___lldiv)+04h
  2297  00F7  0847               	movf	(_divBy+2),w
  2298  00F8  00A6               	movwf	2+(?___lldiv)+04h
  2299  00F9  0846               	movf	(_divBy+1),w
  2300  00FA  00A5               	movwf	1+(?___lldiv)+04h
  2301  00FB  0845               	movf	(_divBy),w
  2302  00FC  00A4               	movwf	0+(?___lldiv)+04h
  2303                           
  2304  00FD  118A  2515  118A   	fcall	___lldiv
  2305  0100  1283               	bcf	status, 5	;RP0=0, select bank0
  2306  0101  1303               	bcf	status, 6	;RP1=0, select bank0
  2307  0102  0823               	movf	(3+(?___lldiv)),w
  2308  0103  00C8               	movwf	(_divBy+3)
  2309  0104  0822               	movf	(2+(?___lldiv)),w
  2310  0105  00C7               	movwf	(_divBy+2)
  2311  0106  0821               	movf	(1+(?___lldiv)),w
  2312  0107  00C6               	movwf	(_divBy+1)
  2313  0108  0820               	movf	(0+(?___lldiv)),w
  2314  0109  00C5               	movwf	(_divBy)
  2315                           
  2316                           	line	160
  2317                           	
  2318  010A                     l3802:	
  2319  010A  3001               	movlw	low(01h)
  2320  010B  07B5               	addwf	(lcd_putnumber@loop),f
  2321  010C  1803               	skipnc
  2322  010D  0AB6               	incf	(lcd_putnumber@loop+1),f
  2323  010E  3000               	movlw	high(01h)
  2324  010F  07B6               	addwf	(lcd_putnumber@loop+1),f
  2325                           	
  2326  0110                     l3804:	
  2327  0110  0836               	movf	(lcd_putnumber@loop+1),w
  2328  0111  3A80               	xorlw	80h
  2329  0112  00FF               	movwf	btemp+1
  2330  0113  3080               	movlw	(high(0Ah))^80h
  2331  0114  027F               	subwf	btemp+1,w
  2332  0115  1D03               	skipz
  2333  0116  2919               	goto	u3895
  2334  0117  300A               	movlw	low(0Ah)
  2335  0118  0235               	subwf	(lcd_putnumber@loop),w
  2336  0119                     u3895:
  2337                           
  2338  0119  1C03               	skipc
  2339  011A  291C               	goto	u3891
  2340  011B  291D               	goto	u3890
  2341  011C                     u3891:
  2342  011C  2835               	goto	l3776
  2343  011D                     u3890:
  2344  011D  291E               	goto	l3806
  2345                           	
  2346  011E                     l890:	
  2347                           	line	188
  2348                           	
  2349  011E                     l3806:	
  2350                           ;lcd.c: 186: }
  2351                           ;lcd.c: 188: displayHZ[0] = HZ[sig];
  2352  011E  1283               	bcf	status, 5	;RP0=0, select bank0
  2353  011F  1303               	bcf	status, 6	;RP1=0, select bank0
  2354  0120  0854               	movf	(_sig),w
  2355  0121  3E01               	addlw	low((_HZ-__stringbase))
  2356  0122  0084               	movwf	fsr0
  2357  0123  118A  2243  118A   	fcall	stringdir
  2358  0126  00B1               	movwf	(??_lcd_putnumber+0)+0
  2359  0127  0831               	movf	(??_lcd_putnumber+0)+0,w
  2360  0128  00B3               	movwf	(lcd_putnumber@displayHZ)
  2361                           	line	189
  2362                           	
  2363  0129                     l3808:	
  2364                           ;lcd.c: 189: lcd_puts(&displayHZ[0]);
  2365  0129  3033               	movlw	(lcd_putnumber@displayHZ&0ffh)
  2366  012A  00A0               	movwf	(?_lcd_puts)
  2367  012B  3000               	movlw	(0x0/2)
  2368  012C  00A1               	movwf	(?_lcd_puts+1)
  2369  012D  118A  27BD  118A   	fcall	_lcd_puts
  2370                           	line	190
  2371                           	
  2372  0130                     l3810:	
  2373                           ;lcd.c: 190: lcd_puts("Hz");
  2374  0130  308B               	movlw	low((STR_16-__stringbase))
  2375  0131  1283               	bcf	status, 5	;RP0=0, select bank0
  2376  0132  1303               	bcf	status, 6	;RP1=0, select bank0
  2377  0133  00A0               	movwf	(?_lcd_puts)
  2378  0134  3080               	movlw	80h
  2379  0135  00A1               	movwf	(?_lcd_puts+1)
  2380  0136  118A  27BD  118A   	fcall	_lcd_puts
  2381                           	line	191
  2382                           	
  2383  0139                     l897:	
  2384  0139  0008               	return
  2385                           	opt stack 0
  2386                           GLOBAL	__end_of_lcd_putnumber
  2387  013A                     	__end_of_lcd_putnumber:
  2388 ;; =============== function _lcd_putnumber ends ============
  2389                           
  2390                           	signat	_lcd_putnumber,4216
  2391                           	global	_lcd_putdigit
  2392                           psect	text785,local,class=CODE,delta=2
  2393                           global __ptext785
  2394  0F9E                     __ptext785:
  2395                           
  2396 ;; *************** function _lcd_putdigit *****************
  2397 ;; Defined at:
  2398 ;;		line 146 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;  c               1    wreg     unsigned char 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  c               1    0[BANK0 ] unsigned char 
  2403 ;; Return value:  Size  Location     Type
  2404 ;;		None               void
  2405 ;; Registers used:
  2406 ;;		wreg, status,2, status,0, pclath, cstack
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2412 ;;      Params:         0       0       0       0
  2413 ;;      Locals:         0       1       0       0
  2414 ;;      Temps:          0       0       0       0
  2415 ;;      Totals:         0       1       0       0
  2416 ;;Total ram usage:        1 bytes
  2417 ;; Hardware stack levels used:    1
  2418 ;; Hardware stack levels required when called:    2
  2419 ;; This function calls:
  2420 ;;		_lcd_write
  2421 ;; This function is called by:
  2422 ;;		_lcd_putnumber
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           psect	text785
  2426                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  2427                           	line	146
  2428                           	global	__size_of_lcd_putdigit
  2429  000A                     	__size_of_lcd_putdigit	equ	__end_of_lcd_putdigit-_lcd_putdigit
  2430                           	
  2431  0F9E                     _lcd_putdigit:	
  2432                           	opt	stack 3
  2433                           ; Regs used in _lcd_putdigit: [wreg+status,2+status,0+pclath+cstack]
  2434                           ;lcd_putdigit@c stored from wreg
  2435  0F9E  1283               	bcf	status, 5	;RP0=0, select bank0
  2436  0F9F  1303               	bcf	status, 6	;RP1=0, select bank0
  2437  0FA0  00A0               	movwf	(lcd_putdigit@c)
  2438                           	line	147
  2439                           	
  2440  0FA1                     l3760:	
  2441                           ;lcd.c: 147: RA3 = 1;
  2442  0FA1  1585               	bsf	(43/8),(43)&7
  2443                           	line	148
  2444                           	
  2445  0FA2                     l3762:	
  2446                           ;lcd.c: 148: lcd_write( 0x30 + c );
  2447  0FA2  0820               	movf	(lcd_putdigit@c),w
  2448  0FA3  3E30               	addlw	030h
  2449  0FA4  158A  27DD  158A   	fcall	_lcd_write
  2450                           	line	149
  2451                           	
  2452  0FA7                     l884:	
  2453  0FA7  0008               	return
  2454                           	opt stack 0
  2455                           GLOBAL	__end_of_lcd_putdigit
  2456  0FA8                     	__end_of_lcd_putdigit:
  2457 ;; =============== function _lcd_putdigit ends ============
  2458                           
  2459                           	signat	_lcd_putdigit,4216
  2460                           	global	_lcd_clear
  2461                           psect	text786,local,class=CODE,delta=2
  2462                           global __ptext786
  2463  0FB4                     __ptext786:
  2464                           
  2465 ;; *************** function _lcd_clear *****************
  2466 ;; Defined at:
  2467 ;;		line 108 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;		None
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;		None
  2472 ;; Return value:  Size  Location     Type
  2473 ;;		None               void
  2474 ;; Registers used:
  2475 ;;		wreg, status,2, status,0, pclath, cstack
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2481 ;;      Params:         0       0       0       0
  2482 ;;      Locals:         0       0       0       0
  2483 ;;      Temps:          0       2       0       0
  2484 ;;      Totals:         0       2       0       0
  2485 ;;Total ram usage:        2 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; Hardware stack levels required when called:    2
  2488 ;; This function calls:
  2489 ;;		_lcd_write
  2490 ;; This function is called by:
  2491 ;;		_main
  2492 ;;		_lcd_init
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           psect	text786
  2496                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  2497                           	line	108
  2498                           	global	__size_of_lcd_clear
  2499  0013                     	__size_of_lcd_clear	equ	__end_of_lcd_clear-_lcd_clear
  2500                           	
  2501  0FB4                     _lcd_clear:	
  2502                           	opt	stack 5
  2503                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2504                           	line	109
  2505                           	
  2506  0FB4                     l3754:	
  2507                           ;lcd.c: 109: RA3 = 0;
  2508  0FB4  1283               	bcf	status, 5	;RP0=0, select bank0
  2509  0FB5  1303               	bcf	status, 6	;RP1=0, select bank0
  2510  0FB6  1185               	bcf	(43/8),(43)&7
  2511                           	line	110
  2512                           	
  2513  0FB7                     l3756:	
  2514                           ;lcd.c: 110: lcd_write(0x1);
  2515  0FB7  3001               	movlw	(01h)
  2516  0FB8  158A  27DD  158A   	fcall	_lcd_write
  2517                           	line	111
  2518                           	
  2519  0FBB                     l3758:	
  2520                           ;lcd.c: 111: _delay((unsigned long)((2)*(20000000/4000.0)));
  2521                           	opt asmopt_off
  2522  0FBB  300D               movlw	13
  2523  0FBC  1283               	bcf	status, 5	;RP0=0, select bank0
  2524  0FBD  1303               	bcf	status, 6	;RP1=0, select bank0
  2525  0FBE  00A1               movwf	((??_lcd_clear+0)+0+1),f
  2526  0FBF  30FB               	movlw	251
  2527  0FC0  00A0               movwf	((??_lcd_clear+0)+0),f
  2528  0FC1                     u4037:
  2529  0FC1  0BA0               	decfsz	((??_lcd_clear+0)+0),f
  2530  0FC2  2FC1               	goto	u4037
  2531  0FC3  0BA1               	decfsz	((??_lcd_clear+0)+0+1),f
  2532  0FC4  2FC1               	goto	u4037
  2533  0FC5  2FC6               	nop2
  2534                           opt asmopt_on
  2535                           
  2536                           	line	112
  2537                           	
  2538  0FC6                     l869:	
  2539  0FC6  0008               	return
  2540                           	opt stack 0
  2541                           GLOBAL	__end_of_lcd_clear
  2542  0FC7                     	__end_of_lcd_clear:
  2543 ;; =============== function _lcd_clear ends ============
  2544                           
  2545                           	signat	_lcd_clear,88
  2546                           	global	_lcd_puts
  2547                           psect	text787,local,class=CODE,delta=2
  2548                           global __ptext787
  2549  07BD                     __ptext787:
  2550                           
  2551 ;; *************** function _lcd_puts *****************
  2552 ;; Defined at:
  2553 ;;		line 117 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  2556 ;;		 -> STR_16(3), STR_15(2), STR_14(2), lcd_putnumber@displayHZ(2), 
  2557 ;;		 -> version(17), qbytes(15), STR_13(4), buffer(10), 
  2558 ;;		 -> STR_12(4), STR_11(2), STR_10(7), noinput(17), 
  2559 ;;		 -> STR_9(3), STR_8(3), STR_7(3), STR_6(3), 
  2560 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  2561 ;;		 -> STR_1(3), 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;		None
  2564 ;; Return value:  Size  Location     Type
  2565 ;;		None               void
  2566 ;; Registers used:
  2567 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2573 ;;      Params:         0       2       0       0
  2574 ;;      Locals:         0       0       0       0
  2575 ;;      Temps:          0       0       0       0
  2576 ;;      Totals:         0       2       0       0
  2577 ;;Total ram usage:        2 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:    2
  2580 ;; This function calls:
  2581 ;;		_lcd_write
  2582 ;; This function is called by:
  2583 ;;		_doFrequency
  2584 ;;		_main
  2585 ;;		_lcd_putnumber
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           psect	text787
  2589                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  2590                           	line	117
  2591                           	global	__size_of_lcd_puts
  2592  0025                     	__size_of_lcd_puts	equ	__end_of_lcd_puts-_lcd_puts
  2593                           	
  2594  07BD                     _lcd_puts:	
  2595                           	opt	stack 4
  2596                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2597                           	line	118
  2598                           	
  2599  07BD                     l3746:	
  2600                           ;lcd.c: 118: RA3 = 1;
  2601  07BD  1283               	bcf	status, 5	;RP0=0, select bank0
  2602  07BE  1303               	bcf	status, 6	;RP1=0, select bank0
  2603  07BF  1585               	bsf	(43/8),(43)&7
  2604                           	line	119
  2605                           ;lcd.c: 119: while(*s)
  2606  07C0  2FD4               	goto	l3752
  2607                           	
  2608  07C1                     l873:	
  2609                           	line	120
  2610                           	
  2611  07C1                     l3748:	
  2612                           ;lcd.c: 120: lcd_write(*s++);
  2613  07C1  0821               	movf	(lcd_puts@s+1),w
  2614  07C2  00FF               	movwf	btemp+1
  2615  07C3  0820               	movf	(lcd_puts@s),w
  2616  07C4  0084               	movwf	fsr0
  2617  07C5  118A  2239  118A   	fcall	stringtab
  2618  07C8  158A  27DD  118A   	fcall	_lcd_write
  2619                           	
  2620  07CB                     l3750:	
  2621  07CB  3001               	movlw	low(01h)
  2622  07CC  1283               	bcf	status, 5	;RP0=0, select bank0
  2623  07CD  1303               	bcf	status, 6	;RP1=0, select bank0
  2624  07CE  07A0               	addwf	(lcd_puts@s),f
  2625  07CF  1803               	skipnc
  2626  07D0  0AA1               	incf	(lcd_puts@s+1),f
  2627  07D1  3000               	movlw	high(01h)
  2628  07D2  07A1               	addwf	(lcd_puts@s+1),f
  2629  07D3  2FD4               	goto	l3752
  2630                           	
  2631  07D4                     l872:	
  2632                           	line	119
  2633                           	
  2634  07D4                     l3752:	
  2635  07D4  0821               	movf	(lcd_puts@s+1),w
  2636  07D5  00FF               	movwf	btemp+1
  2637  07D6  0820               	movf	(lcd_puts@s),w
  2638  07D7  0084               	movwf	fsr0
  2639  07D8  118A  2239  118A   	fcall	stringtab
  2640  07DB  3800               	iorlw	0
  2641  07DC  1D03               	skipz
  2642  07DD  2FDF               	goto	u3811
  2643  07DE  2FE0               	goto	u3810
  2644  07DF                     u3811:
  2645  07DF  2FC1               	goto	l3748
  2646  07E0                     u3810:
  2647  07E0  2FE1               	goto	l875
  2648                           	
  2649  07E1                     l874:	
  2650                           	line	121
  2651                           	
  2652  07E1                     l875:	
  2653  07E1  0008               	return
  2654                           	opt stack 0
  2655                           GLOBAL	__end_of_lcd_puts
  2656  07E2                     	__end_of_lcd_puts:
  2657 ;; =============== function _lcd_puts ends ============
  2658                           
  2659                           	signat	_lcd_puts,4216
  2660                           	global	_lcd_goto
  2661                           psect	text788,local,class=CODE,delta=2
  2662                           global __ptext788
  2663  0F94                     __ptext788:
  2664                           
  2665 ;; *************** function _lcd_goto *****************
  2666 ;; Defined at:
  2667 ;;		line 137 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  pos             1    wreg     unsigned char 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  pos             1    0[BANK0 ] unsigned char 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;		None               void
  2674 ;; Registers used:
  2675 ;;		wreg, status,2, status,0, pclath, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2681 ;;      Params:         0       0       0       0
  2682 ;;      Locals:         0       1       0       0
  2683 ;;      Temps:          0       0       0       0
  2684 ;;      Totals:         0       1       0       0
  2685 ;;Total ram usage:        1 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    2
  2688 ;; This function calls:
  2689 ;;		_lcd_write
  2690 ;; This function is called by:
  2691 ;;		_doFrequency
  2692 ;;		_main
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           psect	text788
  2696                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  2697                           	line	137
  2698                           	global	__size_of_lcd_goto
  2699  000A                     	__size_of_lcd_goto	equ	__end_of_lcd_goto-_lcd_goto
  2700                           	
  2701  0F94                     _lcd_goto:	
  2702                           	opt	stack 4
  2703                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  2704                           ;lcd_goto@pos stored from wreg
  2705  0F94  1283               	bcf	status, 5	;RP0=0, select bank0
  2706  0F95  1303               	bcf	status, 6	;RP1=0, select bank0
  2707  0F96  00A0               	movwf	(lcd_goto@pos)
  2708                           	line	138
  2709                           	
  2710  0F97                     l3742:	
  2711                           ;lcd.c: 138: RA3 = 0;
  2712  0F97  1185               	bcf	(43/8),(43)&7
  2713                           	line	139
  2714                           	
  2715  0F98                     l3744:	
  2716                           ;lcd.c: 139: lcd_write(0x80+pos);
  2717  0F98  0820               	movf	(lcd_goto@pos),w
  2718  0F99  3E80               	addlw	080h
  2719  0F9A  158A  27DD  158A   	fcall	_lcd_write
  2720                           	line	140
  2721                           	
  2722  0F9D                     l881:	
  2723  0F9D  0008               	return
  2724                           	opt stack 0
  2725                           GLOBAL	__end_of_lcd_goto
  2726  0F9E                     	__end_of_lcd_goto:
  2727 ;; =============== function _lcd_goto ends ============
  2728                           
  2729                           	signat	_lcd_goto,4216
  2730                           	global	_lcd_write
  2731                           psect	text789,local,class=CODE,delta=2
  2732                           global __ptext789
  2733  0FDD                     __ptext789:
  2734                           
  2735 ;; *************** function _lcd_write *****************
  2736 ;; Defined at:
  2737 ;;		line 95 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  c               1    wreg     unsigned char 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  c               1    6[COMMON] unsigned char 
  2742 ;; Return value:  Size  Location     Type
  2743 ;;		None               void
  2744 ;; Registers used:
  2745 ;;		wreg, status,2, status,0
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2751 ;;      Params:         0       0       0       0
  2752 ;;      Locals:         1       0       0       0
  2753 ;;      Temps:          2       0       0       0
  2754 ;;      Totals:         3       0       0       0
  2755 ;;Total ram usage:        3 bytes
  2756 ;; Hardware stack levels used:    1
  2757 ;; Hardware stack levels required when called:    1
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_lcd_init
  2762 ;;		_lcd_clear
  2763 ;;		_lcd_puts
  2764 ;;		_lcd_goto
  2765 ;;		_lcd_putdigit
  2766 ;;		_lcd_putch
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           psect	text789
  2770                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  2771                           	line	95
  2772                           	global	__size_of_lcd_write
  2773  0023                     	__size_of_lcd_write	equ	__end_of_lcd_write-_lcd_write
  2774                           	
  2775  0FDD                     _lcd_write:	
  2776                           	opt	stack 4
  2777                           ; Regs used in _lcd_write: [wreg+status,2+status,0]
  2778                           ;lcd_write@c stored from wreg
  2779  0FDD  00F6               	movwf	(lcd_write@c)
  2780                           	line	96
  2781                           	
  2782  0FDE                     l3728:	
  2783                           ;lcd.c: 96: _delay((unsigned long)((40)*(20000000/4000000.0)));
  2784                           	opt asmopt_off
  2785  0FDE  3042               movlw	66
  2786  0FDF  00F4               movwf	(??_lcd_write+0)+0,f
  2787  0FE0                     u4047:
  2788  0FE0  0BF4               decfsz	(??_lcd_write+0)+0,f
  2789  0FE1  2FE0               	goto	u4047
  2790  0FE2  0064               	clrwdt
  2791                           opt asmopt_on
  2792                           
  2793                           	line	97
  2794                           	
  2795  0FE3                     l3730:	
  2796                           ;lcd.c: 97: PORTB = ( (( c >> 4 ) & 0x0F ) | (PORTB & 0xF0) );
  2797  0FE3  30F0               	movlw	(0F0h)
  2798  0FE4  1283               	bcf	status, 5	;RP0=0, select bank0
  2799  0FE5  1303               	bcf	status, 6	;RP1=0, select bank0
  2800  0FE6  0506               	andwf	(6),w
  2801  0FE7  00F4               	movwf	(??_lcd_write+0)+0
  2802  0FE8  0876               	movf	(lcd_write@c),w
  2803  0FE9  00F5               	movwf	(??_lcd_write+1)+0
  2804  0FEA  3004               	movlw	04h
  2805  0FEB                     u3805:
  2806  0FEB  1003               	clrc
  2807  0FEC  0CF5               	rrf	(??_lcd_write+1)+0,f
  2808  0FED  3EFF               	addlw	-1
  2809  0FEE  1D03               	skipz
  2810  0FEF  2FEB               	goto	u3805
  2811  0FF0  0875               	movf	0+(??_lcd_write+1)+0,w
  2812  0FF1  390F               	andlw	0Fh
  2813  0FF2  0474               	iorwf	0+(??_lcd_write+0)+0,w
  2814  0FF3  0086               	movwf	(6)	;volatile
  2815                           	line	98
  2816                           	
  2817  0FF4                     l3732:	
  2818                           ;lcd.c: 98: ((RA1 = 1), (RA1=0));
  2819  0FF4  1485               	bsf	(41/8),(41)&7
  2820                           	
  2821  0FF5                     l3734:	
  2822  0FF5  1085               	bcf	(41/8),(41)&7
  2823                           	line	99
  2824                           	
  2825  0FF6                     l3736:	
  2826                           ;lcd.c: 99: PORTB = ( ( c & 0x0F ) | (PORTB & 0xF0) );
  2827  0FF6  30F0               	movlw	(0F0h)
  2828  0FF7  0506               	andwf	(6),w
  2829  0FF8  00F4               	movwf	(??_lcd_write+0)+0
  2830  0FF9  0876               	movf	(lcd_write@c),w
  2831  0FFA  390F               	andlw	0Fh
  2832  0FFB  0474               	iorwf	0+(??_lcd_write+0)+0,w
  2833  0FFC  0086               	movwf	(6)	;volatile
  2834                           	line	100
  2835                           	
  2836  0FFD                     l3738:	
  2837                           ;lcd.c: 100: ((RA1 = 1), (RA1=0));
  2838  0FFD  1485               	bsf	(41/8),(41)&7
  2839                           	
  2840  0FFE                     l3740:	
  2841  0FFE  1085               	bcf	(41/8),(41)&7
  2842                           	line	101
  2843                           	
  2844  0FFF                     l866:	
  2845  0FFF  0008               	return
  2846                           	opt stack 0
  2847                           GLOBAL	__end_of_lcd_write
  2848  1000                     	__end_of_lcd_write:
  2849 ;; =============== function _lcd_write ends ============
  2850                           
  2851                           	signat	_lcd_write,4216
  2852                           	global	_timersOFF
  2853                           psect	text790,local,class=CODE,delta=2
  2854                           global __ptext790
  2855  0585                     __ptext790:
  2856                           
  2857 ;; *************** function _timersOFF *****************
  2858 ;; Defined at:
  2859 ;;		line 394 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;		None
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;		None
  2864 ;; Return value:  Size  Location     Type
  2865 ;;		None               void
  2866 ;; Registers used:
  2867 ;;		wreg, status,2, status,0, pclath, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2873 ;;      Params:         0       0       0       0
  2874 ;;      Locals:         0       0       0       0
  2875 ;;      Temps:          0      10       0       0
  2876 ;;      Totals:         0      10       0       0
  2877 ;;Total ram usage:       10 bytes
  2878 ;; Hardware stack levels used:    1
  2879 ;; Hardware stack levels required when called:    2
  2880 ;; This function calls:
  2881 ;;		___tmul
  2882 ;;		___lmul
  2883 ;; This function is called by:
  2884 ;;		_main
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           psect	text790
  2888                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  2889                           	line	394
  2890                           	global	__size_of_timersOFF
  2891  006A                     	__size_of_timersOFF	equ	__end_of_timersOFF-_timersOFF
  2892                           	
  2893  0585                     _timersOFF:	
  2894                           	opt	stack 5
  2895                           ; Regs used in _timersOFF: [wreg+status,2+status,0+pclath+cstack]
  2896                           	line	396
  2897                           	
  2898  0585                     l3716:	
  2899                           ;blink.c: 396: TRISA = 0x00;
  2900  0585  1683               	bsf	status, 5	;RP0=1, select bank1
  2901  0586  1303               	bcf	status, 6	;RP1=0, select bank1
  2902  0587  0185               	clrf	(133)^080h	;volatile
  2903                           	line	397
  2904                           	
  2905  0588                     l3718:	
  2906                           ;blink.c: 397: T0IE = 0;
  2907  0588  128B               	bcf	(93/8),(93)&7
  2908                           	line	398
  2909                           	
  2910  0589                     l3720:	
  2911                           ;blink.c: 398: TMR1IE = 0;
  2912  0589  100C               	bcf	(1120/8)^080h,(1120)&7
  2913                           	line	400
  2914                           	
  2915  058A                     l3722:	
  2916                           ;blink.c: 400: RA0 = 1;
  2917  058A  1283               	bcf	status, 5	;RP0=0, select bank0
  2918  058B  1303               	bcf	status, 6	;RP1=0, select bank0
  2919  058C  1405               	bsf	(40/8),(40)&7
  2920                           	line	402
  2921                           	
  2922  058D                     l3724:	
  2923                           ;blink.c: 402: number = (preScaleValue * 256 * TMR0cnt) + (preScaleValue * TMR0);
  2924  058D  0801               	movf	(1),w	;volatile
  2925  058E  00AC               	movwf	((??_timersOFF+0)+0)
  2926  058F  01AD               	clrf	((??_timersOFF+0)+0+1)
  2927  0590  01AE               	clrf	((??_timersOFF+0)+0+2)
  2928  0591  082C               	movf	0+(??_timersOFF+0)+0,w
  2929  0592  00A0               	movwf	(?___tmul)
  2930  0593  082D               	movf	1+(??_timersOFF+0)+0,w
  2931  0594  00A1               	movwf	(?___tmul+1)
  2932  0595  082E               	movf	2+(??_timersOFF+0)+0,w
  2933  0596  00A2               	movwf	(?___tmul+2)
  2934  0597  084D               	movf	(_preScaleValue),w
  2935  0598  00A3               	movwf	0+(?___tmul)+03h
  2936  0599  084E               	movf	(_preScaleValue+1),w
  2937  059A  00A4               	movwf	1+(?___tmul)+03h
  2938  059B  084F               	movf	(_preScaleValue+2),w
  2939  059C  00A5               	movwf	2+(?___tmul)+03h
  2940  059D  118A  2750  118A   	fcall	___tmul
  2941  05A0  1283               	bcf	status, 5	;RP0=0, select bank0
  2942  05A1  1303               	bcf	status, 6	;RP1=0, select bank0
  2943  05A2  0820               	movf	(0+(?___tmul)),w
  2944  05A3  00AF               	movwf	((??_timersOFF+3)+0)
  2945  05A4  0821               	movf	(1+(?___tmul)),w
  2946  05A5  00B0               	movwf	((??_timersOFF+3)+0+1)
  2947  05A6  0822               	movf	(2+(?___tmul)),w
  2948  05A7  00B1               	movwf	((??_timersOFF+3)+0+2)
  2949  05A8  01B2               	clrf	((??_timersOFF+3)+0+3)
  2950  05A9  084D               	movf	(_preScaleValue),w
  2951  05AA  00B3               	movwf	((??_timersOFF+7)+0)
  2952  05AB  084E               	movf	(_preScaleValue+1),w
  2953  05AC  00B4               	movwf	((??_timersOFF+7)+0+1)
  2954  05AD  084F               	movf	(_preScaleValue+2),w
  2955  05AE  00B5               	movwf	((??_timersOFF+7)+0+2)
  2956  05AF  3008               	movlw	08h
  2957  05B0                     u3785:
  2958  05B0  1003               	clrc
  2959  05B1  0DB3               	rlf	(??_timersOFF+7)+0,f
  2960  05B2  0DB4               	rlf	(??_timersOFF+7)+1,f
  2961  05B3  0DB5               	rlf	(??_timersOFF+7)+2,f
  2962  05B4                     u3780:
  2963  05B4  3EFF               	addlw	-1
  2964  05B5  1D03               	skipz
  2965  05B6  2DB0               	goto	u3785
  2966  05B7  0833               	movf	0+(??_timersOFF+7)+0,w
  2967  05B8  00A0               	movwf	(?___lmul)
  2968  05B9  0834               	movf	1+(??_timersOFF+7)+0,w
  2969  05BA  00A1               	movwf	((?___lmul))+1
  2970  05BB  0835               	movf	2+(??_timersOFF+7)+0,w
  2971  05BC  00A2               	movwf	((?___lmul))+2
  2972  05BD  01A3               	clrf	((?___lmul))+3
  2973  05BE  0844               	movf	(_TMR0cnt+3),w
  2974  05BF  00A7               	movwf	3+(?___lmul)+04h
  2975  05C0  0843               	movf	(_TMR0cnt+2),w
  2976  05C1  00A6               	movwf	2+(?___lmul)+04h
  2977  05C2  0842               	movf	(_TMR0cnt+1),w
  2978  05C3  00A5               	movwf	1+(?___lmul)+04h
  2979  05C4  0841               	movf	(_TMR0cnt),w
  2980  05C5  00A4               	movwf	0+(?___lmul)+04h
  2981                           
  2982  05C6  118A  2704  118A   	fcall	___lmul
  2983  05C9  1283               	bcf	status, 5	;RP0=0, select bank0
  2984  05CA  1303               	bcf	status, 6	;RP1=0, select bank0
  2985  05CB  0820               	movf	(0+(?___lmul)),w
  2986  05CC  07AF               	addwf	(??_timersOFF+3)+0,f
  2987  05CD  0821               	movf	(1+(?___lmul)),w
  2988  05CE  1803               	skipnc
  2989  05CF  0F21               	incfsz	(1+(?___lmul)),w
  2990  05D0  2DD2               	goto	u3790
  2991  05D1  2DD3               	goto	u3791
  2992  05D2                     u3790:
  2993  05D2  07B0               	addwf	(??_timersOFF+3)+1,f
  2994  05D3                     u3791:
  2995  05D3  0822               	movf	(2+(?___lmul)),w
  2996  05D4  1803               	skipnc
  2997  05D5  0F22               	incfsz	(2+(?___lmul)),w
  2998  05D6  2DD8               	goto	u3792
  2999  05D7  2DD9               	goto	u3793
  3000  05D8                     u3792:
  3001  05D8  07B1               	addwf	(??_timersOFF+3)+2,f
  3002  05D9                     u3793:
  3003  05D9  0823               	movf	(3+(?___lmul)),w
  3004  05DA  1803               	skipnc
  3005  05DB  0A23               	incf	(3+(?___lmul)),w
  3006  05DC  07B2               	addwf	(??_timersOFF+3)+3,f
  3007  05DD  0832               	movf	3+(??_timersOFF+3)+0,w
  3008  05DE  00CC               	movwf	(_number+3)
  3009  05DF  0831               	movf	2+(??_timersOFF+3)+0,w
  3010  05E0  00CB               	movwf	(_number+2)
  3011  05E1  0830               	movf	1+(??_timersOFF+3)+0,w
  3012  05E2  00CA               	movwf	(_number+1)
  3013  05E3  082F               	movf	0+(??_timersOFF+3)+0,w
  3014  05E4  00C9               	movwf	(_number)
  3015                           
  3016                           	line	403
  3017                           	
  3018  05E5                     l3726:	
  3019                           ;blink.c: 403: _delay((unsigned long)((10)*(20000000/4000.0)));
  3020                           	opt asmopt_off
  3021  05E5  3041               movlw	65
  3022  05E6  00AD               movwf	((??_timersOFF+0)+0+1),f
  3023  05E7  30EE               	movlw	238
  3024  05E8  00AC               movwf	((??_timersOFF+0)+0),f
  3025  05E9                     u4057:
  3026  05E9  0BAC               	decfsz	((??_timersOFF+0)+0),f
  3027  05EA  2DE9               	goto	u4057
  3028  05EB  0BAD               	decfsz	((??_timersOFF+0)+0+1),f
  3029  05EC  2DE9               	goto	u4057
  3030  05ED  0064               	clrwdt
  3031                           opt asmopt_on
  3032                           
  3033                           	line	404
  3034                           	
  3035  05EE                     l461:	
  3036  05EE  0008               	return
  3037                           	opt stack 0
  3038                           GLOBAL	__end_of_timersOFF
  3039  05EF                     	__end_of_timersOFF:
  3040 ;; =============== function _timersOFF ends ============
  3041                           
  3042                           	signat	_timersOFF,88
  3043                           	global	_timersON
  3044                           psect	text791,local,class=CODE,delta=2
  3045                           global __ptext791
  3046  0FC7                     __ptext791:
  3047                           
  3048 ;; *************** function _timersON *****************
  3049 ;; Defined at:
  3050 ;;		line 377 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;		None
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;		None               void
  3057 ;; Registers used:
  3058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3064 ;;      Params:         0       0       0       0
  3065 ;;      Locals:         0       0       0       0
  3066 ;;      Temps:          0       0       0       0
  3067 ;;      Totals:         0       0       0       0
  3068 ;;Total ram usage:        0 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; Hardware stack levels required when called:    3
  3071 ;; This function calls:
  3072 ;;		_initTimer0
  3073 ;;		_initTimer1
  3074 ;; This function is called by:
  3075 ;;		_main
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           psect	text791
  3079                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  3080                           	line	377
  3081                           	global	__size_of_timersON
  3082  0016                     	__size_of_timersON	equ	__end_of_timersON-_timersON
  3083                           	
  3084  0FC7                     _timersON:	
  3085                           	opt	stack 4
  3086                           ; Regs used in _timersON: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3087                           	line	378
  3088                           	
  3089  0FC7                     l3702:	
  3090                           ;blink.c: 378: RA0 = 0;
  3091  0FC7  1283               	bcf	status, 5	;RP0=0, select bank0
  3092  0FC8  1303               	bcf	status, 6	;RP1=0, select bank0
  3093  0FC9  1005               	bcf	(40/8),(40)&7
  3094                           	line	381
  3095                           	
  3096  0FCA                     l3704:	
  3097                           ;blink.c: 381: TRISA = 0x10;
  3098  0FCA  3010               	movlw	(010h)
  3099  0FCB  1683               	bsf	status, 5	;RP0=1, select bank1
  3100  0FCC  1303               	bcf	status, 6	;RP1=0, select bank1
  3101  0FCD  0085               	movwf	(133)^080h	;volatile
  3102                           	line	383
  3103                           	
  3104  0FCE                     l3706:	
  3105                           ;blink.c: 383: initTimer0();
  3106  0FCE  118A  24A3  158A   	fcall	_initTimer0
  3107                           	line	384
  3108                           	
  3109  0FD1                     l3708:	
  3110                           ;blink.c: 384: initTimer1();
  3111  0FD1  158A  27A8  158A   	fcall	_initTimer1
  3112                           	line	386
  3113                           	
  3114  0FD4                     l3710:	
  3115                           ;blink.c: 386: TMR1cnt = 0;
  3116  0FD4  1283               	bcf	status, 5	;RP0=0, select bank0
  3117  0FD5  1303               	bcf	status, 6	;RP1=0, select bank0
  3118  0FD6  01D0               	clrf	(_TMR1cnt)
  3119  0FD7  01D1               	clrf	(_TMR1cnt+1)
  3120                           	line	388
  3121                           	
  3122  0FD8                     l3712:	
  3123                           ;blink.c: 388: TMR1IE = 1;
  3124  0FD8  1683               	bsf	status, 5	;RP0=1, select bank1
  3125  0FD9  1303               	bcf	status, 6	;RP1=0, select bank1
  3126  0FDA  140C               	bsf	(1120/8)^080h,(1120)&7
  3127                           	line	389
  3128                           	
  3129  0FDB                     l3714:	
  3130                           ;blink.c: 389: T0IE = 1;
  3131  0FDB  168B               	bsf	(93/8),(93)&7
  3132                           	line	390
  3133                           	
  3134  0FDC                     l458:	
  3135  0FDC  0008               	return
  3136                           	opt stack 0
  3137                           GLOBAL	__end_of_timersON
  3138  0FDD                     	__end_of_timersON:
  3139 ;; =============== function _timersON ends ============
  3140                           
  3141                           	signat	_timersON,88
  3142                           	global	_ultoa
  3143                           psect	text792,local,class=CODE,delta=2
  3144                           global __ptext792
  3145  0395                     __ptext792:
  3146                           
  3147 ;; *************** function _ultoa *****************
  3148 ;; Defined at:
  3149 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ltoa.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  buf             1    wreg     PTR unsigned char 
  3152 ;;		 -> buffer(10), 
  3153 ;;  val             4   13[BANK0 ] unsigned long 
  3154 ;;  base            2   17[BANK0 ] int 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  buf             1   24[BANK0 ] PTR unsigned char 
  3157 ;;		 -> buffer(10), 
  3158 ;;  v               4   19[BANK0 ] unsigned long 
  3159 ;;  c               1   23[BANK0 ] unsigned char 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      PTR unsigned char 
  3162 ;; Registers used:
  3163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3169 ;;      Params:         0       6       0       0
  3170 ;;      Locals:         0       6       0       0
  3171 ;;      Temps:          1       0       0       0
  3172 ;;      Totals:         1      12       0       0
  3173 ;;Total ram usage:       13 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; Hardware stack levels required when called:    2
  3176 ;; This function calls:
  3177 ;;		___lldiv
  3178 ;;		___llmod
  3179 ;; This function is called by:
  3180 ;;		_doFrequency
  3181 ;;		_ltoa
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           psect	text792
  3185                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ltoa.c"
  3186                           	line	17
  3187                           	global	__size_of_ultoa
  3188  0097                     	__size_of_ultoa	equ	__end_of_ultoa-_ultoa
  3189                           	
  3190  0395                     _ultoa:	
  3191                           	opt	stack 4
  3192                           ; Regs used in _ultoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3193                           ;ultoa@buf stored from wreg
  3194                           	line	21
  3195  0395  1283               	bcf	status, 5	;RP0=0, select bank0
  3196  0396  1303               	bcf	status, 6	;RP1=0, select bank0
  3197  0397  00B8               	movwf	(ultoa@buf)
  3198                           	
  3199  0398                     l3676:	
  3200  0398  0830               	movf	(ultoa@val+3),w
  3201  0399  00B6               	movwf	(ultoa@v+3)
  3202  039A  082F               	movf	(ultoa@val+2),w
  3203  039B  00B5               	movwf	(ultoa@v+2)
  3204  039C  082E               	movf	(ultoa@val+1),w
  3205  039D  00B4               	movwf	(ultoa@v+1)
  3206  039E  082D               	movf	(ultoa@val),w
  3207  039F  00B3               	movwf	(ultoa@v)
  3208                           
  3209  03A0  2BA1               	goto	l3678
  3210                           	line	22
  3211                           	
  3212  03A1                     l1304:	
  3213                           	line	23
  3214                           	
  3215  03A1                     l3678:	
  3216  03A1  0831               	movf	(ultoa@base),w
  3217  03A2  00A0               	movwf	(?___lldiv)
  3218  03A3  0832               	movf	(ultoa@base+1),w
  3219  03A4  00A1               	movwf	(?___lldiv+1)
  3220  03A5  3000               	movlw	0
  3221  03A6  1BA1               	btfsc	(?___lldiv+1),7
  3222  03A7  30FF               	movlw	255
  3223  03A8  00A2               	movwf	(?___lldiv+2)
  3224  03A9  00A3               	movwf	(?___lldiv+3)
  3225  03AA  0836               	movf	(ultoa@v+3),w
  3226  03AB  00A7               	movwf	3+(?___lldiv)+04h
  3227  03AC  0835               	movf	(ultoa@v+2),w
  3228  03AD  00A6               	movwf	2+(?___lldiv)+04h
  3229  03AE  0834               	movf	(ultoa@v+1),w
  3230  03AF  00A5               	movwf	1+(?___lldiv)+04h
  3231  03B0  0833               	movf	(ultoa@v),w
  3232  03B1  00A4               	movwf	0+(?___lldiv)+04h
  3233                           
  3234  03B2  118A  2515  118A   	fcall	___lldiv
  3235  03B5  1283               	bcf	status, 5	;RP0=0, select bank0
  3236  03B6  1303               	bcf	status, 6	;RP1=0, select bank0
  3237  03B7  0823               	movf	(3+(?___lldiv)),w
  3238  03B8  00B6               	movwf	(ultoa@v+3)
  3239  03B9  0822               	movf	(2+(?___lldiv)),w
  3240  03BA  00B5               	movwf	(ultoa@v+2)
  3241  03BB  0821               	movf	(1+(?___lldiv)),w
  3242  03BC  00B4               	movwf	(ultoa@v+1)
  3243  03BD  0820               	movf	(0+(?___lldiv)),w
  3244  03BE  00B3               	movwf	(ultoa@v)
  3245                           
  3246                           	line	24
  3247                           	
  3248  03BF                     l3680:	
  3249  03BF  3001               	movlw	(01h)
  3250  03C0  00F6               	movwf	(??_ultoa+0)+0
  3251  03C1  0876               	movf	(??_ultoa+0)+0,w
  3252  03C2  07B8               	addwf	(ultoa@buf),f
  3253                           	line	25
  3254                           	
  3255  03C3                     l3682:	
  3256  03C3  0836               	movf	(ultoa@v+3),w
  3257  03C4  0435               	iorwf	(ultoa@v+2),w
  3258  03C5  0434               	iorwf	(ultoa@v+1),w
  3259  03C6  0433               	iorwf	(ultoa@v),w
  3260  03C7  1D03               	skipz
  3261  03C8  2BCA               	goto	u3751
  3262  03C9  2BCB               	goto	u3750
  3263  03CA                     u3751:
  3264  03CA  2BA1               	goto	l3678
  3265  03CB                     u3750:
  3266  03CB  2BCC               	goto	l3684
  3267                           	
  3268  03CC                     l1305:	
  3269                           	line	26
  3270                           	
  3271  03CC                     l3684:	
  3272  03CC  0838               	movf	(ultoa@buf),w
  3273  03CD  0084               	movwf	fsr0
  3274  03CE  1383               	bcf	status, 7	;select IRP bank0
  3275  03CF  0180               	clrf	indf
  3276                           	
  3277  03D0                     l3686:	
  3278  03D0  3001               	movlw	low(01h)
  3279  03D1  02B8               	subwf	(ultoa@buf),f
  3280  03D2  2BD3               	goto	l3688
  3281                           	line	27
  3282                           	
  3283  03D3                     l1306:	
  3284                           	line	28
  3285                           	
  3286  03D3                     l3688:	
  3287  03D3  0831               	movf	(ultoa@base),w
  3288  03D4  00A0               	movwf	(?___llmod)
  3289  03D5  0832               	movf	(ultoa@base+1),w
  3290  03D6  00A1               	movwf	(?___llmod+1)
  3291  03D7  3000               	movlw	0
  3292  03D8  1BA1               	btfsc	(?___llmod+1),7
  3293  03D9  30FF               	movlw	255
  3294  03DA  00A2               	movwf	(?___llmod+2)
  3295  03DB  00A3               	movwf	(?___llmod+3)
  3296  03DC  0830               	movf	(ultoa@val+3),w
  3297  03DD  00A7               	movwf	3+(?___llmod)+04h
  3298  03DE  082F               	movf	(ultoa@val+2),w
  3299  03DF  00A6               	movwf	2+(?___llmod)+04h
  3300  03E0  082E               	movf	(ultoa@val+1),w
  3301  03E1  00A5               	movwf	1+(?___llmod)+04h
  3302  03E2  082D               	movf	(ultoa@val),w
  3303  03E3  00A4               	movwf	0+(?___llmod)+04h
  3304                           
  3305  03E4  118A  2657  118A   	fcall	___llmod
  3306  03E7  1283               	bcf	status, 5	;RP0=0, select bank0
  3307  03E8  1303               	bcf	status, 6	;RP1=0, select bank0
  3308  03E9  0820               	movf	0+(((0+(?___llmod)))),w
  3309  03EA  00F6               	movwf	(??_ultoa+0)+0
  3310  03EB  0876               	movf	(??_ultoa+0)+0,w
  3311  03EC  00B7               	movwf	(ultoa@c)
  3312                           	line	29
  3313                           	
  3314  03ED                     l3690:	
  3315  03ED  0831               	movf	(ultoa@base),w
  3316  03EE  00A0               	movwf	(?___lldiv)
  3317  03EF  0832               	movf	(ultoa@base+1),w
  3318  03F0  00A1               	movwf	(?___lldiv+1)
  3319  03F1  3000               	movlw	0
  3320  03F2  1BA1               	btfsc	(?___lldiv+1),7
  3321  03F3  30FF               	movlw	255
  3322  03F4  00A2               	movwf	(?___lldiv+2)
  3323  03F5  00A3               	movwf	(?___lldiv+3)
  3324  03F6  0830               	movf	(ultoa@val+3),w
  3325  03F7  00A7               	movwf	3+(?___lldiv)+04h
  3326  03F8  082F               	movf	(ultoa@val+2),w
  3327  03F9  00A6               	movwf	2+(?___lldiv)+04h
  3328  03FA  082E               	movf	(ultoa@val+1),w
  3329  03FB  00A5               	movwf	1+(?___lldiv)+04h
  3330  03FC  082D               	movf	(ultoa@val),w
  3331  03FD  00A4               	movwf	0+(?___lldiv)+04h
  3332                           
  3333  03FE  118A  2515  118A   	fcall	___lldiv
  3334  0401  1283               	bcf	status, 5	;RP0=0, select bank0
  3335  0402  1303               	bcf	status, 6	;RP1=0, select bank0
  3336  0403  0823               	movf	(3+(?___lldiv)),w
  3337  0404  00B0               	movwf	(ultoa@val+3)
  3338  0405  0822               	movf	(2+(?___lldiv)),w
  3339  0406  00AF               	movwf	(ultoa@val+2)
  3340  0407  0821               	movf	(1+(?___lldiv)),w
  3341  0408  00AE               	movwf	(ultoa@val+1)
  3342  0409  0820               	movf	(0+(?___lldiv)),w
  3343  040A  00AD               	movwf	(ultoa@val)
  3344                           
  3345                           	line	30
  3346                           	
  3347  040B                     l3692:	
  3348  040B  300A               	movlw	(0Ah)
  3349  040C  0237               	subwf	(ultoa@c),w
  3350  040D  1C03               	skipc
  3351  040E  2C10               	goto	u3761
  3352  040F  2C11               	goto	u3760
  3353  0410                     u3761:
  3354  0410  2C15               	goto	l1307
  3355  0411                     u3760:
  3356                           	line	31
  3357                           	
  3358  0411                     l3694:	
  3359  0411  3007               	movlw	(07h)
  3360  0412  00F6               	movwf	(??_ultoa+0)+0
  3361  0413  0876               	movf	(??_ultoa+0)+0,w
  3362  0414  07B7               	addwf	(ultoa@c),f
  3363                           	
  3364  0415                     l1307:	
  3365                           	line	32
  3366  0415  3030               	movlw	(030h)
  3367  0416  00F6               	movwf	(??_ultoa+0)+0
  3368  0417  0876               	movf	(??_ultoa+0)+0,w
  3369  0418  07B7               	addwf	(ultoa@c),f
  3370                           	line	33
  3371                           	
  3372  0419                     l3696:	
  3373  0419  0837               	movf	(ultoa@c),w
  3374  041A  00F6               	movwf	(??_ultoa+0)+0
  3375  041B  0838               	movf	(ultoa@buf),w
  3376  041C  0084               	movwf	fsr0
  3377  041D  0876               	movf	(??_ultoa+0)+0,w
  3378  041E  1383               	bcf	status, 7	;select IRP bank0
  3379  041F  0080               	movwf	indf
  3380                           	
  3381  0420                     l3698:	
  3382  0420  3001               	movlw	low(01h)
  3383  0421  02B8               	subwf	(ultoa@buf),f
  3384                           	line	34
  3385                           	
  3386  0422                     l3700:	
  3387  0422  0830               	movf	(ultoa@val+3),w
  3388  0423  042F               	iorwf	(ultoa@val+2),w
  3389  0424  042E               	iorwf	(ultoa@val+1),w
  3390  0425  042D               	iorwf	(ultoa@val),w
  3391  0426  1D03               	skipz
  3392  0427  2C29               	goto	u3771
  3393  0428  2C2A               	goto	u3770
  3394  0429                     u3771:
  3395  0429  2BD3               	goto	l3688
  3396  042A                     u3770:
  3397  042A  2C2B               	goto	l1309
  3398                           	
  3399  042B                     l1308:	
  3400                           	line	36
  3401                           ;	Return value of _ultoa is never used
  3402                           	
  3403  042B                     l1309:	
  3404  042B  0008               	return
  3405                           	opt stack 0
  3406                           GLOBAL	__end_of_ultoa
  3407  042C                     	__end_of_ultoa:
  3408 ;; =============== function _ultoa ends ============
  3409                           
  3410                           	signat	_ultoa,12409
  3411                           	global	___tmul
  3412                           psect	text793,local,class=CODE,delta=2
  3413                           global __ptext793
  3414  0750                     __ptext793:
  3415                           
  3416 ;; *************** function ___tmul *****************
  3417 ;; Defined at:
  3418 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\tmul.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;  multiplier      3    0[BANK0 ] unsigned um
  3421 ;;  multiplicand    3    3[BANK0 ] unsigned um
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;  product         3    4[COMMON] unsigned um
  3424 ;; Return value:  Size  Location     Type
  3425 ;;                  3    0[BANK0 ] unsigned um
  3426 ;; Registers used:
  3427 ;;		wreg, status,2, status,0
  3428 ;; Tracked objects:
  3429 ;;		On entry : 0/0
  3430 ;;		On exit  : 0/0
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3433 ;;      Params:         0       6       0       0
  3434 ;;      Locals:         3       0       0       0
  3435 ;;      Temps:          0       0       0       0
  3436 ;;      Totals:         3       6       0       0
  3437 ;;Total ram usage:        9 bytes
  3438 ;; Hardware stack levels used:    1
  3439 ;; Hardware stack levels required when called:    1
  3440 ;; This function calls:
  3441 ;;		Nothing
  3442 ;; This function is called by:
  3443 ;;		_timersOFF
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           psect	text793
  3447                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\tmul.c"
  3448                           	line	3
  3449                           	global	__size_of___tmul
  3450  003E                     	__size_of___tmul	equ	__end_of___tmul-___tmul
  3451                           	
  3452  0750                     ___tmul:	
  3453                           	opt	stack 5
  3454                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  3455                           	line	4
  3456                           	
  3457  0750                     l3662:	
  3458  0750  3000               	movlw	0
  3459  0751  00F4               	movwf	(___tmul@product)
  3460  0752  3000               	movlw	0
  3461  0753  00F5               	movwf	(___tmul@product+1)
  3462  0754  3000               	movlw	0
  3463  0755  00F6               	movwf	(___tmul@product+2)
  3464  0756  2F57               	goto	l3664
  3465                           	line	6
  3466                           	
  3467  0757                     l1644:	
  3468                           	line	7
  3469                           	
  3470  0757                     l3664:	
  3471  0757  1283               	bcf	status, 5	;RP0=0, select bank0
  3472  0758  1303               	bcf	status, 6	;RP1=0, select bank0
  3473  0759  1C20               	btfss	(___tmul@multiplier),(0)&7
  3474  075A  2F5C               	goto	u3701
  3475  075B  2F5D               	goto	u3700
  3476  075C                     u3701:
  3477  075C  2F6E               	goto	l3668
  3478  075D                     u3700:
  3479                           	line	8
  3480                           	
  3481  075D                     l3666:	
  3482  075D  0823               	movf	(___tmul@multiplicand),w
  3483  075E  07F4               	addwf	(___tmul@product),f
  3484  075F  0824               	movf	(___tmul@multiplicand+1),w
  3485  0760  1103               	clrz
  3486  0761  1803               	skipnc
  3487  0762  0A24               	incf	(___tmul@multiplicand+1),w
  3488  0763  1903               	skipnz
  3489  0764  2F66               	goto	u3711
  3490  0765  07F5               	addwf	(___tmul@product+1),f
  3491  0766                     u3711:
  3492  0766  0825               	movf	(___tmul@multiplicand+2),w
  3493  0767  1103               	clrz
  3494  0768  1803               	skipnc
  3495  0769  0A25               	incf	(___tmul@multiplicand+2),w
  3496  076A  1903               	skipnz
  3497  076B  2F6D               	goto	u3712
  3498  076C  07F6               	addwf	(___tmul@product+2),f
  3499  076D                     u3712:
  3500                           
  3501  076D  2F6E               	goto	l3668
  3502                           	
  3503  076E                     l1645:	
  3504                           	line	9
  3505                           	
  3506  076E                     l3668:	
  3507  076E  3001               	movlw	01h
  3508  076F                     u3725:
  3509  076F  1003               	clrc
  3510  0770  0DA3               	rlf	(___tmul@multiplicand),f
  3511  0771  0DA4               	rlf	(___tmul@multiplicand+1),f
  3512  0772  0DA5               	rlf	(___tmul@multiplicand+2),f
  3513  0773  3EFF               	addlw	-1
  3514  0774  1D03               	skipz
  3515  0775  2F6F               	goto	u3725
  3516                           	line	10
  3517                           	
  3518  0776                     l3670:	
  3519  0776  3001               	movlw	01h
  3520  0777                     u3735:
  3521  0777  1003               	clrc
  3522  0778  0CA2               	rrf	(___tmul@multiplier+2),f
  3523  0779  0CA1               	rrf	(___tmul@multiplier+1),f
  3524  077A  0CA0               	rrf	(___tmul@multiplier),f
  3525  077B  3EFF               	addlw	-1
  3526  077C  1D03               	skipz
  3527  077D  2F77               	goto	u3735
  3528                           
  3529                           	line	11
  3530  077E  0822               	movf	(___tmul@multiplier+2),w
  3531  077F  0421               	iorwf	(___tmul@multiplier+1),w
  3532  0780  0420               	iorwf	(___tmul@multiplier),w
  3533  0781  1D03               	skipz
  3534  0782  2F84               	goto	u3741
  3535  0783  2F85               	goto	u3740
  3536  0784                     u3741:
  3537  0784  2F57               	goto	l3664
  3538  0785                     u3740:
  3539  0785  2F86               	goto	l3672
  3540                           	
  3541  0786                     l1646:	
  3542                           	line	12
  3543                           	
  3544  0786                     l3672:	
  3545  0786  0874               	movf	(___tmul@product),w
  3546  0787  00A0               	movwf	(?___tmul)
  3547  0788  0875               	movf	(___tmul@product+1),w
  3548  0789  00A1               	movwf	(?___tmul+1)
  3549  078A  0876               	movf	(___tmul@product+2),w
  3550  078B  00A2               	movwf	(?___tmul+2)
  3551  078C  2F8D               	goto	l1647
  3552                           	
  3553  078D                     l3674:	
  3554                           	line	13
  3555                           	
  3556  078D                     l1647:	
  3557  078D  0008               	return
  3558                           	opt stack 0
  3559                           GLOBAL	__end_of___tmul
  3560  078E                     	__end_of___tmul:
  3561 ;; =============== function ___tmul ends ============
  3562                           
  3563                           	signat	___tmul,8315
  3564                           	global	___awmod
  3565                           psect	text794,local,class=CODE,delta=2
  3566                           global __ptext794
  3567  05EF                     __ptext794:
  3568                           
  3569 ;; *************** function ___awmod *****************
  3570 ;; Defined at:
  3571 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awmod.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;  divisor         2    0[BANK0 ] int 
  3574 ;;  dividend        2    2[BANK0 ] int 
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  sign            1    6[COMMON] unsigned char 
  3577 ;;  counter         1    5[COMMON] unsigned char 
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  2    0[BANK0 ] int 
  3580 ;; Registers used:
  3581 ;;		wreg, status,2, status,0
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3587 ;;      Params:         0       4       0       0
  3588 ;;      Locals:         2       0       0       0
  3589 ;;      Temps:          1       0       0       0
  3590 ;;      Totals:         3       4       0       0
  3591 ;;Total ram usage:        7 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:    1
  3594 ;; This function calls:
  3595 ;;		Nothing
  3596 ;; This function is called by:
  3597 ;;		_lcd_putnumber
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           psect	text794
  3601                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awmod.c"
  3602                           	line	5
  3603                           	global	__size_of___awmod
  3604  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  3605                           	
  3606  05EF                     ___awmod:	
  3607                           	opt	stack 4
  3608                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3609                           	line	8
  3610                           	
  3611  05EF                     l3628:	
  3612  05EF  01F6               	clrf	(___awmod@sign)
  3613                           	line	9
  3614  05F0  1283               	bcf	status, 5	;RP0=0, select bank0
  3615  05F1  1303               	bcf	status, 6	;RP1=0, select bank0
  3616  05F2  1FA3               	btfss	(___awmod@dividend+1),7
  3617  05F3  2DF5               	goto	u3611
  3618  05F4  2DF6               	goto	u3610
  3619  05F5                     u3611:
  3620  05F5  2DFF               	goto	l3632
  3621  05F6                     u3610:
  3622                           	line	10
  3623                           	
  3624  05F6                     l3630:	
  3625  05F6  09A2               	comf	(___awmod@dividend),f
  3626  05F7  09A3               	comf	(___awmod@dividend+1),f
  3627  05F8  0AA2               	incf	(___awmod@dividend),f
  3628  05F9  1903               	skipnz
  3629  05FA  0AA3               	incf	(___awmod@dividend+1),f
  3630                           	line	11
  3631  05FB  01F6               	clrf	(___awmod@sign)
  3632  05FC  1403               	bsf	status,0
  3633  05FD  0DF6               	rlf	(___awmod@sign),f
  3634  05FE  2DFF               	goto	l3632
  3635                           	line	12
  3636                           	
  3637  05FF                     l1526:	
  3638                           	line	13
  3639                           	
  3640  05FF                     l3632:	
  3641  05FF  1FA1               	btfss	(___awmod@divisor+1),7
  3642  0600  2E02               	goto	u3621
  3643  0601  2E03               	goto	u3620
  3644  0602                     u3621:
  3645  0602  2E09               	goto	l3636
  3646  0603                     u3620:
  3647                           	line	14
  3648                           	
  3649  0603                     l3634:	
  3650  0603  09A0               	comf	(___awmod@divisor),f
  3651  0604  09A1               	comf	(___awmod@divisor+1),f
  3652  0605  0AA0               	incf	(___awmod@divisor),f
  3653  0606  1903               	skipnz
  3654  0607  0AA1               	incf	(___awmod@divisor+1),f
  3655  0608  2E09               	goto	l3636
  3656                           	
  3657  0609                     l1527:	
  3658                           	line	15
  3659                           	
  3660  0609                     l3636:	
  3661  0609  0821               	movf	(___awmod@divisor+1),w
  3662  060A  0420               	iorwf	(___awmod@divisor),w
  3663  060B  1903               	skipnz
  3664  060C  2E0E               	goto	u3631
  3665  060D  2E0F               	goto	u3630
  3666  060E                     u3631:
  3667  060E  2E45               	goto	l3654
  3668  060F                     u3630:
  3669                           	line	16
  3670                           	
  3671  060F                     l3638:	
  3672  060F  01F5               	clrf	(___awmod@counter)
  3673  0610  1403               	bsf	status,0
  3674  0611  0DF5               	rlf	(___awmod@counter),f
  3675                           	line	17
  3676  0612  2E1F               	goto	l3644
  3677                           	
  3678  0613                     l1530:	
  3679                           	line	18
  3680                           	
  3681  0613                     l3640:	
  3682  0613  3001               	movlw	01h
  3683                           	
  3684  0614                     u3645:
  3685  0614  1003               	clrc
  3686  0615  0DA0               	rlf	(___awmod@divisor),f
  3687  0616  0DA1               	rlf	(___awmod@divisor+1),f
  3688  0617  3EFF               	addlw	-1
  3689  0618  1D03               	skipz
  3690  0619  2E14               	goto	u3645
  3691                           	line	19
  3692                           	
  3693  061A                     l3642:	
  3694  061A  3001               	movlw	(01h)
  3695  061B  00F4               	movwf	(??___awmod+0)+0
  3696  061C  0874               	movf	(??___awmod+0)+0,w
  3697  061D  07F5               	addwf	(___awmod@counter),f
  3698  061E  2E1F               	goto	l3644
  3699                           	line	20
  3700                           	
  3701  061F                     l1529:	
  3702                           	line	17
  3703                           	
  3704  061F                     l3644:	
  3705  061F  1FA1               	btfss	(___awmod@divisor+1),(15)&7
  3706  0620  2E22               	goto	u3651
  3707  0621  2E23               	goto	u3650
  3708  0622                     u3651:
  3709  0622  2E13               	goto	l3640
  3710  0623                     u3650:
  3711  0623  2E25               	goto	l3646
  3712                           	
  3713  0624                     l1531:	
  3714  0624  2E25               	goto	l3646
  3715                           	line	21
  3716                           	
  3717  0625                     l1532:	
  3718                           	line	22
  3719                           	
  3720  0625                     l3646:	
  3721  0625  0821               	movf	(___awmod@divisor+1),w
  3722  0626  0223               	subwf	(___awmod@dividend+1),w
  3723  0627  1D03               	skipz
  3724  0628  2E2B               	goto	u3665
  3725  0629  0820               	movf	(___awmod@divisor),w
  3726  062A  0222               	subwf	(___awmod@dividend),w
  3727  062B                     u3665:
  3728  062B  1C03               	skipc
  3729  062C  2E2E               	goto	u3661
  3730  062D  2E2F               	goto	u3660
  3731  062E                     u3661:
  3732  062E  2E36               	goto	l3650
  3733  062F                     u3660:
  3734                           	line	23
  3735                           	
  3736  062F                     l3648:	
  3737  062F  0820               	movf	(___awmod@divisor),w
  3738  0630  02A2               	subwf	(___awmod@dividend),f
  3739  0631  0821               	movf	(___awmod@divisor+1),w
  3740  0632  1C03               	skipc
  3741  0633  03A3               	decf	(___awmod@dividend+1),f
  3742  0634  02A3               	subwf	(___awmod@dividend+1),f
  3743  0635  2E36               	goto	l3650
  3744                           	
  3745  0636                     l1533:	
  3746                           	line	24
  3747                           	
  3748  0636                     l3650:	
  3749  0636  3001               	movlw	01h
  3750                           	
  3751  0637                     u3675:
  3752  0637  1003               	clrc
  3753  0638  0CA1               	rrf	(___awmod@divisor+1),f
  3754  0639  0CA0               	rrf	(___awmod@divisor),f
  3755  063A  3EFF               	addlw	-1
  3756  063B  1D03               	skipz
  3757  063C  2E37               	goto	u3675
  3758                           	line	25
  3759                           	
  3760  063D                     l3652:	
  3761  063D  3001               	movlw	low(01h)
  3762  063E  02F5               	subwf	(___awmod@counter),f
  3763  063F  1D03               	btfss	status,2
  3764  0640  2E42               	goto	u3681
  3765  0641  2E43               	goto	u3680
  3766  0642                     u3681:
  3767  0642  2E25               	goto	l3646
  3768  0643                     u3680:
  3769  0643  2E45               	goto	l3654
  3770                           	
  3771  0644                     l1534:	
  3772  0644  2E45               	goto	l3654
  3773                           	line	26
  3774                           	
  3775  0645                     l1528:	
  3776                           	line	27
  3777                           	
  3778  0645                     l3654:	
  3779  0645  0876               	movf	(___awmod@sign),w
  3780  0646  1D03               	skipz
  3781  0647  2E49               	goto	u3690
  3782  0648  2E4F               	goto	l3658
  3783  0649                     u3690:
  3784                           	line	28
  3785                           	
  3786  0649                     l3656:	
  3787  0649  09A2               	comf	(___awmod@dividend),f
  3788  064A  09A3               	comf	(___awmod@dividend+1),f
  3789  064B  0AA2               	incf	(___awmod@dividend),f
  3790  064C  1903               	skipnz
  3791  064D  0AA3               	incf	(___awmod@dividend+1),f
  3792  064E  2E4F               	goto	l3658
  3793                           	
  3794  064F                     l1535:	
  3795                           	line	29
  3796                           	
  3797  064F                     l3658:	
  3798  064F  0823               	movf	(___awmod@dividend+1),w
  3799  0650  01A1               	clrf	(?___awmod+1)
  3800  0651  07A1               	addwf	(?___awmod+1)
  3801  0652  0822               	movf	(___awmod@dividend),w
  3802  0653  01A0               	clrf	(?___awmod)
  3803  0654  07A0               	addwf	(?___awmod)
  3804                           
  3805  0655  2E56               	goto	l1536
  3806                           	
  3807  0656                     l3660:	
  3808                           	line	30
  3809                           	
  3810  0656                     l1536:	
  3811  0656  0008               	return
  3812                           	opt stack 0
  3813                           GLOBAL	__end_of___awmod
  3814  0657                     	__end_of___awmod:
  3815 ;; =============== function ___awmod ends ============
  3816                           
  3817                           	signat	___awmod,8314
  3818                           	global	___lldiv
  3819                           psect	text795,local,class=CODE,delta=2
  3820                           global __ptext795
  3821  0515                     __ptext795:
  3822                           
  3823 ;; *************** function ___lldiv *****************
  3824 ;; Defined at:
  3825 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lldiv.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;  divisor         4    0[BANK0 ] unsigned long 
  3828 ;;  dividend        4    4[BANK0 ] unsigned long 
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;  quotient        4    8[BANK0 ] unsigned long 
  3831 ;;  counter         1   12[BANK0 ] unsigned char 
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  4    0[BANK0 ] unsigned long 
  3834 ;; Registers used:
  3835 ;;		wreg, status,2, status,0
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3841 ;;      Params:         0       8       0       0
  3842 ;;      Locals:         0       5       0       0
  3843 ;;      Temps:          1       0       0       0
  3844 ;;      Totals:         1      13       0       0
  3845 ;;Total ram usage:       14 bytes
  3846 ;; Hardware stack levels used:    1
  3847 ;; Hardware stack levels required when called:    1
  3848 ;; This function calls:
  3849 ;;		Nothing
  3850 ;; This function is called by:
  3851 ;;		_lcd_putnumber
  3852 ;;		_ultoa
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           psect	text795
  3856                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lldiv.c"
  3857                           	line	5
  3858                           	global	__size_of___lldiv
  3859  0070                     	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  3860                           	
  3861  0515                     ___lldiv:	
  3862                           	opt	stack 4
  3863                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3864                           	line	9
  3865                           	
  3866  0515                     l3604:	
  3867  0515  3000               	movlw	0
  3868  0516  1283               	bcf	status, 5	;RP0=0, select bank0
  3869  0517  1303               	bcf	status, 6	;RP1=0, select bank0
  3870  0518  00AB               	movwf	(___lldiv@quotient+3)
  3871  0519  3000               	movlw	0
  3872  051A  00AA               	movwf	(___lldiv@quotient+2)
  3873  051B  3000               	movlw	0
  3874  051C  00A9               	movwf	(___lldiv@quotient+1)
  3875  051D  3000               	movlw	0
  3876  051E  00A8               	movwf	(___lldiv@quotient)
  3877                           
  3878                           	line	10
  3879  051F  0823               	movf	(___lldiv@divisor+3),w
  3880  0520  0422               	iorwf	(___lldiv@divisor+2),w
  3881  0521  0421               	iorwf	(___lldiv@divisor+1),w
  3882  0522  0420               	iorwf	(___lldiv@divisor),w
  3883  0523  1903               	skipnz
  3884  0524  2D26               	goto	u3541
  3885  0525  2D27               	goto	u3540
  3886  0526                     u3541:
  3887  0526  2D7B               	goto	l3624
  3888  0527                     u3540:
  3889                           	line	11
  3890                           	
  3891  0527                     l3606:	
  3892  0527  01AC               	clrf	(___lldiv@counter)
  3893  0528  1403               	bsf	status,0
  3894  0529  0DAC               	rlf	(___lldiv@counter),f
  3895                           	line	12
  3896  052A  2D39               	goto	l3610
  3897                           	
  3898  052B                     l1492:	
  3899                           	line	13
  3900                           	
  3901  052B                     l3608:	
  3902  052B  3001               	movlw	01h
  3903  052C  00F4               	movwf	(??___lldiv+0)+0
  3904  052D                     u3555:
  3905  052D  1003               	clrc
  3906  052E  0DA0               	rlf	(___lldiv@divisor),f
  3907  052F  0DA1               	rlf	(___lldiv@divisor+1),f
  3908  0530  0DA2               	rlf	(___lldiv@divisor+2),f
  3909  0531  0DA3               	rlf	(___lldiv@divisor+3),f
  3910  0532  0BF4               	decfsz	(??___lldiv+0)+0
  3911  0533  2D2D               	goto	u3555
  3912                           	line	14
  3913  0534  3001               	movlw	(01h)
  3914  0535  00F4               	movwf	(??___lldiv+0)+0
  3915  0536  0874               	movf	(??___lldiv+0)+0,w
  3916  0537  07AC               	addwf	(___lldiv@counter),f
  3917  0538  2D39               	goto	l3610
  3918                           	line	15
  3919                           	
  3920  0539                     l1491:	
  3921                           	line	12
  3922                           	
  3923  0539                     l3610:	
  3924  0539  1FA3               	btfss	(___lldiv@divisor+3),(31)&7
  3925  053A  2D3C               	goto	u3561
  3926  053B  2D3D               	goto	u3560
  3927  053C                     u3561:
  3928  053C  2D2B               	goto	l3608
  3929  053D                     u3560:
  3930  053D  2D3F               	goto	l3612
  3931                           	
  3932  053E                     l1493:	
  3933  053E  2D3F               	goto	l3612
  3934                           	line	16
  3935                           	
  3936  053F                     l1494:	
  3937                           	line	17
  3938                           	
  3939  053F                     l3612:	
  3940  053F  3001               	movlw	01h
  3941  0540  00F4               	movwf	(??___lldiv+0)+0
  3942  0541                     u3575:
  3943  0541  1003               	clrc
  3944  0542  0DA8               	rlf	(___lldiv@quotient),f
  3945  0543  0DA9               	rlf	(___lldiv@quotient+1),f
  3946  0544  0DAA               	rlf	(___lldiv@quotient+2),f
  3947  0545  0DAB               	rlf	(___lldiv@quotient+3),f
  3948  0546  0BF4               	decfsz	(??___lldiv+0)+0
  3949  0547  2D41               	goto	u3575
  3950                           	line	18
  3951                           	
  3952  0548                     l3614:	
  3953  0548  0823               	movf	(___lldiv@divisor+3),w
  3954  0549  0227               	subwf	(___lldiv@dividend+3),w
  3955  054A  1D03               	skipz
  3956  054B  2D56               	goto	u3585
  3957  054C  0822               	movf	(___lldiv@divisor+2),w
  3958  054D  0226               	subwf	(___lldiv@dividend+2),w
  3959  054E  1D03               	skipz
  3960  054F  2D56               	goto	u3585
  3961  0550  0821               	movf	(___lldiv@divisor+1),w
  3962  0551  0225               	subwf	(___lldiv@dividend+1),w
  3963  0552  1D03               	skipz
  3964  0553  2D56               	goto	u3585
  3965  0554  0820               	movf	(___lldiv@divisor),w
  3966  0555  0224               	subwf	(___lldiv@dividend),w
  3967  0556                     u3585:
  3968  0556  1C03               	skipc
  3969  0557  2D59               	goto	u3581
  3970  0558  2D5A               	goto	u3580
  3971  0559                     u3581:
  3972  0559  2D6A               	goto	l3620
  3973  055A                     u3580:
  3974                           	line	19
  3975                           	
  3976  055A                     l3616:	
  3977  055A  0820               	movf	(___lldiv@divisor),w
  3978  055B  02A4               	subwf	(___lldiv@dividend),f
  3979  055C  0821               	movf	(___lldiv@divisor+1),w
  3980  055D  1C03               	skipc
  3981  055E  0F21               	incfsz	(___lldiv@divisor+1),w
  3982  055F  02A5               	subwf	(___lldiv@dividend+1),f
  3983  0560  0822               	movf	(___lldiv@divisor+2),w
  3984  0561  1C03               	skipc
  3985  0562  0F22               	incfsz	(___lldiv@divisor+2),w
  3986  0563  02A6               	subwf	(___lldiv@dividend+2),f
  3987  0564  0823               	movf	(___lldiv@divisor+3),w
  3988  0565  1C03               	skipc
  3989  0566  0F23               	incfsz	(___lldiv@divisor+3),w
  3990  0567  02A7               	subwf	(___lldiv@dividend+3),f
  3991                           	line	20
  3992                           	
  3993  0568                     l3618:	
  3994  0568  1428               	bsf	(___lldiv@quotient)+(0/8),(0)&7
  3995  0569  2D6A               	goto	l3620
  3996                           	line	21
  3997                           	
  3998  056A                     l1495:	
  3999                           	line	22
  4000                           	
  4001  056A                     l3620:	
  4002  056A  3001               	movlw	01h
  4003  056B                     u3595:
  4004  056B  1003               	clrc
  4005  056C  0CA3               	rrf	(___lldiv@divisor+3),f
  4006  056D  0CA2               	rrf	(___lldiv@divisor+2),f
  4007  056E  0CA1               	rrf	(___lldiv@divisor+1),f
  4008  056F  0CA0               	rrf	(___lldiv@divisor),f
  4009  0570  3EFF               	addlw	-1
  4010  0571  1D03               	skipz
  4011  0572  2D6B               	goto	u3595
  4012                           
  4013                           	line	23
  4014                           	
  4015  0573                     l3622:	
  4016  0573  3001               	movlw	low(01h)
  4017  0574  02AC               	subwf	(___lldiv@counter),f
  4018  0575  1D03               	btfss	status,2
  4019  0576  2D78               	goto	u3601
  4020  0577  2D79               	goto	u3600
  4021  0578                     u3601:
  4022  0578  2D3F               	goto	l3612
  4023  0579                     u3600:
  4024  0579  2D7B               	goto	l3624
  4025                           	
  4026  057A                     l1496:	
  4027  057A  2D7B               	goto	l3624
  4028                           	line	24
  4029                           	
  4030  057B                     l1490:	
  4031                           	line	25
  4032                           	
  4033  057B                     l3624:	
  4034  057B  082B               	movf	(___lldiv@quotient+3),w
  4035  057C  00A3               	movwf	(?___lldiv+3)
  4036  057D  082A               	movf	(___lldiv@quotient+2),w
  4037  057E  00A2               	movwf	(?___lldiv+2)
  4038  057F  0829               	movf	(___lldiv@quotient+1),w
  4039  0580  00A1               	movwf	(?___lldiv+1)
  4040  0581  0828               	movf	(___lldiv@quotient),w
  4041  0582  00A0               	movwf	(?___lldiv)
  4042                           
  4043  0583  2D84               	goto	l1497
  4044                           	
  4045  0584                     l3626:	
  4046                           	line	26
  4047                           	
  4048  0584                     l1497:	
  4049  0584  0008               	return
  4050                           	opt stack 0
  4051                           GLOBAL	__end_of___lldiv
  4052  0585                     	__end_of___lldiv:
  4053 ;; =============== function ___lldiv ends ============
  4054                           
  4055                           	signat	___lldiv,8316
  4056                           	global	___llmod
  4057                           psect	text796,local,class=CODE,delta=2
  4058                           global __ptext796
  4059  0657                     __ptext796:
  4060                           
  4061 ;; *************** function ___llmod *****************
  4062 ;; Defined at:
  4063 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\llmod.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  divisor         4    0[BANK0 ] unsigned long 
  4066 ;;  dividend        4    4[BANK0 ] unsigned long 
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;  counter         1    5[COMMON] unsigned char 
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  4    0[BANK0 ] unsigned long 
  4071 ;; Registers used:
  4072 ;;		wreg, status,2, status,0
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4078 ;;      Params:         0       8       0       0
  4079 ;;      Locals:         1       0       0       0
  4080 ;;      Temps:          1       0       0       0
  4081 ;;      Totals:         2       8       0       0
  4082 ;;Total ram usage:       10 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; Hardware stack levels required when called:    1
  4085 ;; This function calls:
  4086 ;;		Nothing
  4087 ;; This function is called by:
  4088 ;;		_lcd_putnumber
  4089 ;;		_ultoa
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           psect	text796
  4093                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\llmod.c"
  4094                           	line	5
  4095                           	global	__size_of___llmod
  4096  005E                     	__size_of___llmod	equ	__end_of___llmod-___llmod
  4097                           	
  4098  0657                     ___llmod:	
  4099                           	opt	stack 4
  4100                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4101                           	line	8
  4102                           	
  4103  0657                     l3162:	
  4104  0657  1283               	bcf	status, 5	;RP0=0, select bank0
  4105  0658  1303               	bcf	status, 6	;RP1=0, select bank0
  4106  0659  0823               	movf	(___llmod@divisor+3),w
  4107  065A  0422               	iorwf	(___llmod@divisor+2),w
  4108  065B  0421               	iorwf	(___llmod@divisor+1),w
  4109  065C  0420               	iorwf	(___llmod@divisor),w
  4110  065D  1903               	skipnz
  4111  065E  2E60               	goto	u2841
  4112  065F  2E61               	goto	u2840
  4113  0660                     u2841:
  4114  0660  2EAB               	goto	l3178
  4115  0661                     u2840:
  4116                           	line	9
  4117                           	
  4118  0661                     l3164:	
  4119  0661  01F5               	clrf	(___llmod@counter)
  4120  0662  1403               	bsf	status,0
  4121  0663  0DF5               	rlf	(___llmod@counter),f
  4122                           	line	10
  4123  0664  2E73               	goto	l3168
  4124                           	
  4125  0665                     l1473:	
  4126                           	line	11
  4127                           	
  4128  0665                     l3166:	
  4129  0665  3001               	movlw	01h
  4130  0666  00F4               	movwf	(??___llmod+0)+0
  4131  0667                     u2855:
  4132  0667  1003               	clrc
  4133  0668  0DA0               	rlf	(___llmod@divisor),f
  4134  0669  0DA1               	rlf	(___llmod@divisor+1),f
  4135  066A  0DA2               	rlf	(___llmod@divisor+2),f
  4136  066B  0DA3               	rlf	(___llmod@divisor+3),f
  4137  066C  0BF4               	decfsz	(??___llmod+0)+0
  4138  066D  2E67               	goto	u2855
  4139                           	line	12
  4140  066E  3001               	movlw	(01h)
  4141  066F  00F4               	movwf	(??___llmod+0)+0
  4142  0670  0874               	movf	(??___llmod+0)+0,w
  4143  0671  07F5               	addwf	(___llmod@counter),f
  4144  0672  2E73               	goto	l3168
  4145                           	line	13
  4146                           	
  4147  0673                     l1472:	
  4148                           	line	10
  4149                           	
  4150  0673                     l3168:	
  4151  0673  1FA3               	btfss	(___llmod@divisor+3),(31)&7
  4152  0674  2E76               	goto	u2861
  4153  0675  2E77               	goto	u2860
  4154  0676                     u2861:
  4155  0676  2E65               	goto	l3166
  4156  0677                     u2860:
  4157  0677  2E79               	goto	l3170
  4158                           	
  4159  0678                     l1474:	
  4160  0678  2E79               	goto	l3170
  4161                           	line	14
  4162                           	
  4163  0679                     l1475:	
  4164                           	line	15
  4165                           	
  4166  0679                     l3170:	
  4167  0679  0823               	movf	(___llmod@divisor+3),w
  4168  067A  0227               	subwf	(___llmod@dividend+3),w
  4169  067B  1D03               	skipz
  4170  067C  2E87               	goto	u2875
  4171  067D  0822               	movf	(___llmod@divisor+2),w
  4172  067E  0226               	subwf	(___llmod@dividend+2),w
  4173  067F  1D03               	skipz
  4174  0680  2E87               	goto	u2875
  4175  0681  0821               	movf	(___llmod@divisor+1),w
  4176  0682  0225               	subwf	(___llmod@dividend+1),w
  4177  0683  1D03               	skipz
  4178  0684  2E87               	goto	u2875
  4179  0685  0820               	movf	(___llmod@divisor),w
  4180  0686  0224               	subwf	(___llmod@dividend),w
  4181  0687                     u2875:
  4182  0687  1C03               	skipc
  4183  0688  2E8A               	goto	u2871
  4184  0689  2E8B               	goto	u2870
  4185  068A                     u2871:
  4186  068A  2E9A               	goto	l3174
  4187  068B                     u2870:
  4188                           	line	16
  4189                           	
  4190  068B                     l3172:	
  4191  068B  0820               	movf	(___llmod@divisor),w
  4192  068C  02A4               	subwf	(___llmod@dividend),f
  4193  068D  0821               	movf	(___llmod@divisor+1),w
  4194  068E  1C03               	skipc
  4195  068F  0F21               	incfsz	(___llmod@divisor+1),w
  4196  0690  02A5               	subwf	(___llmod@dividend+1),f
  4197  0691  0822               	movf	(___llmod@divisor+2),w
  4198  0692  1C03               	skipc
  4199  0693  0F22               	incfsz	(___llmod@divisor+2),w
  4200  0694  02A6               	subwf	(___llmod@dividend+2),f
  4201  0695  0823               	movf	(___llmod@divisor+3),w
  4202  0696  1C03               	skipc
  4203  0697  0F23               	incfsz	(___llmod@divisor+3),w
  4204  0698  02A7               	subwf	(___llmod@dividend+3),f
  4205  0699  2E9A               	goto	l3174
  4206                           	
  4207  069A                     l1476:	
  4208                           	line	17
  4209                           	
  4210  069A                     l3174:	
  4211  069A  3001               	movlw	01h
  4212  069B                     u2885:
  4213  069B  1003               	clrc
  4214  069C  0CA3               	rrf	(___llmod@divisor+3),f
  4215  069D  0CA2               	rrf	(___llmod@divisor+2),f
  4216  069E  0CA1               	rrf	(___llmod@divisor+1),f
  4217  069F  0CA0               	rrf	(___llmod@divisor),f
  4218  06A0  3EFF               	addlw	-1
  4219  06A1  1D03               	skipz
  4220  06A2  2E9B               	goto	u2885
  4221                           
  4222                           	line	18
  4223                           	
  4224  06A3                     l3176:	
  4225  06A3  3001               	movlw	low(01h)
  4226  06A4  02F5               	subwf	(___llmod@counter),f
  4227  06A5  1D03               	btfss	status,2
  4228  06A6  2EA8               	goto	u2891
  4229  06A7  2EA9               	goto	u2890
  4230  06A8                     u2891:
  4231  06A8  2E79               	goto	l3170
  4232  06A9                     u2890:
  4233  06A9  2EAB               	goto	l3178
  4234                           	
  4235  06AA                     l1477:	
  4236  06AA  2EAB               	goto	l3178
  4237                           	line	19
  4238                           	
  4239  06AB                     l1471:	
  4240                           	line	20
  4241                           	
  4242  06AB                     l3178:	
  4243  06AB  0827               	movf	(___llmod@dividend+3),w
  4244  06AC  00A3               	movwf	(?___llmod+3)
  4245  06AD  0826               	movf	(___llmod@dividend+2),w
  4246  06AE  00A2               	movwf	(?___llmod+2)
  4247  06AF  0825               	movf	(___llmod@dividend+1),w
  4248  06B0  00A1               	movwf	(?___llmod+1)
  4249  06B1  0824               	movf	(___llmod@dividend),w
  4250  06B2  00A0               	movwf	(?___llmod)
  4251                           
  4252  06B3  2EB4               	goto	l1478
  4253                           	
  4254  06B4                     l3180:	
  4255                           	line	21
  4256                           	
  4257  06B4                     l1478:	
  4258  06B4  0008               	return
  4259                           	opt stack 0
  4260                           GLOBAL	__end_of___llmod
  4261  06B5                     	__end_of___llmod:
  4262 ;; =============== function ___llmod ends ============
  4263                           
  4264                           	signat	___llmod,8316
  4265                           	global	___lmul
  4266                           psect	text797,local,class=CODE,delta=2
  4267                           global __ptext797
  4268  0704                     __ptext797:
  4269                           
  4270 ;; *************** function ___lmul *****************
  4271 ;; Defined at:
  4272 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lmul.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;  multiplier      4    0[BANK0 ] unsigned long 
  4275 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  product         4    8[BANK0 ] unsigned long 
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  4    0[BANK0 ] unsigned long 
  4280 ;; Registers used:
  4281 ;;		wreg, status,2, status,0
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4287 ;;      Params:         0       8       0       0
  4288 ;;      Locals:         0       4       0       0
  4289 ;;      Temps:          1       0       0       0
  4290 ;;      Totals:         1      12       0       0
  4291 ;;Total ram usage:       13 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; Hardware stack levels required when called:    1
  4294 ;; This function calls:
  4295 ;;		Nothing
  4296 ;; This function is called by:
  4297 ;;		_doFrequency
  4298 ;;		_timersOFF
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           psect	text797
  4302                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lmul.c"
  4303                           	line	3
  4304                           	global	__size_of___lmul
  4305  004C                     	__size_of___lmul	equ	__end_of___lmul-___lmul
  4306                           	
  4307  0704                     ___lmul:	
  4308                           	opt	stack 5
  4309                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4310                           	line	4
  4311                           	
  4312  0704                     l3590:	
  4313  0704  3000               	movlw	0
  4314  0705  1283               	bcf	status, 5	;RP0=0, select bank0
  4315  0706  1303               	bcf	status, 6	;RP1=0, select bank0
  4316  0707  00AB               	movwf	(___lmul@product+3)
  4317  0708  3000               	movlw	0
  4318  0709  00AA               	movwf	(___lmul@product+2)
  4319  070A  3000               	movlw	0
  4320  070B  00A9               	movwf	(___lmul@product+1)
  4321  070C  3000               	movlw	0
  4322  070D  00A8               	movwf	(___lmul@product)
  4323                           
  4324  070E  2F0F               	goto	l3592
  4325                           	line	6
  4326                           	
  4327  070F                     l1393:	
  4328                           	line	7
  4329                           	
  4330  070F                     l3592:	
  4331  070F  1C20               	btfss	(___lmul@multiplier),(0)&7
  4332  0710  2F12               	goto	u3491
  4333  0711  2F13               	goto	u3490
  4334  0712                     u3491:
  4335  0712  2F2B               	goto	l3596
  4336  0713                     u3490:
  4337                           	line	8
  4338                           	
  4339  0713                     l3594:	
  4340  0713  0824               	movf	(___lmul@multiplicand),w
  4341  0714  07A8               	addwf	(___lmul@product),f
  4342  0715  0825               	movf	(___lmul@multiplicand+1),w
  4343  0716  1103               	clrz
  4344  0717  1803               	skipnc
  4345  0718  3E01               	addlw	1
  4346  0719  1903               	skipnz
  4347  071A  2F1C               	goto	u3501
  4348  071B  07A9               	addwf	(___lmul@product+1),f
  4349  071C                     u3501:
  4350  071C  0826               	movf	(___lmul@multiplicand+2),w
  4351  071D  1103               	clrz
  4352  071E  1803               	skipnc
  4353  071F  3E01               	addlw	1
  4354  0720  1903               	skipnz
  4355  0721  2F23               	goto	u3502
  4356  0722  07AA               	addwf	(___lmul@product+2),f
  4357  0723                     u3502:
  4358  0723  0827               	movf	(___lmul@multiplicand+3),w
  4359  0724  1103               	clrz
  4360  0725  1803               	skipnc
  4361  0726  3E01               	addlw	1
  4362  0727  1903               	skipnz
  4363  0728  2F2A               	goto	u3503
  4364  0729  07AB               	addwf	(___lmul@product+3),f
  4365  072A                     u3503:
  4366                           
  4367  072A  2F2B               	goto	l3596
  4368                           	
  4369  072B                     l1394:	
  4370                           	line	9
  4371                           	
  4372  072B                     l3596:	
  4373  072B  3001               	movlw	01h
  4374  072C  00F4               	movwf	(??___lmul+0)+0
  4375  072D                     u3515:
  4376  072D  1003               	clrc
  4377  072E  0DA4               	rlf	(___lmul@multiplicand),f
  4378  072F  0DA5               	rlf	(___lmul@multiplicand+1),f
  4379  0730  0DA6               	rlf	(___lmul@multiplicand+2),f
  4380  0731  0DA7               	rlf	(___lmul@multiplicand+3),f
  4381  0732  0BF4               	decfsz	(??___lmul+0)+0
  4382  0733  2F2D               	goto	u3515
  4383                           	line	10
  4384                           	
  4385  0734                     l3598:	
  4386  0734  3001               	movlw	01h
  4387  0735                     u3525:
  4388  0735  1003               	clrc
  4389  0736  0CA3               	rrf	(___lmul@multiplier+3),f
  4390  0737  0CA2               	rrf	(___lmul@multiplier+2),f
  4391  0738  0CA1               	rrf	(___lmul@multiplier+1),f
  4392  0739  0CA0               	rrf	(___lmul@multiplier),f
  4393  073A  3EFF               	addlw	-1
  4394  073B  1D03               	skipz
  4395  073C  2F35               	goto	u3525
  4396                           
  4397                           	line	11
  4398  073D  0823               	movf	(___lmul@multiplier+3),w
  4399  073E  0422               	iorwf	(___lmul@multiplier+2),w
  4400  073F  0421               	iorwf	(___lmul@multiplier+1),w
  4401  0740  0420               	iorwf	(___lmul@multiplier),w
  4402  0741  1D03               	skipz
  4403  0742  2F44               	goto	u3531
  4404  0743  2F45               	goto	u3530
  4405  0744                     u3531:
  4406  0744  2F0F               	goto	l3592
  4407  0745                     u3530:
  4408  0745  2F46               	goto	l3600
  4409                           	
  4410  0746                     l1395:	
  4411                           	line	12
  4412                           	
  4413  0746                     l3600:	
  4414  0746  082B               	movf	(___lmul@product+3),w
  4415  0747  00A3               	movwf	(?___lmul+3)
  4416  0748  082A               	movf	(___lmul@product+2),w
  4417  0749  00A2               	movwf	(?___lmul+2)
  4418  074A  0829               	movf	(___lmul@product+1),w
  4419  074B  00A1               	movwf	(?___lmul+1)
  4420  074C  0828               	movf	(___lmul@product),w
  4421  074D  00A0               	movwf	(?___lmul)
  4422                           
  4423  074E  2F4F               	goto	l1396
  4424                           	
  4425  074F                     l3602:	
  4426                           	line	13
  4427                           	
  4428  074F                     l1396:	
  4429  074F  0008               	return
  4430                           	opt stack 0
  4431                           GLOBAL	__end_of___lmul
  4432  0750                     	__end_of___lmul:
  4433 ;; =============== function ___lmul ends ============
  4434                           
  4435                           	signat	___lmul,8316
  4436                           	global	_doScale
  4437                           psect	text798,local,class=CODE,delta=2
  4438                           global __ptext798
  4439  02F3                     __ptext798:
  4440                           
  4441 ;; *************** function _doScale *****************
  4442 ;; Defined at:
  4443 ;;		line 270 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;		None
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;		None
  4448 ;; Return value:  Size  Location     Type
  4449 ;;		None               void
  4450 ;; Registers used:
  4451 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4457 ;;      Params:         0       0       0       0
  4458 ;;      Locals:         0       0       0       0
  4459 ;;      Temps:          0       4       0       0
  4460 ;;      Totals:         0       4       0       0
  4461 ;;Total ram usage:        4 bytes
  4462 ;; Hardware stack levels used:    2
  4463 ;; Hardware stack levels required when called:    1
  4464 ;; This function calls:
  4465 ;;		Nothing
  4466 ;; This function is called by:
  4467 ;;		_main
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           psect	text798
  4471                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  4472                           	line	270
  4473                           	global	__size_of_doScale
  4474  00A2                     	__size_of_doScale	equ	__end_of_doScale-_doScale
  4475                           	
  4476  02F3                     _doScale:	
  4477                           	opt	stack 5
  4478                           ; Regs used in _doScale: [wreg-fsr0h+status,2+status,0+pclath]
  4479                           	line	272
  4480                           	
  4481  02F3                     l3548:	
  4482                           ;blink.c: 272: number = number >> (17);
  4483  02F3  1283               	bcf	status, 5	;RP0=0, select bank0
  4484  02F4  1303               	bcf	status, 6	;RP1=0, select bank0
  4485  02F5  0849               	movf	(_number),w
  4486  02F6  00A0               	movwf	(??_doScale+0)+0
  4487  02F7  084A               	movf	(_number+1),w
  4488  02F8  00A1               	movwf	((??_doScale+0)+0+1)
  4489  02F9  084B               	movf	(_number+2),w
  4490  02FA  00A2               	movwf	((??_doScale+0)+0+2)
  4491  02FB  084C               	movf	(_number+3),w
  4492  02FC  00A3               	movwf	((??_doScale+0)+0+3)
  4493  02FD  3011               	movlw	011h
  4494  02FE                     u3405:
  4495  02FE  1003               	clrc
  4496  02FF  0CA3               	rrf	(??_doScale+0)+3,f
  4497  0300  0CA2               	rrf	(??_doScale+0)+2,f
  4498  0301  0CA1               	rrf	(??_doScale+0)+1,f
  4499  0302  0CA0               	rrf	(??_doScale+0)+0,f
  4500  0303                     u3400:
  4501  0303  3EFF               	addlw	-1
  4502  0304  1D03               	skipz
  4503  0305  2AFE               	goto	u3405
  4504  0306  0823               	movf	3+(??_doScale+0)+0,w
  4505  0307  00CC               	movwf	(_number+3)
  4506  0308  0822               	movf	2+(??_doScale+0)+0,w
  4507  0309  00CB               	movwf	(_number+2)
  4508  030A  0821               	movf	1+(??_doScale+0)+0,w
  4509  030B  00CA               	movwf	(_number+1)
  4510  030C  0820               	movf	0+(??_doScale+0)+0,w
  4511  030D  00C9               	movwf	(_number)
  4512                           
  4513                           	line	274
  4514                           	
  4515  030E                     l3550:	
  4516                           ;blink.c: 274: TMR0cnt = 1;
  4517  030E  3000               	movlw	0
  4518  030F  00C4               	movwf	(_TMR0cnt+3)
  4519  0310  3000               	movlw	0
  4520  0311  00C3               	movwf	(_TMR0cnt+2)
  4521  0312  3000               	movlw	0
  4522  0313  00C2               	movwf	(_TMR0cnt+1)
  4523  0314  3001               	movlw	01h
  4524  0315  00C1               	movwf	(_TMR0cnt)
  4525                           
  4526                           	line	275
  4527                           	
  4528  0316                     l3552:	
  4529                           ;blink.c: 275: for (preScaleSelect =0; preScaleSelect <= 7; preScaleSelect++)
  4530  0316  01E2               	clrf	(_preScaleSelect)
  4531                           	
  4532  0317                     l3554:	
  4533  0317  3008               	movlw	(08h)
  4534  0318  0262               	subwf	(_preScaleSelect),w
  4535  0319  1C03               	skipc
  4536  031A  2B1C               	goto	u3411
  4537  031B  2B1D               	goto	u3410
  4538  031C                     u3411:
  4539  031C  2B1F               	goto	l3558
  4540  031D                     u3410:
  4541  031D  2B57               	goto	l3566
  4542                           	
  4543  031E                     l3556:	
  4544  031E  2B57               	goto	l3566
  4545                           	line	276
  4546                           	
  4547  031F                     l443:	
  4548                           	line	277
  4549                           	
  4550  031F                     l3558:	
  4551                           ;blink.c: 276: {
  4552                           ;blink.c: 277: if (TMR0cnt > number)
  4553  031F  0844               	movf	(_TMR0cnt+3),w
  4554  0320  024C               	subwf	(_number+3),w
  4555  0321  1D03               	skipz
  4556  0322  2B2D               	goto	u3425
  4557  0323  0843               	movf	(_TMR0cnt+2),w
  4558  0324  024B               	subwf	(_number+2),w
  4559  0325  1D03               	skipz
  4560  0326  2B2D               	goto	u3425
  4561  0327  0842               	movf	(_TMR0cnt+1),w
  4562  0328  024A               	subwf	(_number+1),w
  4563  0329  1D03               	skipz
  4564  032A  2B2D               	goto	u3425
  4565  032B  0841               	movf	(_TMR0cnt),w
  4566  032C  0249               	subwf	(_number),w
  4567  032D                     u3425:
  4568  032D  1803               	skipnc
  4569  032E  2B30               	goto	u3421
  4570  032F  2B31               	goto	u3420
  4571  0330                     u3421:
  4572  0330  2B33               	goto	l3562
  4573  0331                     u3420:
  4574  0331  2B57               	goto	l3566
  4575                           	line	279
  4576                           	
  4577  0332                     l3560:	
  4578                           ;blink.c: 278: {
  4579                           ;blink.c: 279: break;
  4580  0332  2B57               	goto	l3566
  4581                           	line	280
  4582                           	
  4583  0333                     l445:	
  4584                           	line	281
  4585                           	
  4586  0333                     l3562:	
  4587                           ;blink.c: 280: }
  4588                           ;blink.c: 281: TMR0cnt = TMR0cnt << 1;
  4589  0333  0841               	movf	(_TMR0cnt),w
  4590  0334  00A0               	movwf	(??_doScale+0)+0
  4591  0335  0842               	movf	(_TMR0cnt+1),w
  4592  0336  00A1               	movwf	((??_doScale+0)+0+1)
  4593  0337  0843               	movf	(_TMR0cnt+2),w
  4594  0338  00A2               	movwf	((??_doScale+0)+0+2)
  4595  0339  0844               	movf	(_TMR0cnt+3),w
  4596  033A  00A3               	movwf	((??_doScale+0)+0+3)
  4597  033B  3001               	movlw	01h
  4598  033C                     u3435:
  4599  033C  1003               	clrc
  4600  033D  0DA0               	rlf	(??_doScale+0)+0,f
  4601  033E  0DA1               	rlf	(??_doScale+0)+1,f
  4602  033F  0DA2               	rlf	(??_doScale+0)+2,f
  4603  0340  0DA3               	rlf	(??_doScale+0)+3,f
  4604  0341                     u3430:
  4605  0341  3EFF               	addlw	-1
  4606  0342  1D03               	skipz
  4607  0343  2B3C               	goto	u3435
  4608  0344  0823               	movf	3+(??_doScale+0)+0,w
  4609  0345  00C4               	movwf	(_TMR0cnt+3)
  4610  0346  0822               	movf	2+(??_doScale+0)+0,w
  4611  0347  00C3               	movwf	(_TMR0cnt+2)
  4612  0348  0821               	movf	1+(??_doScale+0)+0,w
  4613  0349  00C2               	movwf	(_TMR0cnt+1)
  4614  034A  0820               	movf	0+(??_doScale+0)+0,w
  4615  034B  00C1               	movwf	(_TMR0cnt)
  4616                           
  4617                           	line	275
  4618  034C  3001               	movlw	(01h)
  4619  034D  00A0               	movwf	(??_doScale+0)+0
  4620  034E  0820               	movf	(??_doScale+0)+0,w
  4621  034F  07E2               	addwf	(_preScaleSelect),f
  4622                           	
  4623  0350                     l3564:	
  4624  0350  3008               	movlw	(08h)
  4625  0351  0262               	subwf	(_preScaleSelect),w
  4626  0352  1C03               	skipc
  4627  0353  2B55               	goto	u3441
  4628  0354  2B56               	goto	u3440
  4629  0355                     u3441:
  4630  0355  2B1F               	goto	l3558
  4631  0356                     u3440:
  4632  0356  2B57               	goto	l3566
  4633                           	
  4634  0357                     l444:	
  4635                           	line	283
  4636                           	
  4637  0357                     l3566:	
  4638                           ;blink.c: 282: }
  4639                           ;blink.c: 283: if (preScaleSelect>7)
  4640  0357  3008               	movlw	(08h)
  4641  0358  0262               	subwf	(_preScaleSelect),w
  4642  0359  1C03               	skipc
  4643  035A  2B5C               	goto	u3451
  4644  035B  2B5D               	goto	u3450
  4645  035C                     u3451:
  4646  035C  2B62               	goto	l3570
  4647  035D                     u3450:
  4648                           	line	285
  4649                           	
  4650  035D                     l3568:	
  4651                           ;blink.c: 284: {
  4652                           ;blink.c: 285: preScaleSelect=7;
  4653  035D  3007               	movlw	(07h)
  4654  035E  00A0               	movwf	(??_doScale+0)+0
  4655  035F  0820               	movf	(??_doScale+0)+0,w
  4656  0360  00E2               	movwf	(_preScaleSelect)
  4657  0361  2B62               	goto	l3570
  4658                           	line	286
  4659                           	
  4660  0362                     l446:	
  4661                           	line	288
  4662                           	
  4663  0362                     l3570:	
  4664                           ;blink.c: 286: }
  4665                           ;blink.c: 288: preScaleValue = (1 << prescaleInternalShift[preScaleSelect] << prescaleEx
                                 ternalShift[preScaleSelect]);
  4666  0362  0862               	movf	(_preScaleSelect),w
  4667  0363  3E18               	addlw	low((_prescaleExternalShift-__stringbase))
  4668  0364  0084               	movwf	fsr0
  4669  0365  118A  2243  118A   	fcall	stringdir
  4670  0368  00A0               	movwf	(??_doScale+0)+0
  4671  0369  0AA0               	incf	(??_doScale+0)+0,f
  4672  036A  0862               	movf	(_preScaleSelect),w
  4673  036B  3E71               	addlw	low((_prescaleInternalShift-__stringbase))
  4674  036C  0084               	movwf	fsr0
  4675  036D  118A  2243  118A   	fcall	stringdir
  4676  0370  00A1               	movwf	(??_doScale+1)+0
  4677  0371  0AA1               	incf	(??_doScale+1)+0,f
  4678  0372  3001               	movlw	low(01h)
  4679  0373  00A2               	movwf	(??_doScale+2)+0
  4680  0374  3000               	movlw	high(01h)
  4681  0375  00A3               	movwf	(??_doScale+2)+0+1
  4682  0376  2B7A               	goto	u3464
  4683  0377                     u3465:
  4684  0377  1003               	clrc
  4685  0378  0DA2               	rlf	(??_doScale+2)+0,f
  4686  0379  0DA3               	rlf	(??_doScale+2)+1,f
  4687  037A                     u3464:
  4688  037A  0BA1               	decfsz	(??_doScale+1)+0,f
  4689  037B  2B77               	goto	u3465
  4690  037C  2B80               	goto	u3474
  4691  037D                     u3475:
  4692  037D  1003               	clrc
  4693  037E  0DA2               	rlf	(??_doScale+2)+0,f
  4694  037F  0DA3               	rlf	(??_doScale+2)+1,f
  4695  0380                     u3474:
  4696  0380  0BA0               	decfsz	(??_doScale+0)+0,f
  4697  0381  2B7D               	goto	u3475
  4698  0382  0822               	movf	0+(??_doScale+2)+0,w
  4699  0383  00CD               	movwf	(_preScaleValue)
  4700  0384  0823               	movf	1+(??_doScale+2)+0,w
  4701  0385  00CE               	movwf	(_preScaleValue+1)
  4702  0386  3000               	movlw	0
  4703  0387  1BA3               	btfsc	1+(??_doScale+2)+0,7
  4704  0388  30FF               	movlw	255
  4705  0389  00CF               	movwf	(_preScaleValue+2)
  4706                           
  4707                           	line	289
  4708                           	
  4709  038A                     l3572:	
  4710                           ;blink.c: 289: calcScaleValue = preScaleSelect;
  4711  038A  0862               	movf	(_preScaleSelect),w
  4712  038B  00A0               	movwf	((??_doScale+0)+0)
  4713  038C  01A1               	clrf	((??_doScale+0)+0+1)
  4714  038D  01A2               	clrf	((??_doScale+0)+0+2)
  4715  038E  0820               	movf	0+(??_doScale+0)+0,w
  4716  038F  00F7               	movwf	(_calcScaleValue)
  4717  0390  0821               	movf	1+(??_doScale+0)+0,w
  4718  0391  00F8               	movwf	(_calcScaleValue+1)
  4719  0392  0822               	movf	2+(??_doScale+0)+0,w
  4720  0393  00F9               	movwf	(_calcScaleValue+2)
  4721                           	line	300
  4722                           	
  4723  0394                     l447:	
  4724  0394  0008               	return
  4725                           	opt stack 0
  4726                           GLOBAL	__end_of_doScale
  4727  0395                     	__end_of_doScale:
  4728 ;; =============== function _doScale ends ============
  4729                           
  4730                           	signat	_doScale,88
  4731                           	global	_initTimer1
  4732                           psect	text799,local,class=CODE,delta=2
  4733                           global __ptext799
  4734  0FA8                     __ptext799:
  4735                           
  4736 ;; *************** function _initTimer1 *****************
  4737 ;; Defined at:
  4738 ;;		line 157 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;		None
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;		None
  4743 ;; Return value:  Size  Location     Type
  4744 ;;		None               void
  4745 ;; Registers used:
  4746 ;;		wreg
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4752 ;;      Params:         0       0       0       0
  4753 ;;      Locals:         0       0       0       0
  4754 ;;      Temps:          0       0       0       0
  4755 ;;      Totals:         0       0       0       0
  4756 ;;Total ram usage:        0 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    1
  4759 ;; This function calls:
  4760 ;;		Nothing
  4761 ;; This function is called by:
  4762 ;;		_timersON
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           psect	text799
  4766                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  4767                           	line	157
  4768                           	global	__size_of_initTimer1
  4769  000C                     	__size_of_initTimer1	equ	__end_of_initTimer1-_initTimer1
  4770                           	
  4771  0FA8                     _initTimer1:	
  4772                           	opt	stack 5
  4773                           ; Regs used in _initTimer1: [wreg]
  4774                           	line	191
  4775                           	
  4776  0FA8                     l3090:	
  4777                           ;blink.c: 191: T1CON = 0x31;
  4778  0FA8  3031               	movlw	(031h)
  4779  0FA9  1283               	bcf	status, 5	;RP0=0, select bank0
  4780  0FAA  1303               	bcf	status, 6	;RP1=0, select bank0
  4781  0FAB  0090               	movwf	(16)	;volatile
  4782                           	line	192
  4783                           	
  4784  0FAC                     l3092:	
  4785                           ;blink.c: 192: TMR1IF = 0;
  4786  0FAC  100C               	bcf	(96/8),(96)&7
  4787                           	line	199
  4788                           ;blink.c: 199: TMR1H = 0x09;
  4789  0FAD  3009               	movlw	(09h)
  4790  0FAE  008F               	movwf	(15)	;volatile
  4791                           	line	200
  4792                           ;blink.c: 200: TMR1L = 0xAC;
  4793  0FAF  30AC               	movlw	(0ACh)
  4794  0FB0  008E               	movwf	(14)	;volatile
  4795                           	line	206
  4796                           ;blink.c: 206: INTCON = 0xC0;
  4797  0FB1  30C0               	movlw	(0C0h)
  4798  0FB2  008B               	movwf	(11)	;volatile
  4799                           	line	207
  4800                           	
  4801  0FB3                     l435:	
  4802  0FB3  0008               	return
  4803                           	opt stack 0
  4804                           GLOBAL	__end_of_initTimer1
  4805  0FB4                     	__end_of_initTimer1:
  4806 ;; =============== function _initTimer1 ends ============
  4807                           
  4808                           	signat	_initTimer1,88
  4809                           	global	_initTimer0
  4810                           psect	text800,local,class=CODE,delta=2
  4811                           global __ptext800
  4812  04A3                     __ptext800:
  4813                           
  4814 ;; *************** function _initTimer0 *****************
  4815 ;; Defined at:
  4816 ;;		line 116 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;		None
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;		None
  4821 ;; Return value:  Size  Location     Type
  4822 ;;		None               void
  4823 ;; Registers used:
  4824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4830 ;;      Params:         0       0       0       0
  4831 ;;      Locals:         0       0       0       0
  4832 ;;      Temps:          0       4       0       0
  4833 ;;      Totals:         0       4       0       0
  4834 ;;Total ram usage:        4 bytes
  4835 ;; Hardware stack levels used:    2
  4836 ;; Hardware stack levels required when called:    1
  4837 ;; This function calls:
  4838 ;;		Nothing
  4839 ;; This function is called by:
  4840 ;;		_timersON
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           psect	text800
  4844                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  4845                           	line	116
  4846                           	global	__size_of_initTimer0
  4847  0072                     	__size_of_initTimer0	equ	__end_of_initTimer0-_initTimer0
  4848                           	
  4849  04A3                     _initTimer0:	
  4850                           	opt	stack 4
  4851                           ; Regs used in _initTimer0: [wreg-fsr0h+status,2+status,0+pclath]
  4852                           	line	117
  4853                           	
  4854  04A3                     l3530:	
  4855                           ;blink.c: 117: INTCON = 0xA0;
  4856  04A3  30A0               	movlw	(0A0h)
  4857  04A4  008B               	movwf	(11)	;volatile
  4858                           	line	135
  4859                           ;blink.c: 135: OPTION_REG = 0b10100000;
  4860  04A5  30A0               	movlw	(0A0h)
  4861  04A6  1683               	bsf	status, 5	;RP0=1, select bank1
  4862  04A7  1303               	bcf	status, 6	;RP1=0, select bank1
  4863  04A8  0081               	movwf	(129)^080h	;volatile
  4864                           	line	136
  4865                           	
  4866  04A9                     l3532:	
  4867                           ;blink.c: 136: OPTION_REG |= prescaleInternalBits[preScaleSelect];
  4868  04A9  1283               	bcf	status, 5	;RP0=0, select bank0
  4869  04AA  1303               	bcf	status, 6	;RP1=0, select bank0
  4870  04AB  0862               	movf	(_preScaleSelect),w
  4871  04AC  3E23               	addlw	low((_prescaleInternalBits-__stringbase))
  4872  04AD  0084               	movwf	fsr0
  4873  04AE  118A  2243  118A   	fcall	stringdir
  4874  04B1  00A0               	movwf	(??_initTimer0+0)+0
  4875  04B2  0820               	movf	(??_initTimer0+0)+0,w
  4876  04B3  1683               	bsf	status, 5	;RP0=1, select bank1
  4877  04B4  1303               	bcf	status, 6	;RP1=0, select bank1
  4878  04B5  0481               	iorwf	(129)^080h,f	;volatile
  4879                           	line	138
  4880                           	
  4881  04B6                     l3534:	
  4882                           ;blink.c: 138: RB4 = !(!((prescaleExternalBits[preScaleSelect]) & (1 <<(0))));
  4883  04B6  1283               	bcf	status, 5	;RP0=0, select bank0
  4884  04B7  1303               	bcf	status, 6	;RP1=0, select bank0
  4885  04B8  0862               	movf	(_preScaleSelect),w
  4886  04B9  3E0D               	addlw	low((_prescaleExternalBits-__stringbase))
  4887  04BA  0084               	movwf	fsr0
  4888  04BB  118A  2243  118A   	fcall	stringdir
  4889  04BE  3901               	andlw	01h
  4890  04BF  1D03               	btfss	status,2
  4891  04C0  2CC2               	goto	u3341
  4892  04C1  2CC6               	goto	u3340
  4893                           	
  4894  04C2                     u3341:
  4895  04C2  1283               	bcf	status, 5	;RP0=0, select bank0
  4896  04C3  1303               	bcf	status, 6	;RP1=0, select bank0
  4897  04C4  1606               	bsf	(52/8),(52)&7
  4898  04C5  2CC9               	goto	u3354
  4899  04C6                     u3340:
  4900  04C6  1283               	bcf	status, 5	;RP0=0, select bank0
  4901  04C7  1303               	bcf	status, 6	;RP1=0, select bank0
  4902  04C8  1206               	bcf	(52/8),(52)&7
  4903  04C9                     u3354:
  4904                           	line	139
  4905                           	
  4906  04C9                     l3536:	
  4907                           ;blink.c: 139: RB5 = !(!((prescaleExternalBits[preScaleSelect]) & (1 <<(1))));
  4908  04C9  0862               	movf	(_preScaleSelect),w
  4909  04CA  3E0D               	addlw	low((_prescaleExternalBits-__stringbase))
  4910  04CB  0084               	movwf	fsr0
  4911  04CC  118A  2243  118A   	fcall	stringdir
  4912  04CF  3902               	andlw	02h
  4913  04D0  1D03               	btfss	status,2
  4914  04D1  2CD3               	goto	u3361
  4915  04D2  2CD7               	goto	u3360
  4916                           	
  4917  04D3                     u3361:
  4918  04D3  1283               	bcf	status, 5	;RP0=0, select bank0
  4919  04D4  1303               	bcf	status, 6	;RP1=0, select bank0
  4920  04D5  1686               	bsf	(53/8),(53)&7
  4921  04D6  2CDA               	goto	u3374
  4922  04D7                     u3360:
  4923  04D7  1283               	bcf	status, 5	;RP0=0, select bank0
  4924  04D8  1303               	bcf	status, 6	;RP1=0, select bank0
  4925  04D9  1286               	bcf	(53/8),(53)&7
  4926  04DA                     u3374:
  4927                           	line	142
  4928                           	
  4929  04DA                     l3538:	
  4930                           ;blink.c: 142: preScaleValue = (1 << prescaleInternalShift[preScaleSelect] << prescaleEx
                                 ternalShift[preScaleSelect]);
  4931  04DA  0862               	movf	(_preScaleSelect),w
  4932  04DB  3E18               	addlw	low((_prescaleExternalShift-__stringbase))
  4933  04DC  0084               	movwf	fsr0
  4934  04DD  118A  2243  118A   	fcall	stringdir
  4935  04E0  00A0               	movwf	(??_initTimer0+0)+0
  4936  04E1  0AA0               	incf	(??_initTimer0+0)+0,f
  4937  04E2  0862               	movf	(_preScaleSelect),w
  4938  04E3  3E71               	addlw	low((_prescaleInternalShift-__stringbase))
  4939  04E4  0084               	movwf	fsr0
  4940  04E5  118A  2243  118A   	fcall	stringdir
  4941  04E8  00A1               	movwf	(??_initTimer0+1)+0
  4942  04E9  0AA1               	incf	(??_initTimer0+1)+0,f
  4943  04EA  3001               	movlw	low(01h)
  4944  04EB  00A2               	movwf	(??_initTimer0+2)+0
  4945  04EC  3000               	movlw	high(01h)
  4946  04ED  00A3               	movwf	(??_initTimer0+2)+0+1
  4947  04EE  2CF2               	goto	u3384
  4948  04EF                     u3385:
  4949  04EF  1003               	clrc
  4950  04F0  0DA2               	rlf	(??_initTimer0+2)+0,f
  4951  04F1  0DA3               	rlf	(??_initTimer0+2)+1,f
  4952  04F2                     u3384:
  4953  04F2  0BA1               	decfsz	(??_initTimer0+1)+0,f
  4954  04F3  2CEF               	goto	u3385
  4955  04F4  2CF8               	goto	u3394
  4956  04F5                     u3395:
  4957  04F5  1003               	clrc
  4958  04F6  0DA2               	rlf	(??_initTimer0+2)+0,f
  4959  04F7  0DA3               	rlf	(??_initTimer0+2)+1,f
  4960  04F8                     u3394:
  4961  04F8  0BA0               	decfsz	(??_initTimer0+0)+0,f
  4962  04F9  2CF5               	goto	u3395
  4963  04FA  0822               	movf	0+(??_initTimer0+2)+0,w
  4964  04FB  00CD               	movwf	(_preScaleValue)
  4965  04FC  0823               	movf	1+(??_initTimer0+2)+0,w
  4966  04FD  00CE               	movwf	(_preScaleValue+1)
  4967  04FE  3000               	movlw	0
  4968  04FF  1BA3               	btfsc	1+(??_initTimer0+2)+0,7
  4969  0500  30FF               	movlw	255
  4970  0501  00CF               	movwf	(_preScaleValue+2)
  4971                           
  4972                           	line	144
  4973                           	
  4974  0502                     l3540:	
  4975                           ;blink.c: 144: TMR0 = 0;
  4976  0502  0181               	clrf	(1)	;volatile
  4977                           	line	145
  4978                           	
  4979  0503                     l3542:	
  4980                           ;blink.c: 145: TMR0cnt = 0;
  4981  0503  3000               	movlw	0
  4982  0504  00C4               	movwf	(_TMR0cnt+3)
  4983  0505  3000               	movlw	0
  4984  0506  00C3               	movwf	(_TMR0cnt+2)
  4985  0507  3000               	movlw	0
  4986  0508  00C2               	movwf	(_TMR0cnt+1)
  4987  0509  3000               	movlw	0
  4988  050A  00C1               	movwf	(_TMR0cnt)
  4989                           
  4990                           	line	146
  4991                           	
  4992  050B                     l3544:	
  4993                           ;blink.c: 146: number = 0;
  4994  050B  3000               	movlw	0
  4995  050C  00CC               	movwf	(_number+3)
  4996  050D  3000               	movlw	0
  4997  050E  00CB               	movwf	(_number+2)
  4998  050F  3000               	movlw	0
  4999  0510  00CA               	movwf	(_number+1)
  5000  0511  3000               	movlw	0
  5001  0512  00C9               	movwf	(_number)
  5002                           
  5003                           	line	151
  5004                           	
  5005  0513                     l3546:	
  5006                           ;blink.c: 151: GIE = 1;
  5007  0513  178B               	bsf	(95/8),(95)&7
  5008                           	line	152
  5009                           	
  5010  0514                     l432:	
  5011  0514  0008               	return
  5012                           	opt stack 0
  5013                           GLOBAL	__end_of_initTimer0
  5014  0515                     	__end_of_initTimer0:
  5015 ;; =============== function _initTimer0 ends ============
  5016                           
  5017                           	signat	_initTimer0,88
  5018                           	global	_init
  5019                           psect	text801,local,class=CODE,delta=2
  5020                           global __ptext801
  5021  0F8A                     __ptext801:
  5022                           
  5023 ;; *************** function _init *****************
  5024 ;; Defined at:
  5025 ;;		line 94 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;		None
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;		None
  5030 ;; Return value:  Size  Location     Type
  5031 ;;		None               void
  5032 ;; Registers used:
  5033 ;;		wreg, status,2
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5039 ;;      Params:         0       0       0       0
  5040 ;;      Locals:         0       0       0       0
  5041 ;;      Temps:          0       0       0       0
  5042 ;;      Totals:         0       0       0       0
  5043 ;;Total ram usage:        0 bytes
  5044 ;; Hardware stack levels used:    1
  5045 ;; Hardware stack levels required when called:    1
  5046 ;; This function calls:
  5047 ;;		Nothing
  5048 ;; This function is called by:
  5049 ;;		_main
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           psect	text801
  5053                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  5054                           	line	94
  5055                           	global	__size_of_init
  5056  000A                     	__size_of_init	equ	__end_of_init-_init
  5057                           	
  5058  0F8A                     _init:	
  5059                           	opt	stack 6
  5060                           ; Regs used in _init: [wreg+status,2]
  5061                           	line	101
  5062                           	
  5063  0F8A                     l3068:	
  5064                           ;blink.c: 101: CMCON = 0b00000111;
  5065  0F8A  3007               	movlw	(07h)
  5066  0F8B  1283               	bcf	status, 5	;RP0=0, select bank0
  5067  0F8C  1303               	bcf	status, 6	;RP1=0, select bank0
  5068  0F8D  009F               	movwf	(31)	;volatile
  5069                           	line	106
  5070                           ;blink.c: 106: TRISA = 0x10;
  5071  0F8E  3010               	movlw	(010h)
  5072  0F8F  1683               	bsf	status, 5	;RP0=1, select bank1
  5073  0F90  1303               	bcf	status, 6	;RP1=0, select bank1
  5074  0F91  0085               	movwf	(133)^080h	;volatile
  5075                           	line	107
  5076                           	
  5077  0F92                     l3070:	
  5078                           ;blink.c: 107: TRISB = 0x00;
  5079  0F92  0186               	clrf	(134)^080h	;volatile
  5080                           	line	112
  5081                           	
  5082  0F93                     l429:	
  5083  0F93  0008               	return
  5084                           	opt stack 0
  5085                           GLOBAL	__end_of_init
  5086  0F94                     	__end_of_init:
  5087 ;; =============== function _init ends ============
  5088                           
  5089                           	signat	_init,88
  5090                           	global	_ISR
  5091                           psect	text802,local,class=CODE,delta=2
  5092                           global __ptext802
  5093  078E                     __ptext802:
  5094                           
  5095 ;; *************** function _ISR *****************
  5096 ;; Defined at:
  5097 ;;		line 210 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;		None
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;		None
  5102 ;; Return value:  Size  Location     Type
  5103 ;;		None               void
  5104 ;; Registers used:
  5105 ;;		wreg
  5106 ;; Tracked objects:
  5107 ;;		On entry : 0/0
  5108 ;;		On exit  : 0/0
  5109 ;;		Unchanged: 0/0
  5110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5111 ;;      Params:         0       0       0       0
  5112 ;;      Locals:         0       0       0       0
  5113 ;;      Temps:          4       0       0       0
  5114 ;;      Totals:         4       0       0       0
  5115 ;;Total ram usage:        4 bytes
  5116 ;; Hardware stack levels used:    1
  5117 ;; This function calls:
  5118 ;;		Nothing
  5119 ;; This function is called by:
  5120 ;;		Interrupt level 1
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           psect	text802
  5124                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  5125                           	line	210
  5126                           	global	__size_of_ISR
  5127  002F                     	__size_of_ISR	equ	__end_of_ISR-_ISR
  5128                           	
  5129  078E                     _ISR:	
  5130                           	opt	stack 3
  5131                           ; Regs used in _ISR: [wreg]
  5132                           psect	intentry,class=CODE,delta=2
  5133                           global __pintentry
  5134  0004                     __pintentry:
  5135                           global interrupt_function
  5136  0004                     interrupt_function:
  5137                           	global saved_w
  5138  007E                     	saved_w	set	btemp+0
  5139  0004  00FE               	movwf	saved_w
  5140  0005  0E03               	swapf	status,w
  5141  0006  00F0               	movwf	(??_ISR+0)
  5142  0007  0804               	movf	fsr0,w
  5143  0008  00F1               	movwf	(??_ISR+1)
  5144  0009  080A               	movf	pclath,w
  5145  000A  00F2               	movwf	(??_ISR+2)
  5146  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  5147  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  5148  000D  087F               	movf	btemp+1,w
  5149  000E  00F3               	movwf	(??_ISR+3)
  5150  000F  118A  2F8E         	ljmp	_ISR
  5151                           psect	text802
  5152                           	line	215
  5153                           	
  5154  078E                     i1l3094:	
  5155                           ;blink.c: 215: if (TMR0IF)
  5156  078E  1D0B               	btfss	(90/8),(90)&7
  5157  078F  2F91               	goto	u268_21
  5158  0790  2F92               	goto	u268_20
  5159  0791                     u268_21:
  5160  0791  2FA2               	goto	i1l3100
  5161  0792                     u268_20:
  5162                           	line	217
  5163                           	
  5164  0792                     i1l3096:	
  5165                           ;blink.c: 216: {
  5166                           ;blink.c: 217: TMR0IF = 0;
  5167  0792  110B               	bcf	(90/8),(90)&7
  5168                           	line	229
  5169                           	
  5170  0793                     i1l3098:	
  5171                           ;blink.c: 229: TMR0cnt++;
  5172  0793  3001               	movlw	01h
  5173  0794  07C1               	addwf	(_TMR0cnt),f
  5174  0795  3000               	movlw	0
  5175  0796  1803               	skipnc
  5176  0797  3001               movlw 1
  5177  0798  07C2               	addwf	(_TMR0cnt+1),f
  5178  0799  3000               	movlw	0
  5179  079A  1803               	skipnc
  5180  079B  3001               movlw 1
  5181  079C  07C3               	addwf	(_TMR0cnt+2),f
  5182  079D  3000               	movlw	0
  5183  079E  1803               	skipnc
  5184  079F  3001               movlw 1
  5185  07A0  07C4               	addwf	(_TMR0cnt+3),f
  5186  07A1  2FA2               	goto	i1l3100
  5187                           	line	231
  5188                           	
  5189  07A2                     i1l438:	
  5190                           	line	237
  5191                           	
  5192  07A2                     i1l3100:	
  5193                           ;blink.c: 231: }
  5194                           ;blink.c: 237: if (TMR1IF)
  5195  07A2  1C0C               	btfss	(96/8),(96)&7
  5196  07A3  2FA5               	goto	u269_21
  5197  07A4  2FA6               	goto	u269_20
  5198  07A5                     u269_21:
  5199  07A5  2FB2               	goto	i1l440
  5200  07A6                     u269_20:
  5201                           	line	253
  5202                           	
  5203  07A6                     i1l3102:	
  5204                           ;blink.c: 238: {
  5205                           ;blink.c: 253: TMR1H = 0x0B;
  5206  07A6  300B               	movlw	(0Bh)
  5207  07A7  008F               	movwf	(15)	;volatile
  5208                           	line	254
  5209                           ;blink.c: 254: TMR1L = 0xDC;
  5210  07A8  30DC               	movlw	(0DCh)
  5211  07A9  008E               	movwf	(14)	;volatile
  5212                           	line	256
  5213                           	
  5214  07AA                     i1l3104:	
  5215                           ;blink.c: 256: TMR1IF = 0;
  5216  07AA  100C               	bcf	(96/8),(96)&7
  5217                           	line	258
  5218                           ;blink.c: 258: TMR1cnt++;
  5219  07AB  3001               	movlw	low(01h)
  5220  07AC  07D0               	addwf	(_TMR1cnt),f
  5221  07AD  1803               	skipnc
  5222  07AE  0AD1               	incf	(_TMR1cnt+1),f
  5223  07AF  3000               	movlw	high(01h)
  5224  07B0  07D1               	addwf	(_TMR1cnt+1),f
  5225  07B1  2FB2               	goto	i1l440
  5226                           	line	259
  5227                           	
  5228  07B2                     i1l439:	
  5229                           	line	260
  5230                           	
  5231  07B2                     i1l440:	
  5232  07B2  0873               	movf	(??_ISR+3),w
  5233  07B3  00FF               	movwf	btemp+1
  5234  07B4  0872               	movf	(??_ISR+2),w
  5235  07B5  008A               	movwf	pclath
  5236  07B6  0871               	movf	(??_ISR+1),w
  5237  07B7  0084               	movwf	fsr0
  5238  07B8  0E70               	swapf	(??_ISR+0)^0FFFFFF80h,w
  5239  07B9  0083               	movwf	status
  5240  07BA  0EFE               	swapf	saved_w,f
  5241  07BB  0E7E               	swapf	saved_w,w
  5242  07BC  0009               	retfie
  5243                           	opt stack 0
  5244                           GLOBAL	__end_of_ISR
  5245  07BD                     	__end_of_ISR:
  5246 ;; =============== function _ISR ends ============
  5247                           
  5248                           	signat	_ISR,88
  5249                           psect	text803,local,class=CODE,delta=2
  5250                           global __ptext803
  5251  0000                     __ptext803:
  5252                           	global	btemp
  5253  007E                     	btemp set 07Eh
  5254                           
  5255                           	DABS	1,126,2	;btemp
  5256                           	global	wtemp0
  5257  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Tue Sep 22 19:02:57 2015

                     pc 0002                      _RD 04E0                      _HZ 0249                      _WR 04E1  
                    fsr 0004           ?_lcd_putdigit 0070                     l432 0514                     l450 015C  
                   l435 0FB3                     l443 031F                     l451 0166                     l444 0357  
                   l452 017D                     l429 0F93                     l445 0333                     l461 05EE  
                   l453 01B9                     l446 0362                     l454 0191                     l470 04A0  
                   l447 0394                     l455 0238                     l471 04A1                     l472 04A1  
                   l464 045D                     l465 045F                     l458 0FDC                     l466 045E  
                   l467 046F                     l468 048E                     l469 049C                     l863 0703  
                   l872 07D4                     l881 0F9D                     l873 07C1                     l866 0FFF  
                   l874 07E1                     l890 011E                     l875 07E1                     l891 00B5  
                   l884 0FA7                     l869 0FC6                     l893 0077                     l894 00B4  
                   l895 00EB                     l896 00E1                     l897 0139                     l889 0035  
                   _GIE 005F                     _RA0 0028                     _RA1 0029                     _RA3 002B  
                   _RB4 0034                     _RB5 0035                     _RB7 0037                     _ISR 078E  
                   _sig 0054                     fsr0 0004                     indf 0000  lcd_putnumber@displayHZ 0033  
          ___awmod@sign 0076             lcd_goto@pos 0020                    ?_ISR 0070                    l1304 03A1  
                  l1305 03CC                    l1306 03D3                    l1307 0415                    l1308 042B  
                  l1309 042B                    l1530 0613                    l1531 0624                    l1532 0625  
                  l1533 0636                    l3070 0F92                    l1534 0644                    l1526 05FF  
                  l1471 06AB                    l1535 064F                    l1527 0609                    l1472 0673  
                  l1536 0656                    l1528 0645                    l1393 070F                    l1473 0665  
                  l1529 061F                    l3090 0FA8                    l1394 072B                    l1474 0678  
                  l3170 0679                    l3162 0657                    l1490 057B                    l1395 0746  
                  l1475 0679                    l1491 0539                    l3068 0F8A                    l3092 0FAC  
                  l1396 074F                    l3180 06B4                    l1476 069A                    l3172 068B  
                  l3164 0661                    l1492 052B                    l1644 0757                    l1477 06AA  
                  l1493 053E                    l1645 076E                    l1478 06B4                    l3174 069A  
                  l3166 0665                    l1494 053F                    l1646 0786                    l1495 056A  
                  l1647 078D                    l3600 0746                    l3176 06A3                    l3168 0673  
                  l1496 057A                    l1497 0584                    l3530 04A3                    l3602 074F  
                  l3178 06AB                    l3610 0539                    l3540 0502                    l3532 04A9  
                  l3620 056A                    l3612 053F                    l3604 0515                    l3700 0422  
                  l3542 0503                    l3534 04B6                    l3550 030E                    l3622 0573  
                  l3614 0548                    l3606 0527                    l3630 05F6                    l3710 0FD4  
                  l3702 0FC7                    l3544 050B                    l3536 04C9                    l3560 0332  
                  l3552 0316                    l3616 055A                    l3608 052B                    l3624 057B  
                  l3640 0613                    l3632 05FF                    l3712 0FD8                    l3704 0FCA  
                  l3720 0589                    l3800 00EB                    l3546 0513                    l3538 04DA  
                  l3570 0362                    l3562 0333                    l3554 0317                    l3626 0584  
                  l3618 0568                    l3650 0636                    l3642 061A                    l3634 0603  
                  l3714 0FDB                    l3706 0FCE                    l3722 058A                    l3730 0FE3  
                  l3810 0130                    l3802 010A                    l3572 038A                    l3564 0350  
                  l3556 031E                    l3548 02F3                    l3660 0656                    l3652 063D  
                  l3644 061F                    l3636 0609                    l3628 05EF                    l3708 0FD1  
                  l3724 058D                    l3716 0585                    l3740 0FFE                    l3732 0FF4  
                  l3804 0110                    l3820 06CC                    l3812 06B5                    l3900 042C  
                  l3566 0357                    l3558 031F                    l3590 0704                    l3646 0625  
                  l3638 060F                    l3654 0645                    l3670 0776                    l3662 0750  
                  l3726 05E5                    l3718 0588                    l3734 0FF5                    l3742 0F97  
                  l3750 07CB                    l3806 011E                    l3830 06E1                    l3822 06CD  
                  l3814 06B8                    l3910 044B                    l3902 0432                    l3568 035D  
                  l3592 070F                    l3656 0649                    l3648 062F                    l3672 0786  
                  l3664 0757                    l3680 03BF                    l3736 0FF6                    l3728 0FDE  
                  l3744 0F98                    l3752 07D4                    l3760 0FA1                    l3808 0129  
                  l3840 06F4                    l3832 06E4                    l3824 06D6                    l3816 06C5  
                  l3920 0480                    l3912 0459                    l3904 0435                    l3594 0713  
                  l3658 064F                    l3674 078D                    l3666 075D                    l3690 03ED  
                  l3682 03C3                    l3738 0FFD                    l3746 07BD                    l3754 0FB4  
                  l3762 0FA2                    l3770 0024                    l3842 06F8                    l3834 06E5  
                  l3826 06D9                    l3818 06CB                    l3850 0142                    l3922 0483  
                  l3914 045F                    l3906 043E                    l3596 072B                    l3668 076E  
                  l3692 040B                    l3684 03CC                    l3676 0398                    l3748 07C1  
                  l3756 0FB7                    l3780 0072                    l3772 0026                    l3764 0013  
                  l3844 06FC                    l3836 06F2                    l3828 06DA                    l3860 016A  
                  l3852 0146                    l3924 048E                    l3916 046F                    l3908 0442  
                  l3598 0734                    l3694 0411                    l3686 03D0                    l3678 03A1  
                  l3758 0FBB                    l3790 00A6                    l3782 0077                    l3774 0034  
                  l3766 001B                    l3846 06FF                    l3838 06F3                    l3870 0190  
                  l3862 0174                    l3854 0150                    l3926 0491                    l3918 0472  
                  l3696 0419                    l3688 03D3                    l3792 00AD                    l3784 007B  
                  l3776 0035                    l3768 0023                    l3880 01C0                    l3872 0191  
                  l3864 0175                    l3856 015C                    l3848 013A                    l3928 049C  
                  l3698 0420                    l3786 0081                    l3794 00B5                    l3778 006D  
                  l3890 01E9                    l3882 01C6                    l3874 01AE                    l3866 017C  
                  l3858 0166                    l3796 00D3                    l3788 009F                    l3892 01FA  
                  l3884 01CA                    l3876 01B2                    l3868 017D                    l3798 00DA  
                  l3894 0203                    l3886 01D7                    l3878 01B9                    l3896 0209  
                  l3888 01E0                    l3898 0231                    STR_1 02E8                    STR_2 02EB  
                  STR_3 02E5                    STR_4 02EE                    STR_5 02D9                    STR_6 02E2  
                  STR_7 02DF                    STR_8 02DC                    STR_9 02D6                    _T0IE 005D  
                  _FREQ 0276                    u4007 06D1                    u3400 0303                    u4017 06DC  
                  u3410 031D                    u3411 031C                    u4027 06E7                    u3340 04C6  
                  u3420 0331                    u3341 04C2                    u3421 0330                    u3405 02FE  
                  u3501 071C                    u4037 0FC1                    u3430 0341                    u3502 0723  
                  u3503 072A                    u4047 0FE0                    u3360 04D7                    u3440 0356  
                  u3600 0579                    u3361 04D3                    u3441 0355                    u3425 032D  
                  u3601 0578                    u4057 05E9                    u3354 04C9                    u3450 035D  
                  u3530 0745                    u3610 05F6                    u3451 035C                    u3435 033C  
                  u3531 0744                    u3515 072D                    u3611 05F5                    u3540 0527  
                  u3620 0603                    u3700 075D                    u3525 0735                    u3541 0526  
                  u3621 0602                    u3701 075C                    u3374 04DA                    u3630 060F  
                  u3631 060E                    u3711 0766                    u3384 04F2                    u3464 037A  
                  u2840 0661                    u3560 053D                    u3712 076D                    u3385 04EF  
                  u3465 0377                    u2841 0660                    u3561 053C                    u3394 04F8  
                  u3474 0380                    u3490 0713                    u3650 0623                    u3810 07E0  
                  u3395 04F5                    u3475 037D                    u3491 0712                    u3555 052D  
                  u3651 0622                    u3811 07DF                    u2860 0677                    u3580 055A  
                  u3660 062F                    u3740 0785                    u3820 0033                    u3900 0150  
                  u2861 0676                    u3581 0559                    u3661 062E                    u3645 0614  
                  u3741 0784                    u3725 076F                    u3805 0FEB                    u3821 0032  
                  u3901 014F                    u2870 068B                    u3750 03CB                    u3830 0072  
                  u3910 017B                    u2871 068A                    u2855 0667                    u3575 0541  
                  u3735 0777                    u3751 03CA                    u3831 0071                    u3911 017A  
                  u3680 0643                    u3760 0411                    u3840 0076                    u3920 018F  
                  u3585 0556                    u3681 0642                    u3665 062B                    u3761 0410  
                  u3825 002F                    u3921 018E                    u2890 06A9                    u3690 0649  
                  u3770 042A                    u3850 009F                    u3930 01B8                    u2891 06A8  
                  u2875 0687                    u3595 056B                    u3675 0637                    u3771 0429  
                  u3851 009E                    u3931 01B7                    u3780 05B4                    u3860 00A6  
                  u2885 069B                    u3861 00A5                    u3925 018B                    u3790 05D2  
                  u3870 00D3                    u3791 05D3                    u3871 00D2                    u3792 05D8  
                  u3880 00DA                    u3944 0221                    u3960 046E                    u3793 05D9  
                  u3785 05B0                    u3881 00D9                    u3945 021E                    u3961 046D  
                  u3890 011D                    u3954 0227                    u3970 0480                    u3891 011C  
                  u3955 0224                    u3971 047F                    u3965 046A                    u3895 0119  
                  u3987 0453                    u3997 06BE                    _TMR0 0001                    _WREN 04E2  
        ?_lcd_putnumber 002D                    _band 0052                    _main 042C                    _init 0F8A  
                  btemp 007E                    start 0011                   ??_ISR 0070          ??_lcd_putdigit 0077  
                 ?_main 0070    __size_of_doFrequency 00FF                   ?_init 0070                   _EEADR 009B  
                 STR_10 02C4                   STR_11 02F1                   STR_12 02CF                   STR_13 02CB  
                 STR_14 02CD                   STR_15 02CD                   STR_16 02D3         __end_of___awmod 0657  
                 _CARRY 0018                   _CMCON 001F         __end_of___lldiv 0585                   _T1CON 0010  
       __end_of___llmod 06B5                   i1l440 07B2                   i1l438 07A2                   i1l439 07B2  
                 _SCALE 0277                   _TMR1H 000F                   _TMR1L 000E                   _PORTB 0006  
                 _TRISA 0085                   _TRISB 0086         __end_of_doScale 0395     ___lmul@multiplicand 0024  
                 _bands 029A                   _divBy 0045                   _digit 0053                   _ultoa 0395  
                 pclath 000A                   status 0003                   wtemp0 007E          _preScaleSelect 0062  
          __end_of_main 04A3            __end_of_init 0F94                  ??_main 003E                  ??_init 0074  
      ___llmod@dividend 0024                  _EEDATA 009A                  _EECON1 009C                  _EECON2 009D  
       ??_lcd_putnumber 0031                  ?_ultoa 002D                  i1l3100 07A2                  i1l3102 07A6  
                i1l3104 07AA                  i1l3094 078E                  i1l3096 0792                  i1l3098 0793  
                _INTCON 000B                  u268_20 0792                  u268_21 0791                  u269_20 07A6  
                u269_21 07A5                  _TMR0IF 005A                  _TMR1IE 0460                  _TMR1IF 0060  
      __end_of_lcd_init 0704        __end_of_lcd_goto 0F9E        __end_of_lcd_puts 07E2                  ___lmul 0704  
                ___tmul 0750               ??___awmod 0074               ??___lldiv 0074               ??___llmod 0074  
                _buffer 0055               ??_doScale 0020         ___awmod@divisor 0020                  _qbytes 02AA  
                _number 0049         ___awmod@counter 0075                  clrloop 0F83           lcd_putdigit@c 0020  
                saved_w 007E        __end_of_timersON 0FDD                  ultoa@c 0037                  ultoa@v 0033  
  __end_of_lcd_putdigit 0FA8          __pcstackCOMMON 0070            __pidataBANK0 0F7E           __end_of_ultoa 042C  
    __size_of_lcd_clear 0013      __size_of_lcd_write 0023                 ??_ultoa 0076              __pbssBANK0 0041  
            __pmaintext 042C                 ?___lmul 0020                 ?___tmul 0020              __pintentry 0004  
        ___lmul@product 0028      __size_of_timersOFF 006A                 _TMR0cnt 0041                 _TMR1cnt 0050  
             ?_lcd_init 0070               ?_lcd_goto 0070               ?_lcd_puts 0020       __end_of_lcd_clear 0FC7  
             ?_timersON 0070              _initTimer0 04A3              _initTimer1 0FA8         __size_of___lmul 004C  
               ___awmod 05EF       __end_of_lcd_write 1000         __size_of___tmul 003E           ??_doFrequency 0039  
               ___lldiv 0515                 ___llmod 0657                 _doScale 02F3    _prescaleInternalBits 026B  
          __size_of_ISR 002F        ___awmod@dividend 0022                 _noinput 0278                 _version 0289  
 __size_of_lcd_putdigit 000A              ??_lcd_init 0022              ??_lcd_goto 0077              ??_lcd_puts 0077  
  end_of_initialization 07FC    _prescaleExternalBits 0255         ___lldiv@divisor 0020       __end_of_timersOFF 05EF  
       ___lldiv@counter 002C              ??_timersON 0074            _lcd_putdigit 0F9E     __end_of_doFrequency 0239  
     doFrequency@pBands 003D   __end_of_lcd_putnumber 013A              lcd_write@c 0076             ?_initTimer0 0070  
           ?_initTimer1 0070          __end_of___lmul 0750          __end_of___tmul 078E           _preScaleValue 004D  
   start_initialization 07E2             __end_of_ISR 07BD          _calcScaleValue 0077         ___llmod@divisor 0020  
       ___llmod@counter 0075                ??___lmul 0074                ??___tmul 0074             __pdataBANK0 005F  
           _doFrequency 013A          ___tmul@product 0074             __pbssCOMMON 0077           __pcstackBANK0 0020  
   lcd_putnumber@number 002D     __size_of_initTimer0 0072     __size_of_initTimer1 000C       __size_of_lcd_init 004F  
     __size_of_lcd_goto 000A       __size_of_lcd_puts 0025                ?___awmod 0020               __ptext800 04A3  
             __ptext801 0F8A               __ptext802 078E               __ptext803 0000               __ptext790 0585  
             __ptext782 013A               __ptext791 0FC7               __ptext783 06B5               __ptext792 0395  
             __ptext784 0013               __ptext793 0750               __ptext785 0F9E               __ptext794 05EF  
             __ptext786 0FB4               __ptext795 0515               __ptext787 07BD               __ptext796 0657  
             __ptext788 0F94               __ptext797 0704               __ptext789 0FDD               __ptext798 02F3  
             __ptext799 0FA8                ?___lldiv 0020                ?___llmod 0020               _findScale 0061  
              ?_doScale 0070               _lcd_clear 0FB4       __size_of_timersON 0016               __pstrings 0239  
             _lcd_write 0FDD          __size_of_ultoa 0097       interrupt_function 0004               _timersOFF 0585  
            ?_lcd_clear 0070             __stringbase 0248              ?_lcd_write 0070               lcd_puts@s 0020  
   ___tmul@multiplicand 0023       ___lmul@multiplier 0020            ??_initTimer0 0020            ??_initTimer1 0074  
            ?_timersOFF 0070        __size_of___awmod 0068        __size_of___lldiv 0070        __size_of___llmod 005E  
      __size_of_doScale 00A2   _prescaleInternalShift 02B9                _lcd_init 06B5                _lcd_goto 0F94  
              _lcd_puts 07BD      __end_of_initTimer0 0515      __end_of_initTimer1 0FB4           __size_of_main 0077  
         __size_of_init 000A                clear_ram 0F82                _timersON 0FC7            ?_doFrequency 0070  
           ??_lcd_clear 0020             ??_lcd_write 0074  __size_of_lcd_putnumber 0127       lcd_putnumber@F612 005F  
 _prescaleExternalShift 0260               ultoa@base 0031       lcd_putnumber@loop 0035                intlevel1 0000  
      ___lldiv@dividend 0024               stringcode 0243             ??_timersOFF 002C       ___tmul@multiplier 0020  
              ultoa@buf 0038                ultoa@val 002D              _OPTION_REG 0081        ___lldiv@quotient 0028  
              stringdir 0243                stringtab 0239           _lcd_putnumber 0013  
