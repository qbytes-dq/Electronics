

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Wed Sep 23 22:17:36 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F628A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 11 "C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 11 "C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\Main.c"
    45  2007  FF22               	dw 0xFFEE & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFB & 0xFF7F & 0xFFFF & 0xFFFF ;#
    46                           	FNCALL	_main,_InitUART
    47                           	FNCALL	_main,_SendStringSerially
    48                           	FNCALL	_SendStringSerially,_SendByteSerially
    49                           	FNROOT	_main
    50                           	FNCALL	_ISR,_ReceiveByteSerially
    51                           	FNCALL	_ISR,i1_SendByteSerially
    52                           	FNCALL	intlevel1,_ISR
    53                           	global	intlevel1
    54                           	FNROOT	intlevel1
    55                           	global	_chr
    56                           	global	_RCREG
    57                           psect	text286,local,class=CODE,delta=2
    58                           global __ptext286
    59  0000                     __ptext286:
    60  001A                     _RCREG	set	26
    61                           	global	_TXREG
    62  0019                     _TXREG	set	25
    63                           	global	_CARRY
    64  0018                     _CARRY	set	24
    65                           	global	_CREN
    66  00C4                     _CREN	set	196
    67                           	global	_GIE
    68  005F                     _GIE	set	95
    69                           	global	_OERR
    70  00C1                     _OERR	set	193
    71                           	global	_PEIE
    72  005E                     _PEIE	set	94
    73                           	global	_RA0
    74  0028                     _RA0	set	40
    75                           	global	_RB4
    76  0034                     _RB4	set	52
    77                           	global	_RCIF
    78  0065                     _RCIF	set	101
    79                           	global	_RX9
    80  00C6                     _RX9	set	198
    81                           	global	_SPEN
    82  00C7                     _SPEN	set	199
    83                           	global	_SREN
    84  00C5                     _SREN	set	197
    85                           	global	_TXIF
    86  0064                     _TXIF	set	100
    87                           	global	_EEADR
    88  009B                     _EEADR	set	155
    89                           	global	_EECON1
    90  009C                     _EECON1	set	156
    91                           	global	_EECON2
    92  009D                     _EECON2	set	157
    93                           	global	_EEDATA
    94  009A                     _EEDATA	set	154
    95                           	global	_SPBRG
    96  0099                     _SPBRG	set	153
    97                           	global	_BRGH
    98  04C2                     _BRGH	set	1218
    99                           	global	_RCIE
   100  0465                     _RCIE	set	1125
   101                           	global	_RD
   102  04E0                     _RD	set	1248
   103                           	global	_SYNC
   104  04C4                     _SYNC	set	1220
   105                           	global	_TRISA0
   106  0428                     _TRISA0	set	1064
   107                           	global	_TRISB1
   108  0431                     _TRISB1	set	1073
   109                           	global	_TRISB2
   110  0432                     _TRISB2	set	1074
   111                           	global	_TRISB4
   112  0434                     _TRISB4	set	1076
   113                           	global	_TX9
   114  04C6                     _TX9	set	1222
   115                           	global	_TXEN
   116  04C5                     _TXEN	set	1221
   117                           	global	_TXIE
   118  0464                     _TXIE	set	1124
   119                           	global	_WR
   120  04E1                     _WR	set	1249
   121                           	global	_WREN
   122  04E2                     _WREN	set	1250
   123                           psect	strings,class=STRING,delta=2
   124                           global __pstrings
   125  0077                     __pstrings:
   126                           ;	global	stringdir,stringtab,__stringbase
   127  0077                     stringtab:
   128                           ;	String table - string pointers are 1 byte each
   129  0077                     stringcode:stringdir:
      + 0077                     stringdir:	
   130  0077  3000               movlw high(stringdir)
   131  0078  008A               movwf pclath
   132  0079  0804               movf fsr,w
   133  007A  0A84               incf fsr
   134  007B  0782               	addwf pc
   135  007C                     __stringbase:
   136  007C  3400               	retlw	0
   137                           psect	strings
   138                           	
   139  007D                     STR_1:	
   140  007D  3448               	retlw	72	;'H'
   141  007E  3465               	retlw	101	;'e'
   142  007F  346C               	retlw	108	;'l'
   143  0080  346C               	retlw	108	;'l'
   144  0081  346F               	retlw	111	;'o'
   145  0082  3420               	retlw	32	;' '
   146  0083  3457               	retlw	87	;'W'
   147  0084  346F               	retlw	111	;'o'
   148  0085  3472               	retlw	114	;'r'
   149  0086  346C               	retlw	108	;'l'
   150  0087  3464               	retlw	100	;'d'
   151  0088  3421               	retlw	33	;'!'
   152  0089  3400               	retlw	0
   153                           psect	strings
   154                           	file	"serial-RX-TX.as"
   155                           	line	#
   156                           psect cinit,class=CODE,delta=2
   157                           global start_initialization
   158  00B9                     start_initialization:
   159                           
   160                           psect	bssCOMMON,class=COMMON,space=1
   161                           global __pbssCOMMON
   162  0077                     __pbssCOMMON:
   163  0077                     _chr:
   164  0077                            ds      1
   165                           
   166                           ; Clear objects allocated to COMMON
   167                           psect cinit,class=CODE,delta=2
   168  00B9  01F7               	clrf	((__pbssCOMMON)+0)&07Fh
   169                           psect cinit,class=CODE,delta=2
   170                           global end_of_initialization
   171                           
   172                           ;End of C runtime variable initialization code
   173                           
   174  00BA                     end_of_initialization:
   175  00BA  0183               clrf status
   176  00BB  2863               ljmp _main	;jump to C main() function
   177                           psect	cstackCOMMON,class=COMMON,space=1
   178                           global __pcstackCOMMON
   179  0070                     __pcstackCOMMON:
   180                           	global	??_ReceiveByteSerially
   181  0070                     ??_ReceiveByteSerially:	; 0 bytes @ 0x0
   182                           	global	?_SendByteSerially
   183  0070                     ?_SendByteSerially:	; 0 bytes @ 0x0
   184                           	global	?_InitUART
   185  0070                     ?_InitUART:	; 0 bytes @ 0x0
   186                           	global	?_SendStringSerially
   187  0070                     ?_SendStringSerially:	; 0 bytes @ 0x0
   188                           	global	?_ISR
   189  0070                     ?_ISR:	; 0 bytes @ 0x0
   190                           	global	?_main
   191  0070                     ?_main:	; 0 bytes @ 0x0
   192                           	global	?i1_SendByteSerially
   193  0070                     ?i1_SendByteSerially:	; 0 bytes @ 0x0
   194                           	global	??i1_SendByteSerially
   195  0070                     ??i1_SendByteSerially:	; 0 bytes @ 0x0
   196                           	global	?_ReceiveByteSerially
   197  0070                     ?_ReceiveByteSerially:	; 1 bytes @ 0x0
   198                           	global	i1SendByteSerially@Byte
   199  0070                     i1SendByteSerially@Byte:	; 1 bytes @ 0x0
   200  0070                     	ds	1
   201                           	global	??_ISR
   202  0071                     ??_ISR:	; 0 bytes @ 0x1
   203  0071                     	ds	5
   204                           	global	??_SendByteSerially
   205  0076                     ??_SendByteSerially:	; 0 bytes @ 0x6
   206                           	global	??_InitUART
   207  0076                     ??_InitUART:	; 0 bytes @ 0x6
   208                           	global	SendByteSerially@Byte
   209  0076                     SendByteSerially@Byte:	; 1 bytes @ 0x6
   210  0076                     	ds	1
   211                           	global	??_main
   212  0077                     ??_main:	; 0 bytes @ 0x7
   213                           psect	cstackBANK0,class=BANK0,space=1
   214                           global __pcstackBANK0
   215  0020                     __pcstackBANK0:
   216                           	global	??_SendStringSerially
   217  0020                     ??_SendStringSerially:	; 0 bytes @ 0x0
   218  0020                     	ds	1
   219                           	global	SendStringSerially@st
   220  0021                     SendStringSerially@st:	; 1 bytes @ 0x1
   221  0021                     	ds	1
   222 ;;Data sizes: Strings 13, constant 0, data 0, bss 1, persistent 0 stack 0
   223 ;;Auto spaces:   Size  Autos    Used
   224 ;; COMMON          14      7       8
   225 ;; BANK0           80      2       2
   226 ;; BANK1           80      0       0
   227 ;; BANK2           48      0       0
   228                           
   229 ;;
   230 ;; Pointer list with targets:
   231                           
   232 ;; SendStringSerially@st	PTR const unsigned char  size(1) Largest target is 13
   233 ;;		 -> STR_1(CODE[13]), 
   234 ;;
   235                           
   236                           
   237 ;;
   238 ;; Critical Paths under _main in COMMON
   239 ;;
   240 ;;   _SendStringSerially->_SendByteSerially
   241 ;;
   242 ;; Critical Paths under _ISR in COMMON
   243 ;;
   244 ;;   _ISR->i1_SendByteSerially
   245 ;;
   246 ;; Critical Paths under _main in BANK0
   247 ;;
   248 ;;   _main->_SendStringSerially
   249 ;;
   250 ;; Critical Paths under _ISR in BANK0
   251 ;;
   252 ;;   None.
   253 ;;
   254 ;; Critical Paths under _main in BANK1
   255 ;;
   256 ;;   None.
   257 ;;
   258 ;; Critical Paths under _ISR in BANK1
   259 ;;
   260 ;;   None.
   261 ;;
   262 ;; Critical Paths under _main in BANK2
   263 ;;
   264 ;;   None.
   265 ;;
   266 ;; Critical Paths under _ISR in BANK2
   267 ;;
   268 ;;   None.
   269                           
   270 ;;
   271 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   272 ;;
   273                           
   274 ;;
   275 ;;Call Graph Tables:
   276 ;;
   277 ;; ---------------------------------------------------------------------------------
   278 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   279 ;; ---------------------------------------------------------------------------------
   280 ;; (0) _main                                                 0     0      0      87
   281 ;;                           _InitUART
   282 ;;                 _SendStringSerially
   283 ;; ---------------------------------------------------------------------------------
   284 ;; (1) _SendStringSerially                                   2     2      0      87
   285 ;;                                              0 BANK0      2     2      0
   286 ;;                   _SendByteSerially
   287 ;; ---------------------------------------------------------------------------------
   288 ;; (1) _InitUART                                             0     0      0       0
   289 ;; ---------------------------------------------------------------------------------
   290 ;; (2) _SendByteSerially                                     1     1      0      22
   291 ;;                                              6 COMMON     1     1      0
   292 ;; ---------------------------------------------------------------------------------
   293 ;; Estimated maximum stack depth 2
   294 ;; ---------------------------------------------------------------------------------
   295 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   296 ;; ---------------------------------------------------------------------------------
   297 ;; (3) _ISR                                                  5     5      0      73
   298 ;;                                              1 COMMON     5     5      0
   299 ;;                _ReceiveByteSerially
   300 ;;                 i1_SendByteSerially
   301 ;; ---------------------------------------------------------------------------------
   302 ;; (4) i1_SendByteSerially                                   1     1      0      73
   303 ;;                                              0 COMMON     1     1      0
   304 ;; ---------------------------------------------------------------------------------
   305 ;; (4) _ReceiveByteSerially                                  0     0      0       0
   306 ;; ---------------------------------------------------------------------------------
   307 ;; Estimated maximum stack depth 4
   308 ;; ---------------------------------------------------------------------------------
   309                           
   310 ;; Call Graph Graphs:
   311                           
   312 ;; _main (ROOT)
   313 ;;   _InitUART
   314 ;;   _SendStringSerially
   315 ;;     _SendByteSerially
   316 ;;
   317 ;; _ISR (ROOT)
   318 ;;   _ReceiveByteSerially
   319 ;;   i1_SendByteSerially
   320 ;;
   321                           
   322 ;; Address spaces:
   323                           
   324 ;;Name               Size   Autos  Total    Cost      Usage
   325 ;;BITCOMMON            E      0       0       0        0.0%
   326 ;;EEDATA              80      0       0       0        0.0%
   327 ;;NULL                 0      0       0       0        0.0%
   328 ;;CODE                 0      0       0       0        0.0%
   329 ;;COMMON               E      7       8       1       57.1%
   330 ;;BITSFR0              0      0       0       1        0.0%
   331 ;;SFR0                 0      0       0       1        0.0%
   332 ;;BITSFR1              0      0       0       2        0.0%
   333 ;;SFR1                 0      0       0       2        0.0%
   334 ;;STACK                0      0       6       2        0.0%
   335 ;;BANK0               50      2       2       3        2.5%
   336 ;;BITSFR3              0      0       0       4        0.0%
   337 ;;SFR3                 0      0       0       4        0.0%
   338 ;;ABS                  0      0       A       4        0.0%
   339 ;;BITBANK0            50      0       0       5        0.0%
   340 ;;BITSFR2              0      0       0       5        0.0%
   341 ;;SFR2                 0      0       0       5        0.0%
   342 ;;BITBANK1            50      0       0       6        0.0%
   343 ;;BANK1               50      0       0       7        0.0%
   344 ;;BITBANK2            30      0       0       8        0.0%
   345 ;;BANK2               30      0       0       9        0.0%
   346 ;;DATA                 0      0      10      10        0.0%
   347                           
   348                           	global	_main
   349                           psect	maintext,global,class=CODE,delta=2
   350                           global __pmaintext
   351  0063                     __pmaintext:
   352                           
   353 ;; *************** function _main *****************
   354 ;; Defined at:
   355 ;;		line 16 in file "C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\Main.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;		None
   358 ;; Auto vars:     Size  Location     Type
   359 ;;		None
   360 ;; Return value:  Size  Location     Type
   361 ;;		None               void
   362 ;; Registers used:
   363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   364 ;; Tracked objects:
   365 ;;		On entry : 17F/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   369 ;;      Params:         0       0       0       0
   370 ;;      Locals:         0       0       0       0
   371 ;;      Temps:          0       0       0       0
   372 ;;      Totals:         0       0       0       0
   373 ;;Total ram usage:        0 bytes
   374 ;; Hardware stack levels required when called:    4
   375 ;; This function calls:
   376 ;;		_InitUART
   377 ;;		_SendStringSerially
   378 ;; This function is called by:
   379 ;;		Startup code after reset
   380 ;; This function uses a non-reentrant model
   381 ;;
   382                           psect	maintext
   383                           	file	"C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\Main.c"
   384                           	line	16
   385                           	global	__size_of_main
   386  0014                     	__size_of_main	equ	__end_of_main-_main
   387                           	
   388  0063                     _main:	
   389                           	opt	stack 4
   390                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   391                           	line	17
   392                           	
   393  0063                     l2934:	
   394                           ;Main.c: 17: InitUART();
   395  0063  2030               	fcall	_InitUART
   396                           	line	19
   397                           	
   398  0064                     l2936:	
   399                           ;Main.c: 19: SendStringSerially("Hello World!");
   400  0064  3001               	movlw	((STR_1-__stringbase))&0ffh
   401  0065  204A               	fcall	_SendStringSerially
   402                           	line	21
   403                           	
   404  0066                     l2938:	
   405                           ;Main.c: 21: GIE = 1;
   406  0066  178B               	bsf	(95/8),(95)&7
   407                           	line	22
   408                           	
   409  0067                     l2940:	
   410                           ;Main.c: 22: PEIE = 1;
   411  0067  170B               	bsf	(94/8),(94)&7
   412                           	line	24
   413                           	
   414  0068                     l2942:	
   415                           ;Main.c: 24: TRISA0=0;
   416  0068  1683               	bsf	status, 5	;RP0=1, select bank1
   417  0069  1303               	bcf	status, 6	;RP1=0, select bank1
   418  006A  1005               	bcf	(1064/8)^080h,(1064)&7
   419                           	line	25
   420                           	
   421  006B                     l2944:	
   422                           ;Main.c: 25: RA0=1;
   423  006B  1283               	bcf	status, 5	;RP0=0, select bank0
   424  006C  1303               	bcf	status, 6	;RP1=0, select bank0
   425  006D  1405               	bsf	(40/8),(40)&7
   426                           	line	26
   427                           	
   428  006E                     l2946:	
   429                           ;Main.c: 26: TRISB4=0;
   430  006E  1683               	bsf	status, 5	;RP0=1, select bank1
   431  006F  1303               	bcf	status, 6	;RP1=0, select bank1
   432  0070  1206               	bcf	(1076/8)^080h,(1076)&7
   433                           	line	27
   434                           	
   435  0071                     l2948:	
   436                           ;Main.c: 27: RB4=1;
   437  0071  1283               	bcf	status, 5	;RP0=0, select bank0
   438  0072  1303               	bcf	status, 6	;RP1=0, select bank0
   439  0073  1606               	bsf	(52/8),(52)&7
   440  0074  2875               	goto	l767
   441                           	line	28
   442                           ;Main.c: 28: while(1)
   443                           	
   444  0075                     l766:	
   445                           	line	34
   446                           ;Main.c: 29: {
   447                           	
   448  0075                     l767:	
   449                           	line	28
   450  0075  2875               	goto	l767
   451                           	
   452  0076                     l768:	
   453                           	line	35
   454                           	
   455  0076                     l769:	
   456                           	global	start
   457  0076  2810               	ljmp	start
   458                           	opt stack 0
   459                           GLOBAL	__end_of_main
   460  0077                     	__end_of_main:
   461 ;; =============== function _main ends ============
   462                           
   463                           	signat	_main,88
   464                           	global	_SendStringSerially
   465                           psect	text287,local,class=CODE,delta=2
   466                           global __ptext287
   467  004A                     __ptext287:
   468                           
   469 ;; *************** function _SendStringSerially *****************
   470 ;; Defined at:
   471 ;;		line 60 in file "C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\UART.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;  st              1    wreg     PTR const unsigned char 
   474 ;;		 -> STR_1(13), 
   475 ;; Auto vars:     Size  Location     Type
   476 ;;  st              1    1[BANK0 ] PTR const unsigned char 
   477 ;;		 -> STR_1(13), 
   478 ;; Return value:  Size  Location     Type
   479 ;;		None               void
   480 ;; Registers used:
   481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   487 ;;      Params:         0       0       0       0
   488 ;;      Locals:         0       1       0       0
   489 ;;      Temps:          0       1       0       0
   490 ;;      Totals:         0       2       0       0
   491 ;;Total ram usage:        2 bytes
   492 ;; Hardware stack levels used:    1
   493 ;; Hardware stack levels required when called:    3
   494 ;; This function calls:
   495 ;;		_SendByteSerially
   496 ;; This function is called by:
   497 ;;		_main
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           psect	text287
   501                           	file	"C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\UART.c"
   502                           	line	60
   503                           	global	__size_of_SendStringSerially
   504  0019                     	__size_of_SendStringSerially	equ	__end_of_SendStringSerially-_SendStringSerially
   505                           	
   506  004A                     _SendStringSerially:	
   507                           	opt	stack 4
   508                           ; Regs used in _SendStringSerially: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   509                           ;SendStringSerially@st stored from wreg
   510  004A  1283               	bcf	status, 5	;RP0=0, select bank0
   511  004B  1303               	bcf	status, 6	;RP1=0, select bank0
   512  004C  00A1               	movwf	(SendStringSerially@st)
   513                           	line	61
   514                           	
   515  004D                     l2926:	
   516                           ;UART.c: 61: while(*st)
   517  004D  2859               	goto	l2932
   518                           	
   519  004E                     l1163:	
   520                           	line	62
   521                           	
   522  004E                     l2928:	
   523                           ;UART.c: 62: SendByteSerially(*st++);
   524  004E  0821               	movf	(SendStringSerially@st),w
   525  004F  0084               	movwf	fsr0
   526  0050  2077               	fcall	stringdir
   527  0051  209D               	fcall	_SendByteSerially
   528                           	
   529  0052                     l2930:	
   530  0052  3001               	movlw	(01h)
   531  0053  1283               	bcf	status, 5	;RP0=0, select bank0
   532  0054  1303               	bcf	status, 6	;RP1=0, select bank0
   533  0055  00A0               	movwf	(??_SendStringSerially+0)+0
   534  0056  0820               	movf	(??_SendStringSerially+0)+0,w
   535  0057  07A1               	addwf	(SendStringSerially@st),f
   536  0058  2859               	goto	l2932
   537                           	
   538  0059                     l1162:	
   539                           	line	61
   540                           	
   541  0059                     l2932:	
   542  0059  0821               	movf	(SendStringSerially@st),w
   543  005A  0084               	movwf	fsr0
   544  005B  2077               	fcall	stringdir
   545  005C  3800               	iorlw	0
   546  005D  1D03               	skipz
   547  005E  2860               	goto	u2351
   548  005F  2861               	goto	u2350
   549  0060                     u2351:
   550  0060  284E               	goto	l2928
   551  0061                     u2350:
   552  0061  2862               	goto	l1165
   553                           	
   554  0062                     l1164:	
   555                           	line	63
   556                           	
   557  0062                     l1165:	
   558  0062  0008               	return
   559                           	opt stack 0
   560                           GLOBAL	__end_of_SendStringSerially
   561  0063                     	__end_of_SendStringSerially:
   562 ;; =============== function _SendStringSerially ends ============
   563                           
   564                           	signat	_SendStringSerially,4216
   565                           	global	_InitUART
   566                           psect	text288,local,class=CODE,delta=2
   567                           global __ptext288
   568  0030                     __ptext288:
   569                           
   570 ;; *************** function _InitUART *****************
   571 ;; Defined at:
   572 ;;		line 8 in file "C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\UART.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;		None
   575 ;; Auto vars:     Size  Location     Type
   576 ;;		None
   577 ;; Return value:  Size  Location     Type
   578 ;;		None               void
   579 ;; Registers used:
   580 ;;		wreg
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   586 ;;      Params:         0       0       0       0
   587 ;;      Locals:         0       0       0       0
   588 ;;      Temps:          0       0       0       0
   589 ;;      Totals:         0       0       0       0
   590 ;;Total ram usage:        0 bytes
   591 ;; Hardware stack levels used:    1
   592 ;; Hardware stack levels required when called:    2
   593 ;; This function calls:
   594 ;;		Nothing
   595 ;; This function is called by:
   596 ;;		_main
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           psect	text288
   600                           	file	"C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\UART.c"
   601                           	line	8
   602                           	global	__size_of_InitUART
   603  001A                     	__size_of_InitUART	equ	__end_of_InitUART-_InitUART
   604                           	
   605  0030                     _InitUART:	
   606                           	opt	stack 5
   607                           ; Regs used in _InitUART: [wreg]
   608                           	line	9
   609                           	
   610  0030                     l1960:	
   611                           ;UART.c: 9: TRISB2 = 0;
   612  0030  1683               	bsf	status, 5	;RP0=1, select bank1
   613  0031  1303               	bcf	status, 6	;RP1=0, select bank1
   614  0032  1106               	bcf	(1074/8)^080h,(1074)&7
   615                           	line	10
   616                           ;UART.c: 10: TRISB1 = 1;
   617  0033  1486               	bsf	(1073/8)^080h,(1073)&7
   618                           	line	16
   619                           	
   620  0034                     l1962:	
   621                           ;UART.c: 16: SPBRG = ((20000000/16)/9600) - 1;
   622  0034  3081               	movlw	(081h)
   623  0035  0099               	movwf	(153)^080h	;volatile
   624                           	line	17
   625                           	
   626  0036                     l1964:	
   627                           ;UART.c: 17: BRGH = 1;
   628  0036  1518               	bsf	(1218/8)^080h,(1218)&7
   629                           	line	22
   630                           	
   631  0037                     l1966:	
   632                           ;UART.c: 22: SYNC = 0;
   633  0037  1218               	bcf	(1220/8)^080h,(1220)&7
   634                           	line	23
   635                           	
   636  0038                     l1968:	
   637                           ;UART.c: 23: SPEN = 1;
   638  0038  1283               	bcf	status, 5	;RP0=0, select bank0
   639  0039  1303               	bcf	status, 6	;RP1=0, select bank0
   640  003A  1798               	bsf	(199/8),(199)&7
   641                           	line	24
   642                           	
   643  003B                     l1970:	
   644                           ;UART.c: 24: CREN = 1;
   645  003B  1618               	bsf	(196/8),(196)&7
   646                           	line	25
   647                           	
   648  003C                     l1972:	
   649                           ;UART.c: 25: SREN = 0;
   650  003C  1298               	bcf	(197/8),(197)&7
   651                           	line	26
   652                           	
   653  003D                     l1974:	
   654                           ;UART.c: 26: TXIE = 0;
   655  003D  1683               	bsf	status, 5	;RP0=1, select bank1
   656  003E  1303               	bcf	status, 6	;RP1=0, select bank1
   657  003F  120C               	bcf	(1124/8)^080h,(1124)&7
   658                           	line	27
   659                           	
   660  0040                     l1976:	
   661                           ;UART.c: 27: RCIE = 1;
   662  0040  168C               	bsf	(1125/8)^080h,(1125)&7
   663                           	line	28
   664                           	
   665  0041                     l1978:	
   666                           ;UART.c: 28: TX9 = 0;
   667  0041  1318               	bcf	(1222/8)^080h,(1222)&7
   668                           	line	29
   669                           	
   670  0042                     l1980:	
   671                           ;UART.c: 29: RX9 = 0;
   672  0042  1283               	bcf	status, 5	;RP0=0, select bank0
   673  0043  1303               	bcf	status, 6	;RP1=0, select bank0
   674  0044  1318               	bcf	(198/8),(198)&7
   675                           	line	30
   676                           	
   677  0045                     l1982:	
   678                           ;UART.c: 30: TXEN = 0;
   679  0045  1683               	bsf	status, 5	;RP0=1, select bank1
   680  0046  1303               	bcf	status, 6	;RP1=0, select bank1
   681  0047  1298               	bcf	(1221/8)^080h,(1221)&7
   682                           	line	31
   683                           	
   684  0048                     l1984:	
   685                           ;UART.c: 31: TXEN = 1;
   686  0048  1698               	bsf	(1221/8)^080h,(1221)&7
   687                           	line	32
   688                           	
   689  0049                     l1146:	
   690  0049  0008               	return
   691                           	opt stack 0
   692                           GLOBAL	__end_of_InitUART
   693  004A                     	__end_of_InitUART:
   694 ;; =============== function _InitUART ends ============
   695                           
   696                           	signat	_InitUART,88
   697                           	global	_SendByteSerially
   698                           psect	text289,local,class=CODE,delta=2
   699                           global __ptext289
   700  009D                     __ptext289:
   701                           
   702 ;; *************** function _SendByteSerially *****************
   703 ;; Defined at:
   704 ;;		line 36 in file "C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\UART.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;  Byte            1    wreg     unsigned char 
   707 ;; Auto vars:     Size  Location     Type
   708 ;;  Byte            1    6[COMMON] unsigned char 
   709 ;; Return value:  Size  Location     Type
   710 ;;		None               void
   711 ;; Registers used:
   712 ;;		wreg
   713 ;; Tracked objects:
   714 ;;		On entry : 0/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   718 ;;      Params:         0       0       0       0
   719 ;;      Locals:         1       0       0       0
   720 ;;      Temps:          0       0       0       0
   721 ;;      Totals:         1       0       0       0
   722 ;;Total ram usage:        1 bytes
   723 ;; Hardware stack levels used:    1
   724 ;; Hardware stack levels required when called:    2
   725 ;; This function calls:
   726 ;;		Nothing
   727 ;; This function is called by:
   728 ;;		_SendStringSerially
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           psect	text289
   732                           	file	"C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\UART.c"
   733                           	line	36
   734                           	global	__size_of_SendByteSerially
   735  000E                     	__size_of_SendByteSerially	equ	__end_of_SendByteSerially-_SendByteSerially
   736                           	
   737  009D                     _SendByteSerially:	
   738                           	opt	stack 4
   739                           ; Regs used in _SendByteSerially: [wreg]
   740                           ;SendByteSerially@Byte stored from wreg
   741  009D  00F6               	movwf	(SendByteSerially@Byte)
   742                           	line	37
   743                           	
   744  009E                     l2890:	
   745                           ;UART.c: 37: RA0=1;
   746  009E  1283               	bcf	status, 5	;RP0=0, select bank0
   747  009F  1303               	bcf	status, 6	;RP1=0, select bank0
   748  00A0  1405               	bsf	(40/8),(40)&7
   749                           	line	38
   750                           ;UART.c: 38: while(!TXIF);
   751  00A1  28A2               	goto	l1149
   752                           	
   753  00A2                     l1150:	
   754                           	
   755  00A2                     l1149:	
   756  00A2  1E0C               	btfss	(100/8),(100)&7
   757  00A3  28A5               	goto	u2321
   758  00A4  28A6               	goto	u2320
   759  00A5                     u2321:
   760  00A5  28A2               	goto	l1149
   761  00A6                     u2320:
   762  00A6  28A7               	goto	l2892
   763                           	
   764  00A7                     l1151:	
   765                           	line	39
   766                           	
   767  00A7                     l2892:	
   768                           ;UART.c: 39: TXREG = Byte;
   769  00A7  0876               	movf	(SendByteSerially@Byte),w
   770  00A8  0099               	movwf	(25)	;volatile
   771                           	line	40
   772                           	
   773  00A9                     l2894:	
   774                           ;UART.c: 40: RA0=0;
   775  00A9  1005               	bcf	(40/8),(40)&7
   776                           	line	41
   777                           	
   778  00AA                     l1152:	
   779  00AA  0008               	return
   780                           	opt stack 0
   781                           GLOBAL	__end_of_SendByteSerially
   782  00AB                     	__end_of_SendByteSerially:
   783 ;; =============== function _SendByteSerially ends ============
   784                           
   785                           	signat	_SendByteSerially,4216
   786                           	global	_ISR
   787                           psect	text290,local,class=CODE,delta=2
   788                           global __ptext290
   789  0011                     __ptext290:
   790                           
   791 ;; *************** function _ISR *****************
   792 ;; Defined at:
   793 ;;		line 7 in file "C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\ISR.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;		None
   796 ;; Auto vars:     Size  Location     Type
   797 ;;		None
   798 ;; Return value:  Size  Location     Type
   799 ;;		None               void
   800 ;; Registers used:
   801 ;;		wreg, status,2, status,0, pclath, cstack
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   807 ;;      Params:         0       0       0       0
   808 ;;      Locals:         0       0       0       0
   809 ;;      Temps:          5       0       0       0
   810 ;;      Totals:         5       0       0       0
   811 ;;Total ram usage:        5 bytes
   812 ;; Hardware stack levels used:    1
   813 ;; Hardware stack levels required when called:    1
   814 ;; This function calls:
   815 ;;		_ReceiveByteSerially
   816 ;;		i1_SendByteSerially
   817 ;; This function is called by:
   818 ;;		Interrupt level 1
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           psect	text290
   822                           	file	"C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\ISR.c"
   823                           	line	7
   824                           	global	__size_of_ISR
   825  001F                     	__size_of_ISR	equ	__end_of_ISR-_ISR
   826                           	
   827  0011                     _ISR:	
   828                           	opt	stack 4
   829                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   830                           psect	intentry,class=CODE,delta=2
   831                           global __pintentry
   832  0004                     __pintentry:
   833                           global interrupt_function
   834  0004                     interrupt_function:
   835                           	global saved_w
   836  007E                     	saved_w	set	btemp+0
   837  0004  00FE               	movwf	saved_w
   838  0005  0E03               	swapf	status,w
   839  0006  00F2               	movwf	(??_ISR+1)
   840  0007  0804               	movf	fsr0,w
   841  0008  00F3               	movwf	(??_ISR+2)
   842  0009  080A               	movf	pclath,w
   843  000A  00F4               	movwf	(??_ISR+3)
   844  000B  1283               	bcf	status, 5	;RP0=0, select bank0
   845  000C  1303               	bcf	status, 6	;RP1=0, select bank0
   846  000D  087F               	movf	btemp+1,w
   847  000E  00F5               	movwf	(??_ISR+4)
   848  000F  2811               	ljmp	_ISR
   849                           psect	text290
   850                           	line	8
   851                           	
   852  0011                     i1l2880:	
   853                           ;ISR.c: 8: if(RCIF)
   854  0011  1E8C               	btfss	(101/8),(101)&7
   855  0012  2814               	goto	u230_21
   856  0013  2815               	goto	u230_20
   857  0014                     u230_21:
   858  0014  2823               	goto	i1l385
   859  0015                     u230_20:
   860                           	line	10
   861                           	
   862  0015                     i1l2882:	
   863                           ;ISR.c: 9: {
   864                           ;ISR.c: 10: if(OERR)
   865  0015  1C98               	btfss	(193/8),(193)&7
   866  0016  2818               	goto	u231_21
   867  0017  2819               	goto	u231_20
   868  0018                     u231_21:
   869  0018  281C               	goto	i1l2886
   870  0019                     u231_20:
   871                           	line	12
   872                           	
   873  0019                     i1l2884:	
   874                           ;ISR.c: 11: {
   875                           ;ISR.c: 12: CREN = 0;
   876  0019  1218               	bcf	(196/8),(196)&7
   877                           	line	13
   878                           ;ISR.c: 13: CREN = 1;
   879  001A  1618               	bsf	(196/8),(196)&7
   880  001B  281C               	goto	i1l2886
   881                           	line	14
   882                           	
   883  001C                     i1l384:	
   884                           	line	16
   885                           	
   886  001C                     i1l2886:	
   887                           ;ISR.c: 14: }
   888                           ;ISR.c: 16: chr = ReceiveByteSerially();
   889  001C  208A               	fcall	_ReceiveByteSerially
   890  001D  00F1               	movwf	(??_ISR+0)+0
   891  001E  0871               	movf	(??_ISR+0)+0,w
   892  001F  00F7               	movwf	(_chr)
   893                           	line	18
   894                           	
   895  0020                     i1l2888:	
   896                           ;ISR.c: 18: SendByteSerially(chr);
   897  0020  0877               	movf	(_chr),w
   898  0021  20AB               	fcall	i1_SendByteSerially
   899  0022  2823               	goto	i1l385
   900                           	line	20
   901                           	
   902  0023                     i1l383:	
   903                           	line	21
   904                           	
   905  0023                     i1l385:	
   906  0023  0875               	movf	(??_ISR+4),w
   907  0024  1283               	bcf	status, 5	;RP0=0, select bank0
   908  0025  1303               	bcf	status, 6	;RP1=0, select bank0
   909  0026  00FF               	movwf	btemp+1
   910  0027  0874               	movf	(??_ISR+3),w
   911  0028  008A               	movwf	pclath
   912  0029  0873               	movf	(??_ISR+2),w
   913  002A  0084               	movwf	fsr0
   914  002B  0E72               	swapf	(??_ISR+1)^0FFFFFF80h,w
   915  002C  0083               	movwf	status
   916  002D  0EFE               	swapf	saved_w,f
   917  002E  0E7E               	swapf	saved_w,w
   918  002F  0009               	retfie
   919                           	opt stack 0
   920                           GLOBAL	__end_of_ISR
   921  0030                     	__end_of_ISR:
   922 ;; =============== function _ISR ends ============
   923                           
   924                           	signat	_ISR,88
   925                           	global	i1_SendByteSerially
   926                           psect	text291,local,class=CODE,delta=2
   927                           global __ptext291
   928  00AB                     __ptext291:
   929                           
   930 ;; *************** function i1_SendByteSerially *****************
   931 ;; Defined at:
   932 ;;		line 36 in file "C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\UART.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;  SendByteSeri    1    wreg     unsigned char 
   935 ;; Auto vars:     Size  Location     Type
   936 ;;  SendByteSeri    1    0[COMMON] unsigned char 
   937 ;; Return value:  Size  Location     Type
   938 ;;		None               void
   939 ;; Registers used:
   940 ;;		wreg
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   946 ;;      Params:         0       0       0       0
   947 ;;      Locals:         1       0       0       0
   948 ;;      Temps:          0       0       0       0
   949 ;;      Totals:         1       0       0       0
   950 ;;Total ram usage:        1 bytes
   951 ;; Hardware stack levels used:    1
   952 ;; This function calls:
   953 ;;		Nothing
   954 ;; This function is called by:
   955 ;;		_ISR
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           psect	text291
   959                           	file	"C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\UART.c"
   960                           	line	36
   961                           	global	__size_ofi1_SendByteSerially
   962  000E                     	__size_ofi1_SendByteSerially	equ	__end_ofi1_SendByteSerially-i1_SendByteSerially
   963                           	
   964  00AB                     i1_SendByteSerially:	
   965                           	opt	stack 4
   966                           ; Regs used in i1_SendByteSerially: [wreg]
   967                           ;i1SendByteSerially@Byte stored from wreg
   968  00AB  00F0               	movwf	(i1SendByteSerially@Byte)
   969                           	line	37
   970                           	
   971  00AC                     i1l2896:	
   972                           ;UART.c: 37: RA0=1;
   973  00AC  1283               	bcf	status, 5	;RP0=0, select bank0
   974  00AD  1303               	bcf	status, 6	;RP1=0, select bank0
   975  00AE  1405               	bsf	(40/8),(40)&7
   976                           	line	38
   977                           ;UART.c: 38: while(!TXIF);
   978  00AF  28B0               	goto	i1l1149
   979                           	
   980  00B0                     i1l1150:	
   981                           	
   982  00B0                     i1l1149:	
   983  00B0  1E0C               	btfss	(100/8),(100)&7
   984  00B1  28B3               	goto	u233_21
   985  00B2  28B4               	goto	u233_20
   986  00B3                     u233_21:
   987  00B3  28B0               	goto	i1l1149
   988  00B4                     u233_20:
   989  00B4  28B5               	goto	i1l2898
   990                           	
   991  00B5                     i1l1151:	
   992                           	line	39
   993                           	
   994  00B5                     i1l2898:	
   995                           ;UART.c: 39: TXREG = Byte;
   996  00B5  0870               	movf	(i1SendByteSerially@Byte),w
   997  00B6  0099               	movwf	(25)	;volatile
   998                           	line	40
   999                           	
  1000  00B7                     i1l2900:	
  1001                           ;UART.c: 40: RA0=0;
  1002  00B7  1005               	bcf	(40/8),(40)&7
  1003                           	line	41
  1004                           	
  1005  00B8                     i1l1152:	
  1006  00B8  0008               	return
  1007                           	opt stack 0
  1008                           GLOBAL	__end_ofi1_SendByteSerially
  1009  00B9                     	__end_ofi1_SendByteSerially:
  1010 ;; =============== function i1_SendByteSerially ends ============
  1011                           
  1012                           	signat	i1_SendByteSerially,88
  1013                           	global	_ReceiveByteSerially
  1014                           psect	text292,local,class=CODE,delta=2
  1015                           global __ptext292
  1016  008A                     __ptext292:
  1017                           
  1018 ;; *************** function _ReceiveByteSerially *****************
  1019 ;; Defined at:
  1020 ;;		line 44 in file "C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\UART.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;		None
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;		None
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      unsigned char 
  1027 ;; Registers used:
  1028 ;;		wreg
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1034 ;;      Params:         0       0       0       0
  1035 ;;      Locals:         0       0       0       0
  1036 ;;      Temps:          0       0       0       0
  1037 ;;      Totals:         0       0       0       0
  1038 ;;Total ram usage:        0 bytes
  1039 ;; Hardware stack levels used:    1
  1040 ;; This function calls:
  1041 ;;		Nothing
  1042 ;; This function is called by:
  1043 ;;		_ISR
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           psect	text292
  1047                           	file	"C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\UART.c"
  1048                           	line	44
  1049                           	global	__size_of_ReceiveByteSerially
  1050  0013                     	__size_of_ReceiveByteSerially	equ	__end_of_ReceiveByteSerially-_ReceiveByteSerially
  1051                           	
  1052  008A                     _ReceiveByteSerially:	
  1053                           	opt	stack 4
  1054                           ; Regs used in _ReceiveByteSerially: [wreg]
  1055                           	line	46
  1056                           	
  1057  008A                     i1l1946:	
  1058                           ;UART.c: 46: RB4=1;
  1059  008A  1283               	bcf	status, 5	;RP0=0, select bank0
  1060  008B  1303               	bcf	status, 6	;RP1=0, select bank0
  1061  008C  1606               	bsf	(52/8),(52)&7
  1062                           	line	47
  1063                           ;UART.c: 47: if(OERR)
  1064  008D  1C98               	btfss	(193/8),(193)&7
  1065  008E  2890               	goto	u3_21
  1066  008F  2891               	goto	u3_20
  1067  0090                     u3_21:
  1068  0090  2895               	goto	i1l1156
  1069  0091                     u3_20:
  1070                           	line	49
  1071                           	
  1072  0091                     i1l1948:	
  1073                           ;UART.c: 48: {
  1074                           ;UART.c: 49: CREN = 0;
  1075  0091  1218               	bcf	(196/8),(196)&7
  1076                           	line	50
  1077                           ;UART.c: 50: CREN = 1;
  1078  0092  1618               	bsf	(196/8),(196)&7
  1079  0093  2895               	goto	i1l1156
  1080                           	line	51
  1081                           	
  1082  0094                     i1l1155:	
  1083                           	line	53
  1084                           ;UART.c: 51: }
  1085                           ;UART.c: 53: while(!RCIF);
  1086  0094  2895               	goto	i1l1156
  1087                           	
  1088  0095                     i1l1157:	
  1089                           	
  1090  0095                     i1l1156:	
  1091  0095  1E8C               	btfss	(101/8),(101)&7
  1092  0096  2898               	goto	u4_21
  1093  0097  2899               	goto	u4_20
  1094  0098                     u4_21:
  1095  0098  2895               	goto	i1l1156
  1096  0099                     u4_20:
  1097                           	
  1098  0099                     i1l1158:	
  1099                           	line	55
  1100                           ;UART.c: 55: RB4=0;
  1101  0099  1206               	bcf	(52/8),(52)&7
  1102                           	line	56
  1103                           	
  1104  009A                     i1l1950:	
  1105                           ;UART.c: 56: return RCREG;
  1106  009A  081A               	movf	(26),w	;volatile
  1107  009B  289C               	goto	i1l1159
  1108                           	
  1109  009C                     i1l1952:	
  1110                           	line	57
  1111                           	
  1112  009C                     i1l1159:	
  1113  009C  0008               	return
  1114                           	opt stack 0
  1115                           GLOBAL	__end_of_ReceiveByteSerially
  1116  009D                     	__end_of_ReceiveByteSerially:
  1117 ;; =============== function _ReceiveByteSerially ends ============
  1118                           
  1119                           	signat	_ReceiveByteSerially,89
  1120                           psect	text293,local,class=CODE,delta=2
  1121                           global __ptext293
  1122  0000                     __ptext293:
  1123                           	global	btemp
  1124  007E                     	btemp set 07Eh
  1125                           
  1126                           	DABS	1,126,2	;btemp
  1127                           	global	wtemp0
  1128  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Wed Sep 23 22:17:36 2015

                           pc 0002                            _RD 04E0                            _WR 04E1  
                          fsr 0004                           l766 0075                           l767 0075  
                         l768 0076                           l769 0076                           _GIE 005F  
                         _RA0 0028                           _RB4 0034                           _ISR 0011  
                         _RX9 00C6                           _TX9 04C6                           _chr 0077  
                         fsr0 0004                          ?_ISR 0070                          l1150 00A2  
                        l1151 00A7                          l1152 00AA                          l1146 0049  
                        l1162 0059                          l1163 004E                          l1164 0062  
                        l1149 00A2                          l1165 0062                          l1960 0030  
                        l1970 003B                          l1962 0034                          l2930 0052  
                        l1980 0042                          l1972 003C                          l1964 0036  
                        l2932 0059                          l2940 0067                          l1982 0045  
                        l1974 003D                          l1966 0037                          l2926 004D  
                        l2942 0068                          l2934 0063                          l1984 0048  
                        l1976 0040                          l1968 0038                          l2928 004E  
                        l2944 006B                          l2936 0064                          l2890 009E  
                        l1978 0041                          l2946 006E                          l2938 0066  
                        l2892 00A7                          l2948 0071                          l2894 00A9  
                        STR_1 007D                          _BRGH 04C2                          _CREN 00C4  
                        u2320 00A6                          u2321 00A5                          u2350 0061  
                        u2351 0060                          _PEIE 005E                          _RCIE 0465  
                        _RCIF 0065                          _OERR 00C1                          _SPEN 00C7  
                        _SREN 00C5                          _TXIE 0464                          _WREN 04E2  
                        _TXEN 04C5                          _TXIF 0064                          _SYNC 04C4  
                        u3_20 0091                          u3_21 0090                          u4_20 0099  
                        u4_21 0098                          _main 0063                          btemp 007E  
                        start 0010                         ??_ISR 0071                         ?_main 0070  
                       _EEADR 009B                         _CARRY 0018                         i1l383 0023  
                       i1l384 001C                         i1l385 0023                         _RCREG 001A  
                       _SPBRG 0099                         _TXREG 0019            _SendStringSerially 004A  
                       pclath 000A           ?_SendStringSerially 0070                         status 0003  
                       wtemp0 007E                  __end_of_main 0077              __end_of_InitUART 004A  
        ??_SendStringSerially 0020                        ??_main 0077                        _EEDATA 009A  
          i1_SendByteSerially 00AB                        _EECON1 009C                        _EECON2 009D  
                      i1l1150 00B0                        i1l1151 00B5                        i1l1152 00B8  
                      i1l1155 0094                        i1l1156 0095                        i1l1157 0095  
                      i1l1149 00B0                        i1l1158 0099                        i1l1159 009C  
                      i1l2900 00B7                        i1l1950 009A                        i1l1952 009C  
                      i1l1946 008A                        i1l1948 0091                        i1l2880 0011  
                      i1l2882 0015                        i1l2884 0019                        i1l2886 001C  
                      i1l2896 00AC                        i1l2888 0020                        i1l2898 00B5  
                      u230_20 0015                        u230_21 0014                        u231_20 0019  
                      u231_21 0018                        u233_20 00B4                        u233_21 00B3  
                      _TRISA0 0428                        _TRISB1 0431                        _TRISB2 0432  
                      _TRISB4 0434           ?i1_SendByteSerially 0070        i1SendByteSerially@Byte 0070  
        ??i1_SendByteSerially 0070      __end_of_SendByteSerially 00AB                        saved_w 007E  
 __end_of_ReceiveByteSerially 009D                __pcstackCOMMON 0070          SendByteSerially@Byte 0076  
                   ?_InitUART 0070                    __pmaintext 0063                    __pintentry 0004  
                  ??_InitUART 0076          SendStringSerially@st 0021                  __size_of_ISR 001F  
        end_of_initialization 00BA   __size_of_SendStringSerially 0019             ?_SendByteSerially 0070  
          ??_SendByteSerially 0076   __size_ofi1_SendByteSerially 000E           start_initialization 00B9  
                 __end_of_ISR 0030             __size_of_InitUART 001A  __size_of_ReceiveByteSerially 0013  
                 __pbssCOMMON 0077                 __pcstackBANK0 0020                     __ptext290 0011  
                   __ptext291 00AB                     __ptext292 008A                     __ptext293 0000  
                   __ptext286 0000                     __ptext287 004A                     __ptext288 0030  
                   __ptext289 009D                     __pstrings 0077             interrupt_function 0004  
                 __stringbase 007C                      _InitUART 0030     __size_of_SendByteSerially 000E  
  __end_of_SendStringSerially 0063           _ReceiveByteSerially 008A                 __size_of_main 0014  
  __end_ofi1_SendByteSerially 00B9          ?_ReceiveByteSerially 0070                      intlevel1 0000  
                   stringcode 0077         ??_ReceiveByteSerially 0070                      stringdir 0077  
                    stringtab 0077              _SendByteSerially 009D  
