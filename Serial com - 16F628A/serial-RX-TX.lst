

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Wed Sep 23 20:24:57 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F628A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 11 "C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 11 "C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\Main.c"
    45  2007  FF22               	dw 0xFFEE & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFB & 0xFF7F & 0xFFFF & 0xFFFF ;#
    46                           	FNCALL	_main,_InitUART
    47                           	FNCALL	_main,_SendStringSerially
    48                           	FNCALL	_main,_ReceiveByteSerially
    49                           	FNCALL	_main,_SendByteSerially
    50                           	FNCALL	_SendStringSerially,_SendByteSerially
    51                           	FNROOT	_main
    52                           	FNCALL	_ISR,i1_SendByteSerially
    53                           	FNCALL	intlevel1,_ISR
    54                           	global	intlevel1
    55                           	FNROOT	intlevel1
    56                           	global	_chr
    57                           	global	_RCREG
    58                           psect	text286,local,class=CODE,delta=2
    59                           global __ptext286
    60  0000                     __ptext286:
    61  001A                     _RCREG	set	26
    62                           	global	_TXREG
    63  0019                     _TXREG	set	25
    64                           	global	_CARRY
    65  0018                     _CARRY	set	24
    66                           	global	_CREN
    67  00C4                     _CREN	set	196
    68                           	global	_GIE
    69  005F                     _GIE	set	95
    70                           	global	_OERR
    71  00C1                     _OERR	set	193
    72                           	global	_PEIE
    73  005E                     _PEIE	set	94
    74                           	global	_RA0
    75  0028                     _RA0	set	40
    76                           	global	_RB7
    77  0037                     _RB7	set	55
    78                           	global	_RCIF
    79  0065                     _RCIF	set	101
    80                           	global	_RX9
    81  00C6                     _RX9	set	198
    82                           	global	_SPEN
    83  00C7                     _SPEN	set	199
    84                           	global	_SREN
    85  00C5                     _SREN	set	197
    86                           	global	_TXIF
    87  0064                     _TXIF	set	100
    88                           	global	_EEADR
    89  009B                     _EEADR	set	155
    90                           	global	_EECON1
    91  009C                     _EECON1	set	156
    92                           	global	_EECON2
    93  009D                     _EECON2	set	157
    94                           	global	_EEDATA
    95  009A                     _EEDATA	set	154
    96                           	global	_SPBRG
    97  0099                     _SPBRG	set	153
    98                           	global	_BRGH
    99  04C2                     _BRGH	set	1218
   100                           	global	_RCIE
   101  0465                     _RCIE	set	1125
   102                           	global	_RD
   103  04E0                     _RD	set	1248
   104                           	global	_SYNC
   105  04C4                     _SYNC	set	1220
   106                           	global	_TRISA0
   107  0428                     _TRISA0	set	1064
   108                           	global	_TRISB1
   109  0431                     _TRISB1	set	1073
   110                           	global	_TRISB2
   111  0432                     _TRISB2	set	1074
   112                           	global	_TRISB7
   113  0437                     _TRISB7	set	1079
   114                           	global	_TX9
   115  04C6                     _TX9	set	1222
   116                           	global	_TXEN
   117  04C5                     _TXEN	set	1221
   118                           	global	_TXIE
   119  0464                     _TXIE	set	1124
   120                           	global	_WR
   121  04E1                     _WR	set	1249
   122                           	global	_WREN
   123  04E2                     _WREN	set	1250
   124                           psect	strings,class=STRING,delta=2
   125                           global __pstrings
   126  0066                     __pstrings:
   127                           ;	global	stringdir,stringtab,__stringbase
   128  0066                     stringtab:
   129                           ;	String table - string pointers are 1 byte each
   130  0066                     stringcode:stringdir:
      + 0066                     stringdir:	
   131  0066  3000               movlw high(stringdir)
   132  0067  008A               movwf pclath
   133  0068  0804               movf fsr,w
   134  0069  0A84               incf fsr
   135  006A  0782               	addwf pc
   136  006B                     __stringbase:
   137  006B  3400               	retlw	0
   138                           psect	strings
   139                           	
   140  006C                     STR_1:	
   141  006C  3448               	retlw	72	;'H'
   142  006D  3465               	retlw	101	;'e'
   143  006E  346C               	retlw	108	;'l'
   144  006F  346C               	retlw	108	;'l'
   145  0070  346F               	retlw	111	;'o'
   146  0071  3420               	retlw	32	;' '
   147  0072  3457               	retlw	87	;'W'
   148  0073  346F               	retlw	111	;'o'
   149  0074  3472               	retlw	114	;'r'
   150  0075  346C               	retlw	108	;'l'
   151  0076  3464               	retlw	100	;'d'
   152  0077  3421               	retlw	33	;'!'
   153  0078  3400               	retlw	0
   154                           psect	strings
   155                           	file	"serial-RX-TX.as"
   156                           	line	#
   157                           psect cinit,class=CODE,delta=2
   158                           global start_initialization
   159  00B6                     start_initialization:
   160                           
   161                           psect	bssCOMMON,class=COMMON,space=1
   162                           global __pbssCOMMON
   163  0077                     __pbssCOMMON:
   164  0077                     _chr:
   165  0077                            ds      1
   166                           
   167                           ; Clear objects allocated to COMMON
   168                           psect cinit,class=CODE,delta=2
   169  00B6  01F7               	clrf	((__pbssCOMMON)+0)&07Fh
   170                           psect cinit,class=CODE,delta=2
   171                           global end_of_initialization
   172                           
   173                           ;End of C runtime variable initialization code
   174                           
   175  00B7                     end_of_initialization:
   176  00B7  0183               clrf status
   177  00B8  2879               ljmp _main	;jump to C main() function
   178                           psect	cstackCOMMON,class=COMMON,space=1
   179                           global __pcstackCOMMON
   180  0070                     __pcstackCOMMON:
   181                           	global	?_SendByteSerially
   182  0070                     ?_SendByteSerially:	; 0 bytes @ 0x0
   183                           	global	?_InitUART
   184  0070                     ?_InitUART:	; 0 bytes @ 0x0
   185                           	global	?_SendStringSerially
   186  0070                     ?_SendStringSerially:	; 0 bytes @ 0x0
   187                           	global	?_ISR
   188  0070                     ?_ISR:	; 0 bytes @ 0x0
   189                           	global	?_main
   190  0070                     ?_main:	; 0 bytes @ 0x0
   191                           	global	?i1_SendByteSerially
   192  0070                     ?i1_SendByteSerially:	; 0 bytes @ 0x0
   193                           	global	??i1_SendByteSerially
   194  0070                     ??i1_SendByteSerially:	; 0 bytes @ 0x0
   195                           	global	?_ReceiveByteSerially
   196  0070                     ?_ReceiveByteSerially:	; 1 bytes @ 0x0
   197                           	global	i1SendByteSerially@Byte
   198  0070                     i1SendByteSerially@Byte:	; 1 bytes @ 0x0
   199  0070                     	ds	1
   200                           	global	??_ISR
   201  0071                     ??_ISR:	; 0 bytes @ 0x1
   202  0071                     	ds	5
   203                           	global	??_SendByteSerially
   204  0076                     ??_SendByteSerially:	; 0 bytes @ 0x6
   205                           	global	??_InitUART
   206  0076                     ??_InitUART:	; 0 bytes @ 0x6
   207                           	global	??_ReceiveByteSerially
   208  0076                     ??_ReceiveByteSerially:	; 0 bytes @ 0x6
   209                           	global	SendByteSerially@Byte
   210  0076                     SendByteSerially@Byte:	; 1 bytes @ 0x6
   211  0076                     	ds	1
   212                           	global	??_main
   213  0077                     ??_main:	; 0 bytes @ 0x7
   214                           psect	cstackBANK0,class=BANK0,space=1
   215                           global __pcstackBANK0
   216  0020                     __pcstackBANK0:
   217                           	global	??_SendStringSerially
   218  0020                     ??_SendStringSerially:	; 0 bytes @ 0x0
   219  0020                     	ds	1
   220                           	global	SendStringSerially@st
   221  0021                     SendStringSerially@st:	; 1 bytes @ 0x1
   222  0021                     	ds	1
   223 ;;Data sizes: Strings 13, constant 0, data 0, bss 1, persistent 0 stack 0
   224 ;;Auto spaces:   Size  Autos    Used
   225 ;; COMMON          14      7       8
   226 ;; BANK0           80      2       2
   227 ;; BANK1           80      0       0
   228 ;; BANK2           48      0       0
   229                           
   230 ;;
   231 ;; Pointer list with targets:
   232                           
   233 ;; SendStringSerially@st	PTR const unsigned char  size(1) Largest target is 13
   234 ;;		 -> STR_1(CODE[13]), 
   235 ;;
   236                           
   237                           
   238 ;;
   239 ;; Critical Paths under _main in COMMON
   240 ;;
   241 ;;   _main->_SendByteSerially
   242 ;;   _SendStringSerially->_SendByteSerially
   243 ;;
   244 ;; Critical Paths under _ISR in COMMON
   245 ;;
   246 ;;   _ISR->i1_SendByteSerially
   247 ;;
   248 ;; Critical Paths under _main in BANK0
   249 ;;
   250 ;;   _main->_SendStringSerially
   251 ;;
   252 ;; Critical Paths under _ISR in BANK0
   253 ;;
   254 ;;   None.
   255 ;;
   256 ;; Critical Paths under _main in BANK1
   257 ;;
   258 ;;   None.
   259 ;;
   260 ;; Critical Paths under _ISR in BANK1
   261 ;;
   262 ;;   None.
   263 ;;
   264 ;; Critical Paths under _main in BANK2
   265 ;;
   266 ;;   None.
   267 ;;
   268 ;; Critical Paths under _ISR in BANK2
   269 ;;
   270 ;;   None.
   271                           
   272 ;;
   273 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   274 ;;
   275                           
   276 ;;
   277 ;;Call Graph Tables:
   278 ;;
   279 ;; ---------------------------------------------------------------------------------
   280 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   281 ;; ---------------------------------------------------------------------------------
   282 ;; (0) _main                                                 0     0      0     109
   283 ;;                           _InitUART
   284 ;;                 _SendStringSerially
   285 ;;                _ReceiveByteSerially
   286 ;;                   _SendByteSerially
   287 ;; ---------------------------------------------------------------------------------
   288 ;; (1) _SendStringSerially                                   2     2      0      87
   289 ;;                                              0 BANK0      2     2      0
   290 ;;                   _SendByteSerially
   291 ;; ---------------------------------------------------------------------------------
   292 ;; (1) _ReceiveByteSerially                                  0     0      0       0
   293 ;; ---------------------------------------------------------------------------------
   294 ;; (1) _InitUART                                             0     0      0       0
   295 ;; ---------------------------------------------------------------------------------
   296 ;; (1) _SendByteSerially                                     1     1      0      22
   297 ;;                                              6 COMMON     1     1      0
   298 ;; ---------------------------------------------------------------------------------
   299 ;; Estimated maximum stack depth 1
   300 ;; ---------------------------------------------------------------------------------
   301 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   302 ;; ---------------------------------------------------------------------------------
   303 ;; (3) _ISR                                                  5     5      0      73
   304 ;;                                              1 COMMON     5     5      0
   305 ;;                 i1_SendByteSerially
   306 ;; ---------------------------------------------------------------------------------
   307 ;; (4) i1_SendByteSerially                                   1     1      0      73
   308 ;;                                              0 COMMON     1     1      0
   309 ;; ---------------------------------------------------------------------------------
   310 ;; Estimated maximum stack depth 4
   311 ;; ---------------------------------------------------------------------------------
   312                           
   313 ;; Call Graph Graphs:
   314                           
   315 ;; _main (ROOT)
   316 ;;   _InitUART
   317 ;;   _SendStringSerially
   318 ;;     _SendByteSerially
   319 ;;   _ReceiveByteSerially
   320 ;;   _SendByteSerially
   321 ;;
   322 ;; _ISR (ROOT)
   323 ;;   i1_SendByteSerially
   324 ;;
   325                           
   326 ;; Address spaces:
   327                           
   328 ;;Name               Size   Autos  Total    Cost      Usage
   329 ;;BITCOMMON            E      0       0       0        0.0%
   330 ;;EEDATA              80      0       0       0        0.0%
   331 ;;NULL                 0      0       0       0        0.0%
   332 ;;CODE                 0      0       0       0        0.0%
   333 ;;COMMON               E      7       8       1       57.1%
   334 ;;BITSFR0              0      0       0       1        0.0%
   335 ;;SFR0                 0      0       0       1        0.0%
   336 ;;BITSFR1              0      0       0       2        0.0%
   337 ;;SFR1                 0      0       0       2        0.0%
   338 ;;STACK                0      0       6       2        0.0%
   339 ;;BANK0               50      2       2       3        2.5%
   340 ;;BITSFR3              0      0       0       4        0.0%
   341 ;;SFR3                 0      0       0       4        0.0%
   342 ;;ABS                  0      0       A       4        0.0%
   343 ;;BITBANK0            50      0       0       5        0.0%
   344 ;;BITSFR2              0      0       0       5        0.0%
   345 ;;SFR2                 0      0       0       5        0.0%
   346 ;;BITBANK1            50      0       0       6        0.0%
   347 ;;BANK1               50      0       0       7        0.0%
   348 ;;BITBANK2            30      0       0       8        0.0%
   349 ;;BANK2               30      0       0       9        0.0%
   350 ;;DATA                 0      0      10      10        0.0%
   351                           
   352                           	global	_main
   353                           psect	maintext,global,class=CODE,delta=2
   354                           global __pmaintext
   355  0079                     __pmaintext:
   356                           
   357 ;; *************** function _main *****************
   358 ;; Defined at:
   359 ;;		line 16 in file "C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\Main.c"
   360 ;; Parameters:    Size  Location     Type
   361 ;;		None
   362 ;; Auto vars:     Size  Location     Type
   363 ;;		None
   364 ;; Return value:  Size  Location     Type
   365 ;;		None               void
   366 ;; Registers used:
   367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   368 ;; Tracked objects:
   369 ;;		On entry : 17F/0
   370 ;;		On exit  : 0/0
   371 ;;		Unchanged: 0/0
   372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   373 ;;      Params:         0       0       0       0
   374 ;;      Locals:         0       0       0       0
   375 ;;      Temps:          0       0       0       0
   376 ;;      Totals:         0       0       0       0
   377 ;;Total ram usage:        0 bytes
   378 ;; Hardware stack levels required when called:    4
   379 ;; This function calls:
   380 ;;		_InitUART
   381 ;;		_SendStringSerially
   382 ;;		_ReceiveByteSerially
   383 ;;		_SendByteSerially
   384 ;; This function is called by:
   385 ;;		Startup code after reset
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           psect	maintext
   389                           	file	"C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\Main.c"
   390                           	line	16
   391                           	global	__size_of_main
   392  0013                     	__size_of_main	equ	__end_of_main-_main
   393                           	
   394  0079                     _main:	
   395                           	opt	stack 4
   396                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   397                           	line	17
   398                           	
   399  0079                     l2934:	
   400                           ;Main.c: 17: InitUART();
   401  0079  2033               	fcall	_InitUART
   402                           	line	19
   403                           	
   404  007A                     l2936:	
   405                           ;Main.c: 19: SendStringSerially("Hello World!");
   406  007A  3001               	movlw	((STR_1-__stringbase))&0ffh
   407  007B  204D               	fcall	_SendStringSerially
   408                           	line	21
   409                           	
   410  007C                     l2938:	
   411                           ;Main.c: 21: GIE = 1;
   412  007C  178B               	bsf	(95/8),(95)&7
   413                           	line	22
   414                           	
   415  007D                     l2940:	
   416                           ;Main.c: 22: PEIE = 1;
   417  007D  170B               	bsf	(94/8),(94)&7
   418                           	line	24
   419                           	
   420  007E                     l2942:	
   421                           ;Main.c: 24: TRISA0=0;
   422  007E  1683               	bsf	status, 5	;RP0=1, select bank1
   423  007F  1303               	bcf	status, 6	;RP1=0, select bank1
   424  0080  1005               	bcf	(1064/8)^080h,(1064)&7
   425                           	line	25
   426                           	
   427  0081                     l2944:	
   428                           ;Main.c: 25: TRISB7=0;
   429  0081  1386               	bcf	(1079/8)^080h,(1079)&7
   430                           	line	26
   431                           	
   432  0082                     l2946:	
   433                           ;Main.c: 26: RA0=0;
   434  0082  1283               	bcf	status, 5	;RP0=0, select bank0
   435  0083  1303               	bcf	status, 6	;RP1=0, select bank0
   436  0084  1005               	bcf	(40/8),(40)&7
   437                           	line	27
   438                           	
   439  0085                     l2948:	
   440                           ;Main.c: 27: RB7=0;
   441  0085  1386               	bcf	(55/8),(55)&7
   442  0086  2887               	goto	l2950
   443                           	line	28
   444                           ;Main.c: 28: while(1)
   445                           	
   446  0087                     l768:	
   447                           	line	33
   448                           	
   449  0087                     l2950:	
   450                           ;Main.c: 29: {
   451                           ;Main.c: 33: SendByteSerially(ReceiveByteSerially());
   452  0087  208C               	fcall	_ReceiveByteSerially
   453  0088  209E               	fcall	_SendByteSerially
   454  0089  2887               	goto	l2950
   455                           	line	34
   456                           	
   457  008A                     l769:	
   458                           	line	28
   459  008A  2887               	goto	l2950
   460                           	
   461  008B                     l770:	
   462                           	line	35
   463                           	
   464  008B                     l771:	
   465                           	global	start
   466  008B  2810               	ljmp	start
   467                           	opt stack 0
   468                           GLOBAL	__end_of_main
   469  008C                     	__end_of_main:
   470 ;; =============== function _main ends ============
   471                           
   472                           	signat	_main,88
   473                           	global	_SendStringSerially
   474                           psect	text287,local,class=CODE,delta=2
   475                           global __ptext287
   476  004D                     __ptext287:
   477                           
   478 ;; *************** function _SendStringSerially *****************
   479 ;; Defined at:
   480 ;;		line 50 in file "C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\UART.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;  st              1    wreg     PTR const unsigned char 
   483 ;;		 -> STR_1(13), 
   484 ;; Auto vars:     Size  Location     Type
   485 ;;  st              1    1[BANK0 ] PTR const unsigned char 
   486 ;;		 -> STR_1(13), 
   487 ;; Return value:  Size  Location     Type
   488 ;;		None               void
   489 ;; Registers used:
   490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   496 ;;      Params:         0       0       0       0
   497 ;;      Locals:         0       1       0       0
   498 ;;      Temps:          0       1       0       0
   499 ;;      Totals:         0       2       0       0
   500 ;;Total ram usage:        2 bytes
   501 ;; Hardware stack levels used:    1
   502 ;; Hardware stack levels required when called:    3
   503 ;; This function calls:
   504 ;;		_SendByteSerially
   505 ;; This function is called by:
   506 ;;		_main
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           psect	text287
   510                           	file	"C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\UART.c"
   511                           	line	50
   512                           	global	__size_of_SendStringSerially
   513  0019                     	__size_of_SendStringSerially	equ	__end_of_SendStringSerially-_SendStringSerially
   514                           	
   515  004D                     _SendStringSerially:	
   516                           	opt	stack 4
   517                           ; Regs used in _SendStringSerially: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   518                           ;SendStringSerially@st stored from wreg
   519  004D  1283               	bcf	status, 5	;RP0=0, select bank0
   520  004E  1303               	bcf	status, 6	;RP1=0, select bank0
   521  004F  00A1               	movwf	(SendStringSerially@st)
   522                           	line	51
   523                           	
   524  0050                     l2926:	
   525                           ;UART.c: 51: while(*st)
   526  0050  285C               	goto	l2932
   527                           	
   528  0051                     l1165:	
   529                           	line	52
   530                           	
   531  0051                     l2928:	
   532                           ;UART.c: 52: SendByteSerially(*st++);
   533  0051  0821               	movf	(SendStringSerially@st),w
   534  0052  0084               	movwf	fsr0
   535  0053  2066               	fcall	stringdir
   536  0054  209E               	fcall	_SendByteSerially
   537                           	
   538  0055                     l2930:	
   539  0055  3001               	movlw	(01h)
   540  0056  1283               	bcf	status, 5	;RP0=0, select bank0
   541  0057  1303               	bcf	status, 6	;RP1=0, select bank0
   542  0058  00A0               	movwf	(??_SendStringSerially+0)+0
   543  0059  0820               	movf	(??_SendStringSerially+0)+0,w
   544  005A  07A1               	addwf	(SendStringSerially@st),f
   545  005B  285C               	goto	l2932
   546                           	
   547  005C                     l1164:	
   548                           	line	51
   549                           	
   550  005C                     l2932:	
   551  005C  0821               	movf	(SendStringSerially@st),w
   552  005D  0084               	movwf	fsr0
   553  005E  2066               	fcall	stringdir
   554  005F  3800               	iorlw	0
   555  0060  1D03               	skipz
   556  0061  2863               	goto	u2351
   557  0062  2864               	goto	u2350
   558  0063                     u2351:
   559  0063  2851               	goto	l2928
   560  0064                     u2350:
   561  0064  2865               	goto	l1167
   562                           	
   563  0065                     l1166:	
   564                           	line	53
   565                           	
   566  0065                     l1167:	
   567  0065  0008               	return
   568                           	opt stack 0
   569                           GLOBAL	__end_of_SendStringSerially
   570  0066                     	__end_of_SendStringSerially:
   571 ;; =============== function _SendStringSerially ends ============
   572                           
   573                           	signat	_SendStringSerially,4216
   574                           	global	_ReceiveByteSerially
   575                           psect	text288,local,class=CODE,delta=2
   576                           global __ptext288
   577  008C                     __ptext288:
   578                           
   579 ;; *************** function _ReceiveByteSerially *****************
   580 ;; Defined at:
   581 ;;		line 34 in file "C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\UART.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;		None
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      unsigned char 
   588 ;; Registers used:
   589 ;;		wreg
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   595 ;;      Params:         0       0       0       0
   596 ;;      Locals:         0       0       0       0
   597 ;;      Temps:          0       0       0       0
   598 ;;      Totals:         0       0       0       0
   599 ;;Total ram usage:        0 bytes
   600 ;; Hardware stack levels used:    1
   601 ;; Hardware stack levels required when called:    2
   602 ;; This function calls:
   603 ;;		Nothing
   604 ;; This function is called by:
   605 ;;		_main
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           psect	text288
   609                           	file	"C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\UART.c"
   610                           	line	34
   611                           	global	__size_of_ReceiveByteSerially
   612  0012                     	__size_of_ReceiveByteSerially	equ	__end_of_ReceiveByteSerially-_ReceiveByteSerially
   613                           	
   614  008C                     _ReceiveByteSerially:	
   615                           	opt	stack 5
   616                           ; Regs used in _ReceiveByteSerially: [wreg]
   617                           	line	37
   618                           	
   619  008C                     l1980:	
   620                           ;UART.c: 37: if(OERR)
   621  008C  1283               	bcf	status, 5	;RP0=0, select bank0
   622  008D  1303               	bcf	status, 6	;RP1=0, select bank0
   623  008E  1C98               	btfss	(193/8),(193)&7
   624  008F  2891               	goto	u41
   625  0090  2892               	goto	u40
   626  0091                     u41:
   627  0091  2896               	goto	l1158
   628  0092                     u40:
   629                           	line	39
   630                           	
   631  0092                     l1982:	
   632                           ;UART.c: 38: {
   633                           ;UART.c: 39: CREN = 0;
   634  0092  1218               	bcf	(196/8),(196)&7
   635                           	line	40
   636                           ;UART.c: 40: CREN = 1;
   637  0093  1618               	bsf	(196/8),(196)&7
   638  0094  2896               	goto	l1158
   639                           	line	41
   640                           	
   641  0095                     l1157:	
   642                           	line	43
   643                           ;UART.c: 41: }
   644                           ;UART.c: 43: while(!RCIF);
   645  0095  2896               	goto	l1158
   646                           	
   647  0096                     l1159:	
   648                           	
   649  0096                     l1158:	
   650  0096  1E8C               	btfss	(101/8),(101)&7
   651  0097  2899               	goto	u51
   652  0098  289A               	goto	u50
   653  0099                     u51:
   654  0099  2896               	goto	l1158
   655  009A                     u50:
   656  009A  289B               	goto	l1984
   657                           	
   658  009B                     l1160:	
   659                           	line	46
   660                           	
   661  009B                     l1984:	
   662                           ;UART.c: 46: return RCREG;
   663  009B  081A               	movf	(26),w	;volatile
   664  009C  289D               	goto	l1161
   665                           	
   666  009D                     l1986:	
   667                           	line	47
   668                           	
   669  009D                     l1161:	
   670  009D  0008               	return
   671                           	opt stack 0
   672                           GLOBAL	__end_of_ReceiveByteSerially
   673  009E                     	__end_of_ReceiveByteSerially:
   674 ;; =============== function _ReceiveByteSerially ends ============
   675                           
   676                           	signat	_ReceiveByteSerially,89
   677                           	global	_InitUART
   678                           psect	text289,local,class=CODE,delta=2
   679                           global __ptext289
   680  0033                     __ptext289:
   681                           
   682 ;; *************** function _InitUART *****************
   683 ;; Defined at:
   684 ;;		line 8 in file "C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\UART.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;		None
   687 ;; Auto vars:     Size  Location     Type
   688 ;;		None
   689 ;; Return value:  Size  Location     Type
   690 ;;		None               void
   691 ;; Registers used:
   692 ;;		wreg
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   698 ;;      Params:         0       0       0       0
   699 ;;      Locals:         0       0       0       0
   700 ;;      Temps:          0       0       0       0
   701 ;;      Totals:         0       0       0       0
   702 ;;Total ram usage:        0 bytes
   703 ;; Hardware stack levels used:    1
   704 ;; Hardware stack levels required when called:    2
   705 ;; This function calls:
   706 ;;		Nothing
   707 ;; This function is called by:
   708 ;;		_main
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           psect	text289
   712                           	file	"C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\UART.c"
   713                           	line	8
   714                           	global	__size_of_InitUART
   715  001A                     	__size_of_InitUART	equ	__end_of_InitUART-_InitUART
   716                           	
   717  0033                     _InitUART:	
   718                           	opt	stack 5
   719                           ; Regs used in _InitUART: [wreg]
   720                           	line	9
   721                           	
   722  0033                     l1954:	
   723                           ;UART.c: 9: TRISB2 = 0;
   724  0033  1683               	bsf	status, 5	;RP0=1, select bank1
   725  0034  1303               	bcf	status, 6	;RP1=0, select bank1
   726  0035  1106               	bcf	(1074/8)^080h,(1074)&7
   727                           	line	10
   728                           ;UART.c: 10: TRISB1 = 1;
   729  0036  1486               	bsf	(1073/8)^080h,(1073)&7
   730                           	line	12
   731                           	
   732  0037                     l1956:	
   733                           ;UART.c: 12: SPBRG = ((20000000/16)/9600) - 1;
   734  0037  3081               	movlw	(081h)
   735  0038  0099               	movwf	(153)^080h	;volatile
   736                           	line	13
   737                           	
   738  0039                     l1958:	
   739                           ;UART.c: 13: BRGH = 1;
   740  0039  1518               	bsf	(1218/8)^080h,(1218)&7
   741                           	line	14
   742                           	
   743  003A                     l1960:	
   744                           ;UART.c: 14: SYNC = 0;
   745  003A  1218               	bcf	(1220/8)^080h,(1220)&7
   746                           	line	15
   747                           	
   748  003B                     l1962:	
   749                           ;UART.c: 15: SPEN = 1;
   750  003B  1283               	bcf	status, 5	;RP0=0, select bank0
   751  003C  1303               	bcf	status, 6	;RP1=0, select bank0
   752  003D  1798               	bsf	(199/8),(199)&7
   753                           	line	16
   754                           	
   755  003E                     l1964:	
   756                           ;UART.c: 16: CREN = 1;
   757  003E  1618               	bsf	(196/8),(196)&7
   758                           	line	17
   759                           	
   760  003F                     l1966:	
   761                           ;UART.c: 17: SREN = 0;
   762  003F  1298               	bcf	(197/8),(197)&7
   763                           	line	18
   764                           	
   765  0040                     l1968:	
   766                           ;UART.c: 18: TXIE = 0;
   767  0040  1683               	bsf	status, 5	;RP0=1, select bank1
   768  0041  1303               	bcf	status, 6	;RP1=0, select bank1
   769  0042  120C               	bcf	(1124/8)^080h,(1124)&7
   770                           	line	19
   771                           	
   772  0043                     l1970:	
   773                           ;UART.c: 19: RCIE = 1;
   774  0043  168C               	bsf	(1125/8)^080h,(1125)&7
   775                           	line	20
   776                           	
   777  0044                     l1972:	
   778                           ;UART.c: 20: TX9 = 0;
   779  0044  1318               	bcf	(1222/8)^080h,(1222)&7
   780                           	line	21
   781                           	
   782  0045                     l1974:	
   783                           ;UART.c: 21: RX9 = 0;
   784  0045  1283               	bcf	status, 5	;RP0=0, select bank0
   785  0046  1303               	bcf	status, 6	;RP1=0, select bank0
   786  0047  1318               	bcf	(198/8),(198)&7
   787                           	line	22
   788                           	
   789  0048                     l1976:	
   790                           ;UART.c: 22: TXEN = 0;
   791  0048  1683               	bsf	status, 5	;RP0=1, select bank1
   792  0049  1303               	bcf	status, 6	;RP1=0, select bank1
   793  004A  1298               	bcf	(1221/8)^080h,(1221)&7
   794                           	line	23
   795                           	
   796  004B                     l1978:	
   797                           ;UART.c: 23: TXEN = 1;
   798  004B  1698               	bsf	(1221/8)^080h,(1221)&7
   799                           	line	24
   800                           	
   801  004C                     l1148:	
   802  004C  0008               	return
   803                           	opt stack 0
   804                           GLOBAL	__end_of_InitUART
   805  004D                     	__end_of_InitUART:
   806 ;; =============== function _InitUART ends ============
   807                           
   808                           	signat	_InitUART,88
   809                           	global	_SendByteSerially
   810                           psect	text290,local,class=CODE,delta=2
   811                           global __ptext290
   812  009E                     __ptext290:
   813                           
   814 ;; *************** function _SendByteSerially *****************
   815 ;; Defined at:
   816 ;;		line 28 in file "C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\UART.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;  Byte            1    wreg     unsigned char 
   819 ;; Auto vars:     Size  Location     Type
   820 ;;  Byte            1    6[COMMON] unsigned char 
   821 ;; Return value:  Size  Location     Type
   822 ;;		None               void
   823 ;; Registers used:
   824 ;;		wreg
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   830 ;;      Params:         0       0       0       0
   831 ;;      Locals:         1       0       0       0
   832 ;;      Temps:          0       0       0       0
   833 ;;      Totals:         1       0       0       0
   834 ;;Total ram usage:        1 bytes
   835 ;; Hardware stack levels used:    1
   836 ;; Hardware stack levels required when called:    2
   837 ;; This function calls:
   838 ;;		Nothing
   839 ;; This function is called by:
   840 ;;		_main
   841 ;;		_SendStringSerially
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           psect	text290
   845                           	file	"C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\UART.c"
   846                           	line	28
   847                           	global	__size_of_SendByteSerially
   848  000C                     	__size_of_SendByteSerially	equ	__end_of_SendByteSerially-_SendByteSerially
   849                           	
   850  009E                     _SendByteSerially:	
   851                           	opt	stack 5
   852                           ; Regs used in _SendByteSerially: [wreg]
   853                           ;SendByteSerially@Byte stored from wreg
   854  009E  00F6               	movwf	(SendByteSerially@Byte)
   855                           	line	29
   856                           	
   857  009F                     l2892:	
   858                           ;UART.c: 29: while(!TXIF);
   859  009F  28A0               	goto	l1151
   860                           	
   861  00A0                     l1152:	
   862                           	
   863  00A0                     l1151:	
   864  00A0  1283               	bcf	status, 5	;RP0=0, select bank0
   865  00A1  1303               	bcf	status, 6	;RP1=0, select bank0
   866  00A2  1E0C               	btfss	(100/8),(100)&7
   867  00A3  28A5               	goto	u2321
   868  00A4  28A6               	goto	u2320
   869  00A5                     u2321:
   870  00A5  28A0               	goto	l1151
   871  00A6                     u2320:
   872  00A6  28A7               	goto	l2894
   873                           	
   874  00A7                     l1153:	
   875                           	line	30
   876                           	
   877  00A7                     l2894:	
   878                           ;UART.c: 30: TXREG = Byte;
   879  00A7  0876               	movf	(SendByteSerially@Byte),w
   880  00A8  0099               	movwf	(25)	;volatile
   881                           	line	31
   882                           	
   883  00A9                     l1154:	
   884  00A9  0008               	return
   885                           	opt stack 0
   886                           GLOBAL	__end_of_SendByteSerially
   887  00AA                     	__end_of_SendByteSerially:
   888 ;; =============== function _SendByteSerially ends ============
   889                           
   890                           	signat	_SendByteSerially,4216
   891                           	global	_ISR
   892                           psect	text291,local,class=CODE,delta=2
   893                           global __ptext291
   894  0011                     __ptext291:
   895                           
   896 ;; *************** function _ISR *****************
   897 ;; Defined at:
   898 ;;		line 7 in file "C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\ISR.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;		None               void
   905 ;; Registers used:
   906 ;;		wreg, status,2, status,0, pclath, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   912 ;;      Params:         0       0       0       0
   913 ;;      Locals:         0       0       0       0
   914 ;;      Temps:          5       0       0       0
   915 ;;      Totals:         5       0       0       0
   916 ;;Total ram usage:        5 bytes
   917 ;; Hardware stack levels used:    1
   918 ;; Hardware stack levels required when called:    1
   919 ;; This function calls:
   920 ;;		i1_SendByteSerially
   921 ;; This function is called by:
   922 ;;		Interrupt level 1
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           psect	text291
   926                           	file	"C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\ISR.c"
   927                           	line	7
   928                           	global	__size_of_ISR
   929  0022                     	__size_of_ISR	equ	__end_of_ISR-_ISR
   930                           	
   931  0011                     _ISR:	
   932                           	opt	stack 4
   933                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   934                           psect	intentry,class=CODE,delta=2
   935                           global __pintentry
   936  0004                     __pintentry:
   937                           global interrupt_function
   938  0004                     interrupt_function:
   939                           	global saved_w
   940  007E                     	saved_w	set	btemp+0
   941  0004  00FE               	movwf	saved_w
   942  0005  0E03               	swapf	status,w
   943  0006  00F2               	movwf	(??_ISR+1)
   944  0007  0804               	movf	fsr0,w
   945  0008  00F3               	movwf	(??_ISR+2)
   946  0009  080A               	movf	pclath,w
   947  000A  00F4               	movwf	(??_ISR+3)
   948  000B  1283               	bcf	status, 5	;RP0=0, select bank0
   949  000C  1303               	bcf	status, 6	;RP1=0, select bank0
   950  000D  087F               	movf	btemp+1,w
   951  000E  00F5               	movwf	(??_ISR+4)
   952  000F  2811               	ljmp	_ISR
   953                           psect	text291
   954                           	line	8
   955                           	
   956  0011                     i1l2880:	
   957                           ;ISR.c: 8: if(RCIF)
   958  0011  1E8C               	btfss	(101/8),(101)&7
   959  0012  2814               	goto	u230_21
   960  0013  2815               	goto	u230_20
   961  0014                     u230_21:
   962  0014  2828               	goto	i1l383
   963  0015                     u230_20:
   964                           	line	10
   965                           	
   966  0015                     i1l2882:	
   967                           ;ISR.c: 9: {
   968                           ;ISR.c: 10: RA0=1;
   969  0015  1405               	bsf	(40/8),(40)&7
   970                           	line	11
   971                           ;ISR.c: 11: if(OERR)
   972  0016  1C98               	btfss	(193/8),(193)&7
   973  0017  2819               	goto	u231_21
   974  0018  281A               	goto	u231_20
   975  0019                     u231_21:
   976  0019  281C               	goto	i1l382
   977  001A                     u231_20:
   978                           	line	13
   979                           	
   980  001A                     i1l2884:	
   981                           ;ISR.c: 12: {
   982                           ;ISR.c: 13: CREN = 0;
   983  001A  1218               	bcf	(196/8),(196)&7
   984                           	line	14
   985                           ;ISR.c: 14: CREN = 1;
   986  001B  1618               	bsf	(196/8),(196)&7
   987                           	line	15
   988                           	
   989  001C                     i1l382:	
   990                           	line	16
   991                           ;ISR.c: 15: }
   992                           ;ISR.c: 16: RA0=0;
   993  001C  1005               	bcf	(40/8),(40)&7
   994                           	line	17
   995                           ;ISR.c: 17: RB7=1;
   996  001D  1786               	bsf	(55/8),(55)&7
   997                           	line	18
   998                           	
   999  001E                     i1l2886:	
  1000                           ;ISR.c: 18: chr=RCREG;
  1001  001E  081A               	movf	(26),w	;volatile
  1002  001F  00F1               	movwf	(??_ISR+0)+0
  1003  0020  0871               	movf	(??_ISR+0)+0,w
  1004  0021  00F7               	movwf	(_chr)
  1005                           	line	20
  1006                           	
  1007  0022                     i1l2888:	
  1008                           ;ISR.c: 20: SendByteSerially(chr);
  1009  0022  0877               	movf	(_chr),w
  1010  0023  20AA               	fcall	i1_SendByteSerially
  1011                           	line	21
  1012                           	
  1013  0024                     i1l2890:	
  1014                           ;ISR.c: 21: RB7=0;
  1015  0024  1283               	bcf	status, 5	;RP0=0, select bank0
  1016  0025  1303               	bcf	status, 6	;RP1=0, select bank0
  1017  0026  1386               	bcf	(55/8),(55)&7
  1018  0027  2828               	goto	i1l383
  1019                           	line	22
  1020                           	
  1021  0028                     i1l381:	
  1022                           	line	23
  1023                           	
  1024  0028                     i1l383:	
  1025  0028  0875               	movf	(??_ISR+4),w
  1026  0029  00FF               	movwf	btemp+1
  1027  002A  0874               	movf	(??_ISR+3),w
  1028  002B  008A               	movwf	pclath
  1029  002C  0873               	movf	(??_ISR+2),w
  1030  002D  0084               	movwf	fsr0
  1031  002E  0E72               	swapf	(??_ISR+1)^0FFFFFF80h,w
  1032  002F  0083               	movwf	status
  1033  0030  0EFE               	swapf	saved_w,f
  1034  0031  0E7E               	swapf	saved_w,w
  1035  0032  0009               	retfie
  1036                           	opt stack 0
  1037                           GLOBAL	__end_of_ISR
  1038  0033                     	__end_of_ISR:
  1039 ;; =============== function _ISR ends ============
  1040                           
  1041                           	signat	_ISR,88
  1042                           	global	i1_SendByteSerially
  1043                           psect	text292,local,class=CODE,delta=2
  1044                           global __ptext292
  1045  00AA                     __ptext292:
  1046                           
  1047 ;; *************** function i1_SendByteSerially *****************
  1048 ;; Defined at:
  1049 ;;		line 28 in file "C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\UART.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;  SendByteSeri    1    wreg     unsigned char 
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;  SendByteSeri    1    0[COMMON] unsigned char 
  1054 ;; Return value:  Size  Location     Type
  1055 ;;		None               void
  1056 ;; Registers used:
  1057 ;;		wreg
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1063 ;;      Params:         0       0       0       0
  1064 ;;      Locals:         1       0       0       0
  1065 ;;      Temps:          0       0       0       0
  1066 ;;      Totals:         1       0       0       0
  1067 ;;Total ram usage:        1 bytes
  1068 ;; Hardware stack levels used:    1
  1069 ;; This function calls:
  1070 ;;		Nothing
  1071 ;; This function is called by:
  1072 ;;		_ISR
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           psect	text292
  1076                           	file	"C:\Users\davidq\Documents\GitHub\electronics\Serial com - 16F628A\UART.c"
  1077                           	line	28
  1078                           	global	__size_ofi1_SendByteSerially
  1079  000C                     	__size_ofi1_SendByteSerially	equ	__end_ofi1_SendByteSerially-i1_SendByteSerially
  1080                           	
  1081  00AA                     i1_SendByteSerially:	
  1082                           	opt	stack 4
  1083                           ; Regs used in i1_SendByteSerially: [wreg]
  1084                           ;i1SendByteSerially@Byte stored from wreg
  1085  00AA  00F0               	movwf	(i1SendByteSerially@Byte)
  1086                           	line	29
  1087                           	
  1088  00AB                     i1l2896:	
  1089                           ;UART.c: 29: while(!TXIF);
  1090  00AB  28AC               	goto	i1l1151
  1091                           	
  1092  00AC                     i1l1152:	
  1093                           	
  1094  00AC                     i1l1151:	
  1095  00AC  1283               	bcf	status, 5	;RP0=0, select bank0
  1096  00AD  1303               	bcf	status, 6	;RP1=0, select bank0
  1097  00AE  1E0C               	btfss	(100/8),(100)&7
  1098  00AF  28B1               	goto	u233_21
  1099  00B0  28B2               	goto	u233_20
  1100  00B1                     u233_21:
  1101  00B1  28AC               	goto	i1l1151
  1102  00B2                     u233_20:
  1103  00B2  28B3               	goto	i1l2898
  1104                           	
  1105  00B3                     i1l1153:	
  1106                           	line	30
  1107                           	
  1108  00B3                     i1l2898:	
  1109                           ;UART.c: 30: TXREG = Byte;
  1110  00B3  0870               	movf	(i1SendByteSerially@Byte),w
  1111  00B4  0099               	movwf	(25)	;volatile
  1112                           	line	31
  1113                           	
  1114  00B5                     i1l1154:	
  1115  00B5  0008               	return
  1116                           	opt stack 0
  1117                           GLOBAL	__end_ofi1_SendByteSerially
  1118  00B6                     	__end_ofi1_SendByteSerially:
  1119 ;; =============== function i1_SendByteSerially ends ============
  1120                           
  1121                           	signat	i1_SendByteSerially,88
  1122                           psect	text293,local,class=CODE,delta=2
  1123                           global __ptext293
  1124  0000                     __ptext293:
  1125                           	global	btemp
  1126  007E                     	btemp set 07Eh
  1127                           
  1128                           	DABS	1,126,2	;btemp
  1129                           	global	wtemp0
  1130  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Wed Sep 23 20:24:57 2015

                           pc 0002                            _RD 04E0                            u40 0092  
                          u41 0091                            u50 009A                            u51 0099  
                          _WR 04E1                            fsr 0004                           l770 008B  
                         l771 008B                           l768 0087                           l769 008A  
                         _GIE 005F                           _RA0 0028                           _RB7 0037  
                         _ISR 0011                           _RX9 00C6                           _TX9 04C6  
                         _chr 0077                           fsr0 0004                          ?_ISR 0070  
                        l1151 00A0                          l1152 00A0                          l1160 009B  
                        l1153 00A7                          l1161 009D                          l1154 00A9  
                        l1148 004C                          l1164 005C                          l1157 0095  
                        l1165 0051                          l1158 0096                          l1166 0065  
                        l1159 0096                          l1167 0065                          l1960 003A  
                        l1970 0043                          l1962 003B                          l1954 0033  
                        l2930 0055                          l1972 0044                          l1964 003E  
                        l1956 0037                          l1980 008C                          l2932 005C  
                        l2940 007D                          l1974 0045                          l1966 003F  
                        l1958 0039                          l1982 0092                          l2926 0050  
                        l2950 0087                          l2942 007E                          l2934 0079  
                        l1976 0048                          l1968 0040                          l1984 009B  
                        l2928 0051                          l2944 0081                          l2936 007A  
                        l1978 004B                          l1986 009D                          l2946 0082  
                        l2938 007C                          l2892 009F                          l2948 0085  
                        l2894 00A7                          STR_1 006C                          _BRGH 04C2  
                        _CREN 00C4                          u2320 00A6                          u2321 00A5  
                        u2350 0064                          u2351 0063                          _PEIE 005E  
                        _RCIE 0465                          _RCIF 0065                          _OERR 00C1  
                        _SPEN 00C7                          _SREN 00C5                          _TXIE 0464  
                        _WREN 04E2                          _TXEN 04C5                          _TXIF 0064  
                        _SYNC 04C4                          _main 0079                          btemp 007E  
                        start 0010                         ??_ISR 0071                         ?_main 0070  
                       _EEADR 009B                         _CARRY 0018                         i1l381 0028  
                       i1l382 001C                         i1l383 0028                         _RCREG 001A  
                       _SPBRG 0099                         _TXREG 0019            _SendStringSerially 004D  
                       pclath 000A           ?_SendStringSerially 0070                         status 0003  
                       wtemp0 007E                  __end_of_main 008C              __end_of_InitUART 004D  
        ??_SendStringSerially 0020                        ??_main 0077                        _EEDATA 009A  
          i1_SendByteSerially 00AA                        _EECON1 009C                        _EECON2 009D  
                      i1l1151 00AC                        i1l1152 00AC                        i1l1153 00B3  
                      i1l1154 00B5                        i1l2880 0011                        i1l2890 0024  
                      i1l2882 0015                        i1l2884 001A                        i1l2886 001E  
                      i1l2896 00AB                        i1l2888 0022                        i1l2898 00B3  
                      u230_20 0015                        u230_21 0014                        u231_20 001A  
                      u231_21 0019                        u233_20 00B2                        u233_21 00B1  
                      _TRISA0 0428                        _TRISB1 0431                        _TRISB2 0432  
                      _TRISB7 0437           ?i1_SendByteSerially 0070        i1SendByteSerially@Byte 0070  
        ??i1_SendByteSerially 0070      __end_of_SendByteSerially 00AA                        saved_w 007E  
 __end_of_ReceiveByteSerially 009E                __pcstackCOMMON 0070          SendByteSerially@Byte 0076  
                   ?_InitUART 0070                    __pmaintext 0079                    __pintentry 0004  
                  ??_InitUART 0076          SendStringSerially@st 0021                  __size_of_ISR 0022  
        end_of_initialization 00B7   __size_of_SendStringSerially 0019             ?_SendByteSerially 0070  
          ??_SendByteSerially 0076   __size_ofi1_SendByteSerially 000C           start_initialization 00B6  
                 __end_of_ISR 0033             __size_of_InitUART 001A  __size_of_ReceiveByteSerially 0012  
                 __pbssCOMMON 0077                 __pcstackBANK0 0020                     __ptext290 009E  
                   __ptext291 0011                     __ptext292 00AA                     __ptext293 0000  
                   __ptext286 0000                     __ptext287 004D                     __ptext288 008C  
                   __ptext289 0033                     __pstrings 0066             interrupt_function 0004  
                 __stringbase 006B                      _InitUART 0033     __size_of_SendByteSerially 000C  
  __end_of_SendStringSerially 0066           _ReceiveByteSerially 008C                 __size_of_main 0013  
  __end_ofi1_SendByteSerially 00B6          ?_ReceiveByteSerially 0070                      intlevel1 0000  
                   stringcode 0066         ??_ReceiveByteSerially 0076                      stringdir 0066  
                    stringtab 0066              _SendByteSerially 009E  
