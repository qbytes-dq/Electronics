

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Tue Sep 22 21:10:05 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F628A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 79 "C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 79 "C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
    45  2007  FF22               	dw 0xFFEE & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFB & 0xFF7F & 0xFFFF & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_lcd_init
    48                           	FNCALL	_main,_timersON
    49                           	FNCALL	_main,_lcd_puts
    50                           	FNCALL	_main,_lcd_goto
    51                           	FNCALL	_main,_lcd_clear
    52                           	FNCALL	_main,_timersOFF
    53                           	FNCALL	_main,_doScale
    54                           	FNCALL	_main,_doFrequency
    55                           	FNCALL	_doFrequency,_lcd_goto
    56                           	FNCALL	_doFrequency,_lcd_putnumber
    57                           	FNCALL	_doFrequency,_lcd_puts
    58                           	FNCALL	_doFrequency,___lmul
    59                           	FNCALL	_doFrequency,_ultoa
    60                           	FNCALL	_lcd_init,_lcd_write
    61                           	FNCALL	_lcd_init,_lcd_clear
    62                           	FNCALL	_lcd_putnumber,___lldiv
    63                           	FNCALL	_lcd_putnumber,___llmod
    64                           	FNCALL	_lcd_putnumber,_lcd_putdigit
    65                           	FNCALL	_lcd_putnumber,___awmod
    66                           	FNCALL	_lcd_putnumber,_lcd_puts
    67                           	FNCALL	_lcd_putdigit,_lcd_write
    68                           	FNCALL	_lcd_clear,_lcd_write
    69                           	FNCALL	_lcd_puts,_lcd_write
    70                           	FNCALL	_lcd_goto,_lcd_write
    71                           	FNCALL	_timersOFF,___tmul
    72                           	FNCALL	_timersOFF,___lmul
    73                           	FNCALL	_timersON,_initTimer0
    74                           	FNCALL	_timersON,_initTimer1
    75                           	FNCALL	_timersON,_initTimer2
    76                           	FNCALL	_ultoa,___lldiv
    77                           	FNCALL	_ultoa,___llmod
    78                           	FNROOT	_main
    79                           	FNCALL	intlevel1,_ISR
    80                           	global	intlevel1
    81                           	FNROOT	intlevel1
    82                           	global	lcd_putnumber@F612
    83                           	global	_findScale
    84                           	global	_preScaleSelect
    85                           psect	idataBANK0,class=CODE,space=0,delta=2
    86                           global __pidataBANK0
    87  07E6                     __pidataBANK0:
    88                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\lcd.c"
    89                           	line	154
    90                           
    91                           ;initializer for lcd_putnumber@F612
    92  07E6  342E               	retlw	02Eh
    93  07E7  3400               	retlw	0
    94                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
    95                           	line	94
    96                           
    97                           ;initializer for _findScale
    98  07E8  3401               	retlw	01h
    99                           	line	50
   100                           
   101                           ;initializer for _preScaleSelect
   102  07E9  3407               	retlw	07h
   103                           	global	_HZ
   104                           psect	strings,class=STRING,delta=2
   105                           global __pstrings
   106  0200                     __pstrings:
   107                           ;	global	stringdir,stringtab,__stringbase
   108  0200                     stringtab:
   109                           ;	String table - string pointers are 1 byte each
   110  0200  1BFF               	btfsc	(btemp+1),7
   111  0201  2A0A               	ljmp	stringcode
   112  0202  1383               	bcf	status,7
   113  0203  187F               	btfsc	(btemp+1),0
   114  0204  1783               	bsf	status,7
   115  0205  0800               	movf	indf,w
   116  0206  0A84               	incf fsr
   117  0207  1903               skipnz
   118  0208  0AFF               incf btemp+1
   119  0209  0008               	return
   120  020A                     stringcode:stringdir:
      + 020A                     stringdir:	
   121  020A  3002               movlw high(stringdir)
   122  020B  008A               movwf pclath
   123  020C  0804               movf fsr,w
   124  020D  0A84               incf fsr
   125  020E  0782               	addwf pc
   126  020F                     __stringbase:
   127  020F  3400               	retlw	0
   128                           psect	strings
   129                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\lcd.c"
   130                           	line	49
   131  0210                     _HZ:
   132  0210  3420               	retlw	020h
   133  0211  3420               	retlw	020h
   134  0212  3420               	retlw	020h
   135  0213  3420               	retlw	020h
   136  0214  344B               	retlw	04Bh
   137  0215  344B               	retlw	04Bh
   138  0216  344B               	retlw	04Bh
   139  0217  344D               	retlw	04Dh
   140  0218  344D               	retlw	04Dh
   141  0219  344D               	retlw	04Dh
   142  021A  3447               	retlw	047h
   143  021B  3400               	retlw	0
   144                           	global	_prescaleExternalBits
   145                           psect	strings
   146                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
   147                           	line	64
   148  021C                     _prescaleExternalBits:
   149  021C  3400               	retlw	0
   150  021D  3400               	retlw	0
   151  021E  3400               	retlw	0
   152  021F  3400               	retlw	0
   153  0220  3400               	retlw	0
   154  0221  3400               	retlw	0
   155  0222  3400               	retlw	0
   156  0223  3400               	retlw	0
   157  0224  3401               	retlw	01h
   158  0225  3402               	retlw	02h
   159  0226  3403               	retlw	03h
   160                           	global	_prescaleExternalShift
   161                           psect	strings
   162                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
   163                           	line	65
   164  0227                     _prescaleExternalShift:
   165  0227  3400               	retlw	0
   166  0228  3400               	retlw	0
   167  0229  3400               	retlw	0
   168  022A  3400               	retlw	0
   169  022B  3400               	retlw	0
   170  022C  3400               	retlw	0
   171  022D  3400               	retlw	0
   172  022E  3400               	retlw	0
   173  022F  3406               	retlw	06h
   174  0230  3407               	retlw	07h
   175  0231  3408               	retlw	08h
   176                           	global	_prescaleInternalBits
   177                           psect	strings
   178                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
   179                           	line	62
   180  0232                     _prescaleInternalBits:
   181  0232  3400               	retlw	0
   182  0233  3401               	retlw	01h
   183  0234  3402               	retlw	02h
   184  0235  3403               	retlw	03h
   185  0236  3404               	retlw	04h
   186  0237  3405               	retlw	05h
   187  0238  3406               	retlw	06h
   188  0239  3407               	retlw	07h
   189  023A  3402               	retlw	02h
   190  023B  3402               	retlw	02h
   191  023C  3402               	retlw	02h
   192                           	global	_FREQ
   193                           psect	strings
   194                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
   195                           	line	92
   196  023D                     _FREQ:
   197  023D  3450               	retlw	050h
   198                           	global	_SCALE
   199                           psect	strings
   200                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
   201                           	line	93
   202  023E                     _SCALE:
   203  023E  340A               	retlw	0Ah
   204                           	global	_noinput
   205                           psect	strings
   206                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
   207                           	line	43
   208  023F                     _noinput:
   209  023F  342D               	retlw	02Dh
   210  0240  342D               	retlw	02Dh
   211  0241  342D               	retlw	02Dh
   212  0242  343E               	retlw	03Eh
   213  0243  344E               	retlw	04Eh
   214  0244  346F               	retlw	06Fh
   215  0245  3420               	retlw	020h
   216  0246  3469               	retlw	069h
   217  0247  346E               	retlw	06Eh
   218  0248  3470               	retlw	070h
   219  0249  3475               	retlw	075h
   220  024A  3474               	retlw	074h
   221  024B  343C               	retlw	03Ch
   222  024C  342D               	retlw	02Dh
   223  024D  342D               	retlw	02Dh
   224  024E  342D               	retlw	02Dh
   225  024F  3400               	retlw	0
   226                           	global	_version
   227                           psect	strings
   228                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
   229                           	line	42
   230  0250                     _version:
   231  0250  3448               	retlw	048h
   232  0251  347A               	retlw	07Ah
   233  0252  3420               	retlw	020h
   234  0253  3443               	retlw	043h
   235  0254  346F               	retlw	06Fh
   236  0255  3475               	retlw	075h
   237  0256  346E               	retlw	06Eh
   238  0257  3474               	retlw	074h
   239  0258  3465               	retlw	065h
   240  0259  3472               	retlw	072h
   241  025A  3420               	retlw	020h
   242  025B  3476               	retlw	076h
   243  025C  3431               	retlw	031h
   244  025D  342E               	retlw	02Eh
   245  025E  3431               	retlw	031h
   246  025F  3468               	retlw	068h
   247  0260  3400               	retlw	0
   248                           	global	_bands
   249                           psect	strings
   250                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
   251                           	line	67
   252  0261                     _bands:
   253  0261  3499               	retlw	(STR_1-__stringbase)&0ffh
   254  0262  349C               	retlw	(STR_2-__stringbase)&0ffh
   255  0263  3496               	retlw	(STR_3-__stringbase)&0ffh
   256  0264  349F               	retlw	(STR_4-__stringbase)&0ffh
   257  0265  348A               	retlw	(STR_5-__stringbase)&0ffh
   258  0266  3493               	retlw	(STR_6-__stringbase)&0ffh
   259  0267  3490               	retlw	(STR_7-__stringbase)&0ffh
   260  0268  348D               	retlw	(STR_8-__stringbase)&0ffh
   261  0269  3487               	retlw	(STR_9-__stringbase)&0ffh
   262  026A  3400               	retlw	0
   263  026B  3400               	retlw	0
   264  026C  3400               	retlw	0
   265  026D  3400               	retlw	0
   266  026E  3400               	retlw	0
   267  026F  3400               	retlw	0
   268  0270  3400               	retlw	0
   269                           	global	_qbytes
   270                           psect	strings
   271                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
   272                           	line	41
   273  0271                     _qbytes:
   274  0271  3451               	retlw	051h
   275  0272  342D               	retlw	02Dh
   276  0273  3442               	retlw	042h
   277  0274  3479               	retlw	079h
   278  0275  3474               	retlw	074h
   279  0276  3465               	retlw	065h
   280  0277  3473               	retlw	073h
   281  0278  3420               	retlw	020h
   282  0279  3457               	retlw	057h
   283  027A  346F               	retlw	06Fh
   284  027B  3472               	retlw	072h
   285  027C  346C               	retlw	06Ch
   286  027D  3464               	retlw	064h
   287  027E  342E               	retlw	02Eh
   288  027F  3400               	retlw	0
   289                           	global	_prescaleInternalShift
   290                           psect	strings
   291                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
   292                           	line	63
   293  0280                     _prescaleInternalShift:
   294  0280  3401               	retlw	01h
   295  0281  3402               	retlw	02h
   296  0282  3403               	retlw	03h
   297  0283  3404               	retlw	04h
   298  0284  3405               	retlw	05h
   299  0285  3406               	retlw	06h
   300  0286  3407               	retlw	07h
   301  0287  3408               	retlw	08h
   302  0288  3403               	retlw	03h
   303  0289  3403               	retlw	03h
   304  028A  3403               	retlw	03h
   305                           	global	_HZ
   306                           	global	_prescaleExternalBits
   307                           	global	_prescaleExternalShift
   308                           	global	_prescaleInternalBits
   309                           	global	_FREQ
   310                           	global	_SCALE
   311                           	global	_noinput
   312                           	global	_version
   313                           	global	_bands
   314                           	global	_qbytes
   315                           	global	_prescaleInternalShift
   316                           	global	_TMR0cnt
   317                           	global	_divBy
   318                           	global	_number
   319                           	global	_preScaleValue
   320                           	global	_TMR1cnt
   321                           	global	_band
   322                           	global	_digit
   323                           	global	_sig
   324                           	global	_calcScaleValue
   325                           	global	_buffer
   326                           	global	_CMCON
   327  001F                     _CMCON	set	31
   328                           	global	_INTCON
   329  000B                     _INTCON	set	11
   330                           	global	_T1CON
   331  0010                     _T1CON	set	16
   332                           	global	_T2CON
   333  0012                     _T2CON	set	18
   334                           	global	_TMR0
   335  0001                     _TMR0	set	1
   336                           	global	_TMR1H
   337  000F                     _TMR1H	set	15
   338                           	global	_TMR1L
   339  000E                     _TMR1L	set	14
   340                           	global	_CARRY
   341  0018                     _CARRY	set	24
   342                           	global	_GIE
   343  005F                     _GIE	set	95
   344                           	global	_RA0
   345  0028                     _RA0	set	40
   346                           	global	_RA1
   347  0029                     _RA1	set	41
   348                           	global	_RA3
   349  002B                     _RA3	set	43
   350                           	global	_RB4
   351  0034                     _RB4	set	52
   352                           	global	_RB5
   353  0035                     _RB5	set	53
   354                           	global	_RB6
   355  0036                     _RB6	set	54
   356                           	global	_RB7
   357  0037                     _RB7	set	55
   358                           	global	_T0IE
   359  005D                     _T0IE	set	93
   360                           	global	_TMR0IF
   361  005A                     _TMR0IF	set	90
   362                           	global	_TMR1IF
   363  0060                     _TMR1IF	set	96
   364                           	global	_TMR2IF
   365  0061                     _TMR2IF	set	97
   366                           	global	_EEADR
   367  009B                     _EEADR	set	155
   368                           	global	_EECON1
   369  009C                     _EECON1	set	156
   370                           	global	_EECON2
   371  009D                     _EECON2	set	157
   372                           	global	_EEDATA
   373  009A                     _EEDATA	set	154
   374                           	global	_OPTION_REG
   375  0081                     _OPTION_REG	set	129
   376                           	global	_PR2
   377  0092                     _PR2	set	146
   378                           	global	_TRISA
   379  0085                     _TRISA	set	133
   380                           	global	_TRISB
   381  0086                     _TRISB	set	134
   382                           	global	_RD
   383  04E0                     _RD	set	1248
   384                           	global	_TMR1IE
   385  0460                     _TMR1IE	set	1120
   386                           	global	_TMR2IE
   387  0461                     _TMR2IE	set	1121
   388                           	global	_WR
   389  04E1                     _WR	set	1249
   390                           	global	_WREN
   391  04E2                     _WREN	set	1250
   392                           	global	_PORTB
   393  0006                     _PORTB	set	6
   394                           	
   395  028B                     STR_12:	
   396  028B  3420               	retlw	32	;' '
   397  028C  3420               	retlw	32	;' '
   398  028D  3420               	retlw	32	;' '
   399  028E  3400               	retlw	0
   400                           psect	strings
   401                           	
   402  028F                     STR_11:	
   403  028F  3420               	retlw	32	;' '
   404  0290  3431               	retlw	49	;'1'
   405  0291  342F               	retlw	47	;'/'
   406  0292  3400               	retlw	0
   407                           psect	strings
   408                           	
   409  0293                     STR_15:	
   410  0293  3448               	retlw	72	;'H'
   411  0294  347A               	retlw	122	;'z'
   412  0295  3400               	retlw	0
   413                           psect	strings
   414                           	
   415  0296                     STR_9:	
   416  0296  343F               	retlw	63	;'?'
   417  0297  343F               	retlw	63	;'?'
   418  0298  3400               	retlw	0
   419                           psect	strings
   420                           	
   421  0299                     STR_5:	
   422  0299  3420               	retlw	32	;' '
   423  029A  3448               	retlw	72	;'H'
   424  029B  3400               	retlw	0
   425                           psect	strings
   426                           	
   427  029C                     STR_8:	
   428  029C  3453               	retlw	83	;'S'
   429  029D  3448               	retlw	72	;'H'
   430  029E  3400               	retlw	0
   431                           psect	strings
   432                           	
   433  029F                     STR_7:	
   434  029F  3455               	retlw	85	;'U'
   435  02A0  3448               	retlw	72	;'H'
   436  02A1  3400               	retlw	0
   437                           psect	strings
   438                           	
   439  02A2                     STR_6:	
   440  02A2  3456               	retlw	86	;'V'
   441  02A3  3448               	retlw	72	;'H'
   442  02A4  3400               	retlw	0
   443                           psect	strings
   444                           	
   445  02A5                     STR_3:	
   446  02A5  3420               	retlw	32	;' '
   447  02A6  344C               	retlw	76	;'L'
   448  02A7  3400               	retlw	0
   449                           psect	strings
   450                           	
   451  02A8                     STR_1:	
   452  02A8  3445               	retlw	69	;'E'
   453  02A9  344C               	retlw	76	;'L'
   454  02AA  3400               	retlw	0
   455                           psect	strings
   456                           	
   457  02AB                     STR_2:	
   458  02AB  3456               	retlw	86	;'V'
   459  02AC  344C               	retlw	76	;'L'
   460  02AD  3400               	retlw	0
   461                           psect	strings
   462                           	
   463  02AE                     STR_4:	
   464  02AE  3420               	retlw	32	;' '
   465  02AF  344D               	retlw	77	;'M'
   466  02B0  3400               	retlw	0
   467                           psect	strings
   468                           	
   469  02B1                     STR_10:	
   470  02B1  3446               	retlw	70	;'F'
   471  02B2  3400               	retlw	0
   472                           psect	strings
   473  028D                     STR_13	equ	STR_12+2
   474  028D                     STR_14	equ	STR_12+2
   475                           	file	"C:\Users\davidq\AppData\Local\Temp\s170."
   476                           	line	#
   477                           psect cinit,class=CODE,delta=2
   478                           global start_initialization
   479  078B                     start_initialization:
   480                           
   481                           psect	bssCOMMON,class=COMMON,space=1
   482                           global __pbssCOMMON
   483  0077                     __pbssCOMMON:
   484  0077                     _calcScaleValue:
   485  0077                            ds      3
   486                           
   487                           psect	bssBANK0,class=BANK0,space=1
   488                           global __pbssBANK0
   489  0041                     __pbssBANK0:
   490  0041                     _TMR0cnt:
   491  0041                            ds      4
   492                           
   493  0045                     _divBy:
   494  0045                            ds      4
   495                           
   496  0049                     _number:
   497  0049                            ds      4
   498                           
   499  004D                     _preScaleValue:
   500  004D                            ds      3
   501                           
   502  0050                     _TMR1cnt:
   503  0050                            ds      2
   504                           
   505  0052                     _band:
   506  0052                            ds      1
   507                           
   508  0053                     _digit:
   509  0053                            ds      1
   510                           
   511  0054                     _sig:
   512  0054                            ds      1
   513                           
   514  0055                     _buffer:
   515  0055                            ds      10
   516                           
   517                           psect	dataBANK0,class=BANK0,space=1
   518                           global __pdataBANK0
   519  005F                     __pdataBANK0:
   520                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\lcd.c"
   521                           	line	154
   522  005F                     lcd_putnumber@F612:
   523  005F                            ds      2
   524                           
   525                           psect	dataBANK0
   526                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
   527                           	line	94
   528  0061                     _findScale:
   529  0061                            ds      1
   530                           
   531                           psect	dataBANK0
   532                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
   533                           	line	50
   534  0062                     _preScaleSelect:
   535  0062                            ds      1
   536                           
   537                           psect clrtext,class=CODE,delta=2
   538                           global clear_ram
   539                           ;	Called with FSR containing the base address, and
   540                           ;	W with the last address+1
   541  07CE                     clear_ram:
   542  07CE  0064               	clrwdt			;clear the watchdog before getting into this loop
   543  07CF                     clrloop:
   544  07CF  0180               	clrf	indf		;clear RAM location pointed to by FSR
   545  07D0  0A84               	incf	fsr,f		;increment pointer
   546  07D1  0604               	xorwf	fsr,w		;XOR with final address
   547  07D2  1903               	btfsc	status,2	;have we reached the end yet?
   548  07D3  3400               	retlw	0		;all done for this memory range, return
   549  07D4  0604               	xorwf	fsr,w		;XOR again to restore value
   550  07D5  2FCF               	goto	clrloop		;do the next byte
   551                           
   552                           ; Clear objects allocated to COMMON
   553                           psect cinit,class=CODE,delta=2
   554  078B  01F7               	clrf	((__pbssCOMMON)+0)&07Fh
   555  078C  01F8               	clrf	((__pbssCOMMON)+1)&07Fh
   556  078D  01F9               	clrf	((__pbssCOMMON)+2)&07Fh
   557                           ; Clear objects allocated to BANK0
   558                           psect cinit,class=CODE,delta=2
   559  078E  1383               	bcf	status, 7	;select IRP bank0
   560  078F  3041               	movlw	low(__pbssBANK0)
   561  0790  0084               	movwf	fsr
   562  0791  305F               	movlw	low((__pbssBANK0)+01Eh)
   563  0792  27CE               	fcall	clear_ram
   564                           ; Initialize objects allocated to BANK0
   565                           	global __pidataBANK0
   566                           psect cinit,class=CODE,delta=2
   567  0793  27E6               	fcall	__pidataBANK0+0		;fetch initializer
   568  0794  00DF               	movwf	__pdataBANK0+0&07fh		
   569  0795  27E7               	fcall	__pidataBANK0+1		;fetch initializer
   570  0796  00E0               	movwf	__pdataBANK0+1&07fh		
   571  0797  27E8               	fcall	__pidataBANK0+2		;fetch initializer
   572  0798  00E1               	movwf	__pdataBANK0+2&07fh		
   573  0799  27E9               	fcall	__pidataBANK0+3		;fetch initializer
   574  079A  00E2               	movwf	__pdataBANK0+3&07fh		
   575                           psect cinit,class=CODE,delta=2
   576                           global end_of_initialization
   577                           
   578                           ;End of C runtime variable initialization code
   579                           
   580  079B                     end_of_initialization:
   581  079B  0183               clrf status
   582  079C  2D7F               ljmp _main	;jump to C main() function
   583                           psect	cstackCOMMON,class=COMMON,space=1
   584                           global __pcstackCOMMON
   585  0070                     __pcstackCOMMON:
   586                           	global	?_lcd_goto
   587  0070                     ?_lcd_goto:	; 0 bytes @ 0x0
   588                           	global	?_lcd_init
   589  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   590                           	global	?_lcd_clear
   591  0070                     ?_lcd_clear:	; 0 bytes @ 0x0
   592                           	global	?_lcd_write
   593  0070                     ?_lcd_write:	; 0 bytes @ 0x0
   594                           	global	?_init
   595  0070                     ?_init:	; 0 bytes @ 0x0
   596                           	global	?_initTimer0
   597  0070                     ?_initTimer0:	; 0 bytes @ 0x0
   598                           	global	?_initTimer1
   599  0070                     ?_initTimer1:	; 0 bytes @ 0x0
   600                           	global	?_initTimer2
   601  0070                     ?_initTimer2:	; 0 bytes @ 0x0
   602                           	global	?_ISR
   603  0070                     ?_ISR:	; 0 bytes @ 0x0
   604                           	global	??_ISR
   605  0070                     ??_ISR:	; 0 bytes @ 0x0
   606                           	global	?_doScale
   607  0070                     ?_doScale:	; 0 bytes @ 0x0
   608                           	global	?_doFrequency
   609  0070                     ?_doFrequency:	; 0 bytes @ 0x0
   610                           	global	?_timersON
   611  0070                     ?_timersON:	; 0 bytes @ 0x0
   612                           	global	?_timersOFF
   613  0070                     ?_timersOFF:	; 0 bytes @ 0x0
   614                           	global	?_main
   615  0070                     ?_main:	; 0 bytes @ 0x0
   616                           	global	?_lcd_putdigit
   617  0070                     ?_lcd_putdigit:	; 0 bytes @ 0x0
   618  0070                     	ds	4
   619                           	global	??_lcd_write
   620  0074                     ??_lcd_write:	; 0 bytes @ 0x4
   621                           	global	??_init
   622  0074                     ??_init:	; 0 bytes @ 0x4
   623                           	global	??_initTimer1
   624  0074                     ??_initTimer1:	; 0 bytes @ 0x4
   625                           	global	??_initTimer2
   626  0074                     ??_initTimer2:	; 0 bytes @ 0x4
   627                           	global	??_timersON
   628  0074                     ??_timersON:	; 0 bytes @ 0x4
   629                           	global	??___lmul
   630  0074                     ??___lmul:	; 0 bytes @ 0x4
   631                           	global	??___llmod
   632  0074                     ??___llmod:	; 0 bytes @ 0x4
   633                           	global	??___lldiv
   634  0074                     ??___lldiv:	; 0 bytes @ 0x4
   635                           	global	??___awmod
   636  0074                     ??___awmod:	; 0 bytes @ 0x4
   637                           	global	??___tmul
   638  0074                     ??___tmul:	; 0 bytes @ 0x4
   639                           	global	___tmul@product
   640  0074                     ___tmul@product:	; 3 bytes @ 0x4
   641  0074                     	ds	1
   642                           	global	___llmod@counter
   643  0075                     ___llmod@counter:	; 1 bytes @ 0x5
   644                           	global	___awmod@counter
   645  0075                     ___awmod@counter:	; 1 bytes @ 0x5
   646  0075                     	ds	1
   647                           	global	??_ultoa
   648  0076                     ??_ultoa:	; 0 bytes @ 0x6
   649                           	global	lcd_write@c
   650  0076                     lcd_write@c:	; 1 bytes @ 0x6
   651                           	global	___awmod@sign
   652  0076                     ___awmod@sign:	; 1 bytes @ 0x6
   653  0076                     	ds	1
   654                           	global	??_lcd_goto
   655  0077                     ??_lcd_goto:	; 0 bytes @ 0x7
   656                           	global	??_lcd_puts
   657  0077                     ??_lcd_puts:	; 0 bytes @ 0x7
   658                           	global	??_lcd_putdigit
   659  0077                     ??_lcd_putdigit:	; 0 bytes @ 0x7
   660                           psect	cstackBANK0,class=BANK0,space=1
   661                           global __pcstackBANK0
   662  0020                     __pcstackBANK0:
   663                           	global	?_lcd_puts
   664  0020                     ?_lcd_puts:	; 0 bytes @ 0x0
   665                           	global	??_lcd_clear
   666  0020                     ??_lcd_clear:	; 0 bytes @ 0x0
   667                           	global	??_initTimer0
   668  0020                     ??_initTimer0:	; 0 bytes @ 0x0
   669                           	global	??_doScale
   670  0020                     ??_doScale:	; 0 bytes @ 0x0
   671                           	global	?___awmod
   672  0020                     ?___awmod:	; 2 bytes @ 0x0
   673                           	global	?___tmul
   674  0020                     ?___tmul:	; 3 bytes @ 0x0
   675                           	global	?___lmul
   676  0020                     ?___lmul:	; 4 bytes @ 0x0
   677                           	global	?___llmod
   678  0020                     ?___llmod:	; 4 bytes @ 0x0
   679                           	global	?___lldiv
   680  0020                     ?___lldiv:	; 4 bytes @ 0x0
   681                           	global	lcd_goto@pos
   682  0020                     lcd_goto@pos:	; 1 bytes @ 0x0
   683                           	global	lcd_putdigit@c
   684  0020                     lcd_putdigit@c:	; 1 bytes @ 0x0
   685                           	global	lcd_puts@s
   686  0020                     lcd_puts@s:	; 2 bytes @ 0x0
   687                           	global	___awmod@divisor
   688  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
   689                           	global	___tmul@multiplier
   690  0020                     ___tmul@multiplier:	; 3 bytes @ 0x0
   691                           	global	___lmul@multiplier
   692  0020                     ___lmul@multiplier:	; 4 bytes @ 0x0
   693                           	global	___llmod@divisor
   694  0020                     ___llmod@divisor:	; 4 bytes @ 0x0
   695                           	global	___lldiv@divisor
   696  0020                     ___lldiv@divisor:	; 4 bytes @ 0x0
   697  0020                     	ds	2
   698                           	global	??_lcd_init
   699  0022                     ??_lcd_init:	; 0 bytes @ 0x2
   700                           	global	___awmod@dividend
   701  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
   702  0022                     	ds	1
   703                           	global	___tmul@multiplicand
   704  0023                     ___tmul@multiplicand:	; 3 bytes @ 0x3
   705  0023                     	ds	1
   706                           	global	___lmul@multiplicand
   707  0024                     ___lmul@multiplicand:	; 4 bytes @ 0x4
   708                           	global	___llmod@dividend
   709  0024                     ___llmod@dividend:	; 4 bytes @ 0x4
   710                           	global	___lldiv@dividend
   711  0024                     ___lldiv@dividend:	; 4 bytes @ 0x4
   712  0024                     	ds	4
   713                           	global	___lmul@product
   714  0028                     ___lmul@product:	; 4 bytes @ 0x8
   715                           	global	___lldiv@quotient
   716  0028                     ___lldiv@quotient:	; 4 bytes @ 0x8
   717  0028                     	ds	4
   718                           	global	??_timersOFF
   719  002C                     ??_timersOFF:	; 0 bytes @ 0xC
   720                           	global	___lldiv@counter
   721  002C                     ___lldiv@counter:	; 1 bytes @ 0xC
   722  002C                     	ds	1
   723                           	global	?_lcd_putnumber
   724  002D                     ?_lcd_putnumber:	; 0 bytes @ 0xD
   725                           	global	?_ultoa
   726  002D                     ?_ultoa:	; 1 bytes @ 0xD
   727                           	global	lcd_putnumber@number
   728  002D                     lcd_putnumber@number:	; 4 bytes @ 0xD
   729                           	global	ultoa@val
   730  002D                     ultoa@val:	; 4 bytes @ 0xD
   731  002D                     	ds	4
   732                           	global	??_lcd_putnumber
   733  0031                     ??_lcd_putnumber:	; 0 bytes @ 0x11
   734                           	global	ultoa@base
   735  0031                     ultoa@base:	; 2 bytes @ 0x11
   736  0031                     	ds	2
   737                           	global	lcd_putnumber@displayHZ
   738  0033                     lcd_putnumber@displayHZ:	; 2 bytes @ 0x13
   739                           	global	ultoa@v
   740  0033                     ultoa@v:	; 4 bytes @ 0x13
   741  0033                     	ds	2
   742                           	global	lcd_putnumber@loop
   743  0035                     lcd_putnumber@loop:	; 2 bytes @ 0x15
   744  0035                     	ds	2
   745                           	global	ultoa@c
   746  0037                     ultoa@c:	; 1 bytes @ 0x17
   747  0037                     	ds	1
   748                           	global	ultoa@buf
   749  0038                     ultoa@buf:	; 1 bytes @ 0x18
   750  0038                     	ds	1
   751                           	global	??_doFrequency
   752  0039                     ??_doFrequency:	; 0 bytes @ 0x19
   753  0039                     	ds	4
   754                           	global	doFrequency@pBands
   755  003D                     doFrequency@pBands:	; 1 bytes @ 0x1D
   756  003D                     	ds	1
   757                           	global	??_main
   758  003E                     ??_main:	; 0 bytes @ 0x1E
   759  003E                     	ds	3
   760 ;;Data sizes: Strings 40, constant 123, data 4, bss 33, persistent 0 stack 0
   761 ;;Auto spaces:   Size  Autos    Used
   762 ;; COMMON          14      7      10
   763 ;; BANK0           80     33      67
   764 ;; BANK1           80      0       0
   765 ;; BANK2           48      0       0
   766                           
   767 ;;
   768 ;; Pointer list with targets:
   769                           
   770 ;; ?___awmod	int  size(1) Largest target is 0
   771 ;;
   772 ;; ?___llmod	unsigned long  size(1) Largest target is 11
   773 ;;		 -> prescaleInternalShift(CODE[11]), 
   774 ;;
   775 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   776 ;;
   777 ;; ?___tmul	unsigned um size(1) Largest target is 0
   778 ;;
   779 ;; ?_ultoa	PTR unsigned char  size(1) Largest target is 10
   780 ;;		 -> buffer(BANK0[10]), 
   781 ;;
   782 ;; ?___lmul	unsigned long  size(1) Largest target is 0
   783 ;;
   784 ;; ultoa@buf	PTR unsigned char  size(1) Largest target is 10
   785 ;;		 -> buffer(BANK0[10]), 
   786 ;;
   787 ;; sp__ltoa	PTR unsigned char  size(1) Largest target is 0
   788 ;;
   789 ;; lcd_puts@s	PTR const unsigned char  size(2) Largest target is 17
   790 ;;		 -> STR_15(CODE[3]), STR_14(CODE[2]), STR_13(CODE[2]), lcd_putnumber@displayHZ(BANK0[2]), 
   791 ;;		 -> version(CODE[17]), qbytes(CODE[15]), STR_12(CODE[4]), buffer(BANK0[10]), 
   792 ;;		 -> STR_11(CODE[4]), STR_10(CODE[2]), noinput(CODE[17]), STR_9(CODE[3]), 
   793 ;;		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 
   794 ;;		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 
   795 ;;
   796 ;; sp__ultoa	PTR unsigned char  size(1) Largest target is 10
   797 ;;		 -> buffer(BANK0[10]), 
   798 ;;
   799 ;; doFrequency@pBands	PTR PTR unsigned char  size(1) Largest target is 16
   800 ;;		 -> bands(CODE[16]), 
   801 ;;
   802 ;; bands	const PTR const unsigned char [2][8] size(1) Largest target is 3
   803 ;;		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 
   804 ;;		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
   805 ;;		 -> STR_1(CODE[3]), 
   806 ;;
   807                           
   808                           
   809 ;;
   810 ;; Critical Paths under _main in COMMON
   811 ;;
   812 ;;   _doFrequency->_ultoa
   813 ;;   _lcd_init->_lcd_write
   814 ;;   _lcd_putnumber->___awmod
   815 ;;   _lcd_putdigit->_lcd_write
   816 ;;   _lcd_clear->_lcd_write
   817 ;;   _lcd_puts->_lcd_write
   818 ;;   _lcd_goto->_lcd_write
   819 ;;   _timersOFF->___tmul
   820 ;;   _ultoa->___llmod
   821 ;;
   822 ;; Critical Paths under _ISR in COMMON
   823 ;;
   824 ;;   None.
   825 ;;
   826 ;; Critical Paths under _main in BANK0
   827 ;;
   828 ;;   _main->_doFrequency
   829 ;;   _doFrequency->_ultoa
   830 ;;   _lcd_init->_lcd_clear
   831 ;;   _lcd_putnumber->___lldiv
   832 ;;   _timersOFF->___lmul
   833 ;;   _timersON->_initTimer0
   834 ;;   _ultoa->___lldiv
   835 ;;
   836 ;; Critical Paths under _ISR in BANK0
   837 ;;
   838 ;;   None.
   839 ;;
   840 ;; Critical Paths under _main in BANK1
   841 ;;
   842 ;;   None.
   843 ;;
   844 ;; Critical Paths under _ISR in BANK1
   845 ;;
   846 ;;   None.
   847 ;;
   848 ;; Critical Paths under _main in BANK2
   849 ;;
   850 ;;   None.
   851 ;;
   852 ;; Critical Paths under _ISR in BANK2
   853 ;;
   854 ;;   None.
   855                           
   856 ;;
   857 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   858 ;;
   859                           
   860 ;;
   861 ;;Call Graph Tables:
   862 ;;
   863 ;; ---------------------------------------------------------------------------------
   864 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   865 ;; ---------------------------------------------------------------------------------
   866 ;; (0) _main                                                 3     3      0    3295
   867 ;;                                             30 BANK0      3     3      0
   868 ;;                               _init
   869 ;;                           _lcd_init
   870 ;;                           _timersON
   871 ;;                           _lcd_puts
   872 ;;                           _lcd_goto
   873 ;;                          _lcd_clear
   874 ;;                          _timersOFF
   875 ;;                            _doScale
   876 ;;                        _doFrequency
   877 ;; ---------------------------------------------------------------------------------
   878 ;; (1) _doFrequency                                          5     5      0    2617
   879 ;;                                             25 BANK0      5     5      0
   880 ;;                           _lcd_goto
   881 ;;                      _lcd_putnumber
   882 ;;                           _lcd_puts
   883 ;;                             ___lmul
   884 ;;                              _ultoa
   885 ;; ---------------------------------------------------------------------------------
   886 ;; (1) _lcd_init                                             3     3      0     124
   887 ;;                                              2 BANK0      3     3      0
   888 ;;                          _lcd_write
   889 ;;                          _lcd_clear
   890 ;; ---------------------------------------------------------------------------------
   891 ;; (2) _lcd_putnumber                                       10     6      4    1387
   892 ;;                                             13 BANK0     10     6      4
   893 ;;                            ___lldiv
   894 ;;                            ___llmod
   895 ;;                       _lcd_putdigit
   896 ;;                            ___awmod
   897 ;;                           _lcd_puts
   898 ;; ---------------------------------------------------------------------------------
   899 ;; (3) _lcd_putdigit                                         1     1      0      93
   900 ;;                                              0 BANK0      1     1      0
   901 ;;                          _lcd_write
   902 ;; ---------------------------------------------------------------------------------
   903 ;; (1) _lcd_clear                                            2     2      0      62
   904 ;;                                              0 BANK0      2     2      0
   905 ;;                          _lcd_write
   906 ;; ---------------------------------------------------------------------------------
   907 ;; (2) _lcd_puts                                             2     0      2     127
   908 ;;                                              0 BANK0      2     0      2
   909 ;;                          _lcd_write
   910 ;; ---------------------------------------------------------------------------------
   911 ;; (2) _lcd_goto                                             1     1      0      93
   912 ;;                                              0 BANK0      1     1      0
   913 ;;                          _lcd_write
   914 ;; ---------------------------------------------------------------------------------
   915 ;; (3) _lcd_write                                            3     3      0      62
   916 ;;                                              4 COMMON     3     3      0
   917 ;; ---------------------------------------------------------------------------------
   918 ;; (1) _timersOFF                                           10    10      0     272
   919 ;;                                             12 BANK0     10    10      0
   920 ;;                             ___tmul
   921 ;;                             ___lmul
   922 ;; ---------------------------------------------------------------------------------
   923 ;; (1) _timersON                                             0     0      0       0
   924 ;;                         _initTimer0
   925 ;;                         _initTimer1
   926 ;;                         _initTimer2
   927 ;; ---------------------------------------------------------------------------------
   928 ;; (2) _ultoa                                               13     7      6     837
   929 ;;                                              6 COMMON     1     1      0
   930 ;;                                             13 BANK0     12     6      6
   931 ;;                            ___lldiv
   932 ;;                            ___llmod
   933 ;; ---------------------------------------------------------------------------------
   934 ;; (2) ___tmul                                               9     3      6     136
   935 ;;                                              4 COMMON     3     3      0
   936 ;;                                              0 BANK0      6     0      6
   937 ;; ---------------------------------------------------------------------------------
   938 ;; (3) ___awmod                                              7     3      4     433
   939 ;;                                              4 COMMON     3     3      0
   940 ;;                                              0 BANK0      4     0      4
   941 ;; ---------------------------------------------------------------------------------
   942 ;; (3) ___lldiv                                             14     6      8     241
   943 ;;                                              4 COMMON     1     1      0
   944 ;;                                              0 BANK0     13     5      8
   945 ;; ---------------------------------------------------------------------------------
   946 ;; (3) ___llmod                                             10     2      8     159
   947 ;;                                              4 COMMON     2     2      0
   948 ;;                                              0 BANK0      8     0      8
   949 ;; ---------------------------------------------------------------------------------
   950 ;; (2) ___lmul                                              13     5      8     136
   951 ;;                                              4 COMMON     1     1      0
   952 ;;                                              0 BANK0     12     4      8
   953 ;; ---------------------------------------------------------------------------------
   954 ;; (2) _doScale                                              4     4      0       0
   955 ;;                                              0 BANK0      4     4      0
   956 ;; ---------------------------------------------------------------------------------
   957 ;; (2) _initTimer2                                           0     0      0       0
   958 ;; ---------------------------------------------------------------------------------
   959 ;; (2) _initTimer1                                           0     0      0       0
   960 ;; ---------------------------------------------------------------------------------
   961 ;; (3) _initTimer0                                           4     4      0       0
   962 ;;                                              0 BANK0      4     4      0
   963 ;; ---------------------------------------------------------------------------------
   964 ;; (1) _init                                                 0     0      0       0
   965 ;; ---------------------------------------------------------------------------------
   966 ;; Estimated maximum stack depth 3
   967 ;; ---------------------------------------------------------------------------------
   968 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   969 ;; ---------------------------------------------------------------------------------
   970 ;; (5) _ISR                                                  4     4      0       0
   971 ;;                                              0 COMMON     4     4      0
   972 ;; ---------------------------------------------------------------------------------
   973 ;; Estimated maximum stack depth 5
   974 ;; ---------------------------------------------------------------------------------
   975                           
   976 ;; Call Graph Graphs:
   977                           
   978 ;; _main (ROOT)
   979 ;;   _init
   980 ;;   _lcd_init
   981 ;;     _lcd_write
   982 ;;     _lcd_clear
   983 ;;       _lcd_write
   984 ;;   _timersON
   985 ;;     _initTimer0
   986 ;;     _initTimer1
   987 ;;     _initTimer2
   988 ;;   _lcd_puts
   989 ;;     _lcd_write
   990 ;;   _lcd_goto
   991 ;;     _lcd_write
   992 ;;   _lcd_clear
   993 ;;     _lcd_write
   994 ;;   _timersOFF
   995 ;;     ___tmul
   996 ;;     ___lmul
   997 ;;   _doScale
   998 ;;   _doFrequency
   999 ;;     _lcd_goto
  1000 ;;       _lcd_write
  1001 ;;     _lcd_putnumber
  1002 ;;       ___lldiv
  1003 ;;       ___llmod
  1004 ;;       _lcd_putdigit
  1005 ;;         _lcd_write
  1006 ;;       ___awmod
  1007 ;;       _lcd_puts
  1008 ;;         _lcd_write
  1009 ;;     _lcd_puts
  1010 ;;       _lcd_write
  1011 ;;     ___lmul
  1012 ;;     _ultoa
  1013 ;;       ___lldiv
  1014 ;;       ___llmod
  1015 ;;
  1016 ;; _ISR (ROOT)
  1017 ;;
  1018                           
  1019 ;; Address spaces:
  1020                           
  1021 ;;Name               Size   Autos  Total    Cost      Usage
  1022 ;;SFR3                 0      0       0       4        0.0%
  1023 ;;BITSFR3              0      0       0       4        0.0%
  1024 ;;BANK2               30      0       0       9        0.0%
  1025 ;;BITBANK2            30      0       0       8        0.0%
  1026 ;;SFR2                 0      0       0       5        0.0%
  1027 ;;BITSFR2              0      0       0       5        0.0%
  1028 ;;SFR1                 0      0       0       2        0.0%
  1029 ;;BITSFR1              0      0       0       2        0.0%
  1030 ;;BANK1               50      0       0       7        0.0%
  1031 ;;BITBANK1            50      0       0       6        0.0%
  1032 ;;CODE                 0      0       0       0        0.0%
  1033 ;;DATA                 0      0      51      10        0.0%
  1034 ;;ABS                  0      0      4D       4        0.0%
  1035 ;;NULL                 0      0       0       0        0.0%
  1036 ;;STACK                0      0       4       2        0.0%
  1037 ;;BANK0               50     21      43       3       83.8%
  1038 ;;BITBANK0            50      0       0       5        0.0%
  1039 ;;SFR0                 0      0       0       1        0.0%
  1040 ;;BITSFR0              0      0       0       1        0.0%
  1041 ;;COMMON               E      7       A       1       71.4%
  1042 ;;BITCOMMON            E      0       0       0        0.0%
  1043 ;;EEDATA              80      0       0       0        0.0%
  1044                           
  1045                           	global	_main
  1046                           psect	maintext,global,class=CODE,delta=2
  1047                           global __pmaintext
  1048  057F                     __pmaintext:
  1049                           
  1050 ;; *************** function _main *****************
  1051 ;; Defined at:
  1052 ;;		line 419 in file "C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;		None
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;		None
  1057 ;; Return value:  Size  Location     Type
  1058 ;;		None               void
  1059 ;; Registers used:
  1060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1061 ;; Tracked objects:
  1062 ;;		On entry : 17F/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1066 ;;      Params:         0       0       0       0
  1067 ;;      Locals:         0       0       0       0
  1068 ;;      Temps:          0       3       0       0
  1069 ;;      Totals:         0       3       0       0
  1070 ;;Total ram usage:        3 bytes
  1071 ;; Hardware stack levels required when called:    5
  1072 ;; This function calls:
  1073 ;;		_init
  1074 ;;		_lcd_init
  1075 ;;		_timersON
  1076 ;;		_lcd_puts
  1077 ;;		_lcd_goto
  1078 ;;		_lcd_clear
  1079 ;;		_timersOFF
  1080 ;;		_doScale
  1081 ;;		_doFrequency
  1082 ;; This function is called by:
  1083 ;;		Startup code after reset
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           psect	maintext
  1087                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
  1088                           	line	419
  1089                           	global	__size_of_main
  1090  005A                     	__size_of_main	equ	__end_of_main-_main
  1091                           	
  1092  057F                     _main:	
  1093                           	opt	stack 3
  1094                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1095                           	line	422
  1096                           	
  1097  057F                     l3924:	
  1098                           ;blink.c: 422: init();
  1099  057F  27C4               	fcall	_init
  1100                           	line	423
  1101                           ;blink.c: 423: lcd_init();
  1102  0580  266F               	fcall	_lcd_init
  1103                           	line	425
  1104                           	
  1105  0581                     l3926:	
  1106                           ;blink.c: 425: timersON();
  1107  0581  2777               	fcall	_timersON
  1108                           	line	427
  1109                           	
  1110  0582                     l3928:	
  1111                           ;blink.c: 427: lcd_puts(&qbytes);
  1112  0582  3062               	movlw	low((_qbytes-__stringbase))
  1113  0583  1283               	bcf	status, 5	;RP0=0, select bank0
  1114  0584  1303               	bcf	status, 6	;RP1=0, select bank0
  1115  0585  00A0               	movwf	(?_lcd_puts)
  1116  0586  3080               	movlw	80h
  1117  0587  00A1               	movwf	(?_lcd_puts+1)
  1118  0588  2758               	fcall	_lcd_puts
  1119                           	line	429
  1120                           	
  1121  0589                     l3930:	
  1122                           ;blink.c: 429: lcd_goto(0x40);
  1123  0589  3040               	movlw	(040h)
  1124  058A  27DE               	fcall	_lcd_goto
  1125                           	line	430
  1126                           	
  1127  058B                     l3932:	
  1128                           ;blink.c: 430: lcd_puts(&version);
  1129  058B  3041               	movlw	low((_version-__stringbase))
  1130  058C  1283               	bcf	status, 5	;RP0=0, select bank0
  1131  058D  1303               	bcf	status, 6	;RP1=0, select bank0
  1132  058E  00A0               	movwf	(?_lcd_puts)
  1133  058F  3080               	movlw	80h
  1134  0590  00A1               	movwf	(?_lcd_puts+1)
  1135  0591  2758               	fcall	_lcd_puts
  1136                           	line	432
  1137                           	
  1138  0592                     l3934:	
  1139                           ;blink.c: 432: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1140                           	opt asmopt_off
  1141  0592  3033               movlw  51
  1142  0593  1283               	bcf	status, 5	;RP0=0, select bank0
  1143  0594  1303               	bcf	status, 6	;RP1=0, select bank0
  1144  0595  00C0               movwf	((??_main+0)+0+2),f
  1145  0596  30BC               movlw	188
  1146  0597  00BF               movwf	((??_main+0)+0+1),f
  1147  0598  3010               	movlw	16
  1148  0599  00BE               movwf	((??_main+0)+0),f
  1149  059A                     u3887:
  1150  059A  0BBE               	decfsz	((??_main+0)+0),f
  1151  059B  2D9A               	goto	u3887
  1152  059C  0BBF               	decfsz	((??_main+0)+0+1),f
  1153  059D  2D9A               	goto	u3887
  1154  059E  0BC0               	decfsz	((??_main+0)+0+2),f
  1155  059F  2D9A               	goto	u3887
  1156                           opt asmopt_on
  1157                           
  1158                           	line	434
  1159                           	
  1160  05A0                     l3936:	
  1161                           ;blink.c: 434: lcd_clear();
  1162  05A0  279D               	fcall	_lcd_clear
  1163  05A1  2DA4               	goto	l3938
  1164                           	line	437
  1165                           ;blink.c: 437: while(1)
  1166                           	
  1167  05A2                     l468:	
  1168                           	line	439
  1169                           ;blink.c: 438: {
  1170                           ;blink.c: 439: while (TMR1cnt < findScale) {}
  1171  05A2  2DA4               	goto	l3938
  1172                           	
  1173  05A3                     l470:	
  1174  05A3  2DA4               	goto	l3938
  1175                           	
  1176  05A4                     l469:	
  1177                           	
  1178  05A4                     l3938:	
  1179  05A4  1283               	bcf	status, 5	;RP0=0, select bank0
  1180  05A5  1303               	bcf	status, 6	;RP1=0, select bank0
  1181  05A6  0851               	movf	(_TMR1cnt+1),w
  1182  05A7  3A80               	xorlw	80h
  1183  05A8  00BE               	movwf	(??_main+0)+0
  1184  05A9  3080               	movlw	80h
  1185  05AA  023E               	subwf	(??_main+0)+0,w
  1186  05AB  1D03               	skipz
  1187  05AC  2DAF               	goto	u3865
  1188  05AD  0861               	movf	(_findScale),w
  1189  05AE  0250               	subwf	(_TMR1cnt),w
  1190  05AF                     u3865:
  1191                           
  1192  05AF  1C03               	skipc
  1193  05B0  2DB2               	goto	u3861
  1194  05B1  2DB3               	goto	u3860
  1195  05B2                     u3861:
  1196  05B2  2DA4               	goto	l3938
  1197  05B3                     u3860:
  1198  05B3  2DB4               	goto	l3940
  1199                           	
  1200  05B4                     l471:	
  1201                           	line	441
  1202                           	
  1203  05B4                     l3940:	
  1204                           ;blink.c: 440: {
  1205                           ;blink.c: 441: timersOFF();
  1206  05B4  24BA               	fcall	_timersOFF
  1207                           	line	443
  1208                           	
  1209  05B5                     l3942:	
  1210                           ;blink.c: 443: if (findScale == SCALE)
  1211  05B5  302F               	movlw	(_SCALE-__stringbase)
  1212  05B6  0084               	movwf	fsr0
  1213  05B7  220A               	fcall	stringdir
  1214  05B8  1283               	bcf	status, 5	;RP0=0, select bank0
  1215  05B9  1303               	bcf	status, 6	;RP1=0, select bank0
  1216  05BA  00BE               	movwf	(??_main+0)+0
  1217  05BB  0861               	movf	(_findScale),w
  1218  05BC  063E               	xorwf	(??_main+0)+0,w
  1219  05BD  1D03               	skipz
  1220  05BE  2DC0               	goto	u3871
  1221  05BF  2DC1               	goto	u3870
  1222  05C0                     u3871:
  1223  05C0  2DCB               	goto	l3948
  1224  05C1                     u3870:
  1225                           	line	445
  1226                           	
  1227  05C1                     l3944:	
  1228                           ;blink.c: 444: {
  1229                           ;blink.c: 445: doScale();
  1230  05C1  22B3               	fcall	_doScale
  1231                           	line	446
  1232                           	
  1233  05C2                     l3946:	
  1234                           ;blink.c: 446: findScale=FREQ;
  1235  05C2  302E               	movlw	(_FREQ-__stringbase)
  1236  05C3  0084               	movwf	fsr0
  1237  05C4  220A               	fcall	stringdir
  1238  05C5  1283               	bcf	status, 5	;RP0=0, select bank0
  1239  05C6  1303               	bcf	status, 6	;RP1=0, select bank0
  1240  05C7  00BE               	movwf	(??_main+0)+0
  1241  05C8  083E               	movf	(??_main+0)+0,w
  1242  05C9  00E1               	movwf	(_findScale)
  1243                           	line	447
  1244                           ;blink.c: 447: }
  1245  05CA  2DD5               	goto	l3952
  1246                           	line	448
  1247                           	
  1248  05CB                     l472:	
  1249                           	line	450
  1250                           	
  1251  05CB                     l3948:	
  1252                           ;blink.c: 448: else
  1253                           ;blink.c: 449: {
  1254                           ;blink.c: 450: doFrequency();
  1255  05CB  2120               	fcall	_doFrequency
  1256                           	line	451
  1257                           	
  1258  05CC                     l3950:	
  1259                           ;blink.c: 451: findScale=SCALE;
  1260  05CC  302F               	movlw	(_SCALE-__stringbase)
  1261  05CD  0084               	movwf	fsr0
  1262  05CE  220A               	fcall	stringdir
  1263  05CF  1283               	bcf	status, 5	;RP0=0, select bank0
  1264  05D0  1303               	bcf	status, 6	;RP1=0, select bank0
  1265  05D1  00BE               	movwf	(??_main+0)+0
  1266  05D2  083E               	movf	(??_main+0)+0,w
  1267  05D3  00E1               	movwf	(_findScale)
  1268  05D4  2DD5               	goto	l3952
  1269                           	line	455
  1270                           	
  1271  05D5                     l473:	
  1272                           	line	457
  1273                           	
  1274  05D5                     l3952:	
  1275                           ;blink.c: 455: }
  1276                           ;blink.c: 457: timersON();
  1277  05D5  2777               	fcall	_timersON
  1278  05D6  2DA4               	goto	l3938
  1279                           	line	459
  1280                           	
  1281  05D7                     l474:	
  1282                           	line	437
  1283  05D7  2DA4               	goto	l3938
  1284                           	
  1285  05D8                     l475:	
  1286                           	line	460
  1287                           	
  1288  05D8                     l476:	
  1289                           	global	start
  1290  05D8  2810               	ljmp	start
  1291                           	opt stack 0
  1292                           GLOBAL	__end_of_main
  1293  05D9                     	__end_of_main:
  1294 ;; =============== function _main ends ============
  1295                           
  1296                           	signat	_main,88
  1297                           	global	_doFrequency
  1298                           psect	text816,local,class=CODE,delta=2
  1299                           global __ptext816
  1300  0120                     __ptext816:
  1301                           
  1302 ;; *************** function _doFrequency *****************
  1303 ;; Defined at:
  1304 ;;		line 316 in file "C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;		None
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;  pBands          1   29[BANK0 ] PTR PTR unsigned char 
  1309 ;;		 -> bands(16), 
  1310 ;; Return value:  Size  Location     Type
  1311 ;;		None               void
  1312 ;; Registers used:
  1313 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1319 ;;      Params:         0       0       0       0
  1320 ;;      Locals:         0       1       0       0
  1321 ;;      Temps:          0       4       0       0
  1322 ;;      Totals:         0       5       0       0
  1323 ;;Total ram usage:        5 bytes
  1324 ;; Hardware stack levels used:    1
  1325 ;; Hardware stack levels required when called:    4
  1326 ;; This function calls:
  1327 ;;		_lcd_goto
  1328 ;;		_lcd_putnumber
  1329 ;;		_lcd_puts
  1330 ;;		___lmul
  1331 ;;		_ultoa
  1332 ;; This function is called by:
  1333 ;;		_main
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           psect	text816
  1337                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
  1338                           	line	316
  1339                           	global	__size_of_doFrequency
  1340  00D8                     	__size_of_doFrequency	equ	__end_of_doFrequency-_doFrequency
  1341                           	
  1342  0120                     _doFrequency:	
  1343                           	opt	stack 3
  1344                           ; Regs used in _doFrequency: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1345                           	line	317
  1346                           	
  1347  0120                     l3874:	
  1348                           ;blink.c: 317: TMR1cnt = TMR0cnt;
  1349  0120  1283               	bcf	status, 5	;RP0=0, select bank0
  1350  0121  1303               	bcf	status, 6	;RP1=0, select bank0
  1351  0122  0842               	movf	(_TMR0cnt+1),w
  1352  0123  01D1               	clrf	(_TMR1cnt+1)
  1353  0124  07D1               	addwf	(_TMR1cnt+1)
  1354  0125  0841               	movf	(_TMR0cnt),w
  1355  0126  01D0               	clrf	(_TMR1cnt)
  1356  0127  07D0               	addwf	(_TMR1cnt)
  1357                           
  1358                           	line	319
  1359                           	
  1360  0128                     l3876:	
  1361                           ;blink.c: 319: lcd_goto(0);
  1362  0128  3000               	movlw	(0)
  1363  0129  27DE               	fcall	_lcd_goto
  1364                           	line	321
  1365                           	
  1366  012A                     l3878:	
  1367                           ;blink.c: 321: if (number != 0)
  1368  012A  1283               	bcf	status, 5	;RP0=0, select bank0
  1369  012B  1303               	bcf	status, 6	;RP1=0, select bank0
  1370  012C  084C               	movf	(_number+3),w
  1371  012D  044B               	iorwf	(_number+2),w
  1372  012E  044A               	iorwf	(_number+1),w
  1373  012F  0449               	iorwf	(_number),w
  1374  0130  1903               	skipnz
  1375  0131  2933               	goto	u3801
  1376  0132  2934               	goto	u3800
  1377  0133                     u3801:
  1378  0133  293E               	goto	l3882
  1379  0134                     u3800:
  1380                           	line	323
  1381                           	
  1382  0134                     l3880:	
  1383                           ;blink.c: 322: {
  1384                           ;blink.c: 323: lcd_putnumber(number);
  1385  0134  084C               	movf	(_number+3),w
  1386  0135  00B0               	movwf	(?_lcd_putnumber+3)
  1387  0136  084B               	movf	(_number+2),w
  1388  0137  00AF               	movwf	(?_lcd_putnumber+2)
  1389  0138  084A               	movf	(_number+1),w
  1390  0139  00AE               	movwf	(?_lcd_putnumber+1)
  1391  013A  0849               	movf	(_number),w
  1392  013B  00AD               	movwf	(?_lcd_putnumber)
  1393                           
  1394  013C  2011               	fcall	_lcd_putnumber
  1395                           	line	324
  1396                           ;blink.c: 324: }
  1397  013D  2946               	goto	l3884
  1398                           	line	325
  1399                           	
  1400  013E                     l454:	
  1401                           	line	327
  1402                           	
  1403  013E                     l3882:	
  1404                           ;blink.c: 325: else
  1405                           ;blink.c: 326: {
  1406                           ;blink.c: 327: lcd_puts(&noinput);
  1407  013E  3030               	movlw	low((_noinput-__stringbase))
  1408  013F  1283               	bcf	status, 5	;RP0=0, select bank0
  1409  0140  1303               	bcf	status, 6	;RP1=0, select bank0
  1410  0141  00A0               	movwf	(?_lcd_puts)
  1411  0142  3080               	movlw	80h
  1412  0143  00A1               	movwf	(?_lcd_puts+1)
  1413  0144  2758               	fcall	_lcd_puts
  1414  0145  2946               	goto	l3884
  1415                           	line	328
  1416                           	
  1417  0146                     l455:	
  1418                           	line	331
  1419                           	
  1420  0146                     l3884:	
  1421                           ;blink.c: 328: }
  1422                           ;blink.c: 331: lcd_goto(0x40);
  1423  0146  3040               	movlw	(040h)
  1424  0147  27DE               	fcall	_lcd_goto
  1425                           	line	335
  1426                           	
  1427  0148                     l3886:	
  1428                           ;blink.c: 335: TMR0cnt = 3000;
  1429  0148  3000               	movlw	0
  1430  0149  1283               	bcf	status, 5	;RP0=0, select bank0
  1431  014A  1303               	bcf	status, 6	;RP1=0, select bank0
  1432  014B  00C4               	movwf	(_TMR0cnt+3)
  1433  014C  3000               	movlw	0
  1434  014D  00C3               	movwf	(_TMR0cnt+2)
  1435  014E  300B               	movlw	0Bh
  1436  014F  00C2               	movwf	(_TMR0cnt+1)
  1437  0150  30B8               	movlw	0B8h
  1438  0151  00C1               	movwf	(_TMR0cnt)
  1439                           
  1440                           	line	336
  1441                           	
  1442  0152                     l3888:	
  1443                           ;blink.c: 336: for (band = 0;band <= 7; band ++)
  1444  0152  01D2               	clrf	(_band)
  1445                           	
  1446  0153                     l3890:	
  1447  0153  3008               	movlw	(08h)
  1448  0154  0252               	subwf	(_band),w
  1449  0155  1C03               	skipc
  1450  0156  2958               	goto	u3811
  1451  0157  2959               	goto	u3810
  1452  0158                     u3811:
  1453  0158  295B               	goto	l3894
  1454  0159                     u3810:
  1455  0159  2995               	goto	l3904
  1456                           	
  1457  015A                     l3892:	
  1458  015A  2995               	goto	l3904
  1459                           	line	337
  1460                           	
  1461  015B                     l456:	
  1462                           	line	338
  1463                           	
  1464  015B                     l3894:	
  1465                           ;blink.c: 337: {
  1466                           ;blink.c: 338: if (number < TMR0cnt)
  1467  015B  0844               	movf	(_TMR0cnt+3),w
  1468  015C  024C               	subwf	(_number+3),w
  1469  015D  1D03               	skipz
  1470  015E  2969               	goto	u3825
  1471  015F  0843               	movf	(_TMR0cnt+2),w
  1472  0160  024B               	subwf	(_number+2),w
  1473  0161  1D03               	skipz
  1474  0162  2969               	goto	u3825
  1475  0163  0842               	movf	(_TMR0cnt+1),w
  1476  0164  024A               	subwf	(_number+1),w
  1477  0165  1D03               	skipz
  1478  0166  2969               	goto	u3825
  1479  0167  0841               	movf	(_TMR0cnt),w
  1480  0168  0249               	subwf	(_number),w
  1481  0169                     u3825:
  1482  0169  1803               	skipnc
  1483  016A  296C               	goto	u3821
  1484  016B  296D               	goto	u3820
  1485  016C                     u3821:
  1486  016C  296F               	goto	l3898
  1487  016D                     u3820:
  1488  016D  2995               	goto	l3904
  1489                           	line	340
  1490                           	
  1491  016E                     l3896:	
  1492                           ;blink.c: 339: {
  1493                           ;blink.c: 340: break;
  1494  016E  2995               	goto	l3904
  1495                           	line	341
  1496                           	
  1497  016F                     l458:	
  1498                           	line	342
  1499                           	
  1500  016F                     l3898:	
  1501                           ;blink.c: 341: }
  1502                           ;blink.c: 342: TMR0cnt *=10;
  1503  016F  3000               	movlw	0
  1504  0170  00A3               	movwf	(?___lmul+3)
  1505  0171  3000               	movlw	0
  1506  0172  00A2               	movwf	(?___lmul+2)
  1507  0173  3000               	movlw	0
  1508  0174  00A1               	movwf	(?___lmul+1)
  1509  0175  300A               	movlw	0Ah
  1510  0176  00A0               	movwf	(?___lmul)
  1511                           
  1512  0177  0844               	movf	(_TMR0cnt+3),w
  1513  0178  00A7               	movwf	3+(?___lmul)+04h
  1514  0179  0843               	movf	(_TMR0cnt+2),w
  1515  017A  00A6               	movwf	2+(?___lmul)+04h
  1516  017B  0842               	movf	(_TMR0cnt+1),w
  1517  017C  00A5               	movwf	1+(?___lmul)+04h
  1518  017D  0841               	movf	(_TMR0cnt),w
  1519  017E  00A4               	movwf	0+(?___lmul)+04h
  1520                           
  1521  017F  25D9               	fcall	___lmul
  1522  0180  1283               	bcf	status, 5	;RP0=0, select bank0
  1523  0181  1303               	bcf	status, 6	;RP1=0, select bank0
  1524  0182  0823               	movf	(3+(?___lmul)),w
  1525  0183  00C4               	movwf	(_TMR0cnt+3)
  1526  0184  0822               	movf	(2+(?___lmul)),w
  1527  0185  00C3               	movwf	(_TMR0cnt+2)
  1528  0186  0821               	movf	(1+(?___lmul)),w
  1529  0187  00C2               	movwf	(_TMR0cnt+1)
  1530  0188  0820               	movf	(0+(?___lmul)),w
  1531  0189  00C1               	movwf	(_TMR0cnt)
  1532                           
  1533                           	line	336
  1534                           	
  1535  018A                     l3900:	
  1536  018A  3001               	movlw	(01h)
  1537  018B  00B9               	movwf	(??_doFrequency+0)+0
  1538  018C  0839               	movf	(??_doFrequency+0)+0,w
  1539  018D  07D2               	addwf	(_band),f
  1540                           	
  1541  018E                     l3902:	
  1542  018E  3008               	movlw	(08h)
  1543  018F  0252               	subwf	(_band),w
  1544  0190  1C03               	skipc
  1545  0191  2993               	goto	u3831
  1546  0192  2994               	goto	u3830
  1547  0193                     u3831:
  1548  0193  295B               	goto	l3894
  1549  0194                     u3830:
  1550  0194  2995               	goto	l3904
  1551                           	
  1552  0195                     l457:	
  1553                           	line	351
  1554                           	
  1555  0195                     l3904:	
  1556                           ;blink.c: 343: }
  1557                           ;blink.c: 351: char** pBands = bands;
  1558  0195  3052               	movlw	((_bands-__stringbase))&0ffh
  1559  0196  00B9               	movwf	(??_doFrequency+0)+0
  1560  0197  0839               	movf	(??_doFrequency+0)+0,w
  1561  0198  00BD               	movwf	(doFrequency@pBands)
  1562                           	line	352
  1563                           	
  1564  0199                     l3906:	
  1565                           ;blink.c: 352: pBands += band;
  1566  0199  0852               	movf	(_band),w
  1567  019A  00B9               	movwf	(??_doFrequency+0)+0
  1568  019B  0839               	movf	(??_doFrequency+0)+0,w
  1569  019C  07BD               	addwf	(doFrequency@pBands),f
  1570                           	line	353
  1571                           	
  1572  019D                     l3908:	
  1573                           ;blink.c: 353: lcd_puts(*pBands);
  1574  019D  083D               	movf	(doFrequency@pBands),w
  1575  019E  0084               	movwf	fsr0
  1576  019F  220A               	fcall	stringdir
  1577  01A0  00A0               	movwf	(?_lcd_puts)
  1578  01A1  220A               	fcall	stringdir
  1579  01A2  00A1               	movwf	(?_lcd_puts+1)
  1580  01A3  2758               	fcall	_lcd_puts
  1581                           	line	354
  1582                           	
  1583  01A4                     l3910:	
  1584                           ;blink.c: 354: lcd_puts("F");
  1585  01A4  30A2               	movlw	low((STR_10-__stringbase))
  1586  01A5  1283               	bcf	status, 5	;RP0=0, select bank0
  1587  01A6  1303               	bcf	status, 6	;RP1=0, select bank0
  1588  01A7  00A0               	movwf	(?_lcd_puts)
  1589  01A8  3080               	movlw	80h
  1590  01A9  00A1               	movwf	(?_lcd_puts+1)
  1591  01AA  2758               	fcall	_lcd_puts
  1592                           	line	357
  1593                           	
  1594  01AB                     l3912:	
  1595                           ;blink.c: 357: lcd_puts(" 1/");
  1596  01AB  3080               	movlw	low((STR_11-__stringbase))
  1597  01AC  1283               	bcf	status, 5	;RP0=0, select bank0
  1598  01AD  1303               	bcf	status, 6	;RP1=0, select bank0
  1599  01AE  00A0               	movwf	(?_lcd_puts)
  1600  01AF  3080               	movlw	80h
  1601  01B0  00A1               	movwf	(?_lcd_puts+1)
  1602  01B1  2758               	fcall	_lcd_puts
  1603                           	line	358
  1604                           	
  1605  01B2                     l3914:	
  1606                           ;blink.c: 358: ultoa(buffer,preScaleValue,10);
  1607  01B2  1283               	bcf	status, 5	;RP0=0, select bank0
  1608  01B3  1303               	bcf	status, 6	;RP1=0, select bank0
  1609  01B4  084D               	movf	(_preScaleValue),w
  1610  01B5  00AD               	movwf	(?_ultoa)
  1611  01B6  084E               	movf	(_preScaleValue+1),w
  1612  01B7  00AE               	movwf	((?_ultoa))+1
  1613  01B8  084F               	movf	(_preScaleValue+2),w
  1614  01B9  00AF               	movwf	((?_ultoa))+2
  1615  01BA  01B0               	clrf	((?_ultoa))+3
  1616  01BB  300A               	movlw	low(0Ah)
  1617  01BC  00B1               	movwf	0+(?_ultoa)+04h
  1618  01BD  3000               	movlw	high(0Ah)
  1619  01BE  00B2               	movwf	(0+(?_ultoa)+04h)+1
  1620  01BF  3055               	movlw	(_buffer)&0ffh
  1621  01C0  2351               	fcall	_ultoa
  1622                           	line	359
  1623                           	
  1624  01C1                     l3916:	
  1625                           ;blink.c: 359: lcd_puts(buffer);
  1626  01C1  3055               	movlw	(_buffer&0ffh)
  1627  01C2  1283               	bcf	status, 5	;RP0=0, select bank0
  1628  01C3  1303               	bcf	status, 6	;RP1=0, select bank0
  1629  01C4  00A0               	movwf	(?_lcd_puts)
  1630  01C5  3000               	movlw	(0x0/2)
  1631  01C6  00A1               	movwf	(?_lcd_puts+1)
  1632  01C7  2758               	fcall	_lcd_puts
  1633                           	line	362
  1634                           	
  1635  01C8                     l3918:	
  1636                           ;blink.c: 362: preScaleSelect = 7;
  1637  01C8  3007               	movlw	(07h)
  1638  01C9  1283               	bcf	status, 5	;RP0=0, select bank0
  1639  01CA  1303               	bcf	status, 6	;RP1=0, select bank0
  1640  01CB  00B9               	movwf	(??_doFrequency+0)+0
  1641  01CC  0839               	movf	(??_doFrequency+0)+0,w
  1642  01CD  00E2               	movwf	(_preScaleSelect)
  1643                           	line	363
  1644                           	
  1645  01CE                     l3920:	
  1646                           ;blink.c: 363: preScaleValue = (1 << prescaleInternalShift[preScaleSelect] << prescaleEx
                                 ternalShift[preScaleSelect]);
  1647  01CE  0862               	movf	(_preScaleSelect),w
  1648  01CF  3E18               	addlw	low((_prescaleExternalShift-__stringbase))
  1649  01D0  0084               	movwf	fsr0
  1650  01D1  220A               	fcall	stringdir
  1651  01D2  00B9               	movwf	(??_doFrequency+0)+0
  1652  01D3  0AB9               	incf	(??_doFrequency+0)+0,f
  1653  01D4  0862               	movf	(_preScaleSelect),w
  1654  01D5  3E71               	addlw	low((_prescaleInternalShift-__stringbase))
  1655  01D6  0084               	movwf	fsr0
  1656  01D7  220A               	fcall	stringdir
  1657  01D8  00BA               	movwf	(??_doFrequency+1)+0
  1658  01D9  0ABA               	incf	(??_doFrequency+1)+0,f
  1659  01DA  3001               	movlw	low(01h)
  1660  01DB  00BB               	movwf	(??_doFrequency+2)+0
  1661  01DC  3000               	movlw	high(01h)
  1662  01DD  00BC               	movwf	(??_doFrequency+2)+0+1
  1663  01DE  29E2               	goto	u3844
  1664  01DF                     u3845:
  1665  01DF  1003               	clrc
  1666  01E0  0DBB               	rlf	(??_doFrequency+2)+0,f
  1667  01E1  0DBC               	rlf	(??_doFrequency+2)+1,f
  1668  01E2                     u3844:
  1669  01E2  0BBA               	decfsz	(??_doFrequency+1)+0,f
  1670  01E3  29DF               	goto	u3845
  1671  01E4  29E8               	goto	u3854
  1672  01E5                     u3855:
  1673  01E5  1003               	clrc
  1674  01E6  0DBB               	rlf	(??_doFrequency+2)+0,f
  1675  01E7  0DBC               	rlf	(??_doFrequency+2)+1,f
  1676  01E8                     u3854:
  1677  01E8  0BB9               	decfsz	(??_doFrequency+0)+0,f
  1678  01E9  29E5               	goto	u3855
  1679  01EA  083B               	movf	0+(??_doFrequency+2)+0,w
  1680  01EB  00CD               	movwf	(_preScaleValue)
  1681  01EC  083C               	movf	1+(??_doFrequency+2)+0,w
  1682  01ED  00CE               	movwf	(_preScaleValue+1)
  1683  01EE  3000               	movlw	0
  1684  01EF  1BBC               	btfsc	1+(??_doFrequency+2)+0,7
  1685  01F0  30FF               	movlw	255
  1686  01F1  00CF               	movwf	(_preScaleValue+2)
  1687                           
  1688                           	line	379
  1689                           	
  1690  01F2                     l3922:	
  1691                           ;blink.c: 379: lcd_puts("   ");
  1692  01F2  307C               	movlw	low((STR_12-__stringbase))
  1693  01F3  00A0               	movwf	(?_lcd_puts)
  1694  01F4  3080               	movlw	80h
  1695  01F5  00A1               	movwf	(?_lcd_puts+1)
  1696  01F6  2758               	fcall	_lcd_puts
  1697                           	line	380
  1698                           	
  1699  01F7                     l459:	
  1700  01F7  0008               	return
  1701                           	opt stack 0
  1702                           GLOBAL	__end_of_doFrequency
  1703  01F8                     	__end_of_doFrequency:
  1704 ;; =============== function _doFrequency ends ============
  1705                           
  1706                           	signat	_doFrequency,88
  1707                           	global	_lcd_init
  1708                           psect	text817,local,class=CODE,delta=2
  1709                           global __ptext817
  1710  066F                     __ptext817:
  1711                           
  1712 ;; *************** function _lcd_init *****************
  1713 ;; Defined at:
  1714 ;;		line 58 in file "C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\lcd.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;		None
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;		None               void
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0, pclath, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1728 ;;      Params:         0       0       0       0
  1729 ;;      Locals:         0       0       0       0
  1730 ;;      Temps:          0       3       0       0
  1731 ;;      Totals:         0       3       0       0
  1732 ;;Total ram usage:        3 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    3
  1735 ;; This function calls:
  1736 ;;		_lcd_write
  1737 ;;		_lcd_clear
  1738 ;; This function is called by:
  1739 ;;		_main
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           psect	text817
  1743                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\lcd.c"
  1744                           	line	58
  1745                           	global	__size_of_lcd_init
  1746  0047                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  1747                           	
  1748  066F                     _lcd_init:	
  1749                           	opt	stack 4
  1750                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1751                           	line	70
  1752                           	
  1753  066F                     l3838:	
  1754                           ;lcd.c: 70: RB7 = 1;
  1755  066F  1283               	bcf	status, 5	;RP0=0, select bank0
  1756  0670  1303               	bcf	status, 6	;RP1=0, select bank0
  1757  0671  1786               	bsf	(55/8),(55)&7
  1758                           	line	72
  1759                           	
  1760  0672                     l3840:	
  1761                           ;lcd.c: 72: _delay((unsigned long)((150)*(20000000/4000.0)));
  1762                           	opt asmopt_off
  1763  0672  3004               movlw  4
  1764  0673  00A4               movwf	((??_lcd_init+0)+0+2),f
  1765  0674  30CF               movlw	207
  1766  0675  00A3               movwf	((??_lcd_init+0)+0+1),f
  1767  0676  3003               	movlw	3
  1768  0677  00A2               movwf	((??_lcd_init+0)+0),f
  1769  0678                     u3897:
  1770  0678  0BA2               	decfsz	((??_lcd_init+0)+0),f
  1771  0679  2E78               	goto	u3897
  1772  067A  0BA3               	decfsz	((??_lcd_init+0)+0+1),f
  1773  067B  2E78               	goto	u3897
  1774  067C  0BA4               	decfsz	((??_lcd_init+0)+0+2),f
  1775  067D  2E78               	goto	u3897
  1776  067E  2E7F               	nop2
  1777                           opt asmopt_on
  1778                           
  1779                           	line	74
  1780                           	
  1781  067F                     l3842:	
  1782                           ;lcd.c: 74: PORTB = 0x3 | (PORTB & 0xF0);
  1783  067F  1283               	bcf	status, 5	;RP0=0, select bank0
  1784  0680  1303               	bcf	status, 6	;RP1=0, select bank0
  1785  0681  0806               	movf	(6),w
  1786  0682  39F0               	andlw	0F0h
  1787  0683  3803               	iorlw	03h
  1788  0684  0086               	movwf	(6)	;volatile
  1789                           	line	75
  1790                           	
  1791  0685                     l3844:	
  1792                           ;lcd.c: 75: ((RA1 = 1), (RA1=0));
  1793  0685  1485               	bsf	(41/8),(41)&7
  1794                           	
  1795  0686                     l3846:	
  1796  0686  1085               	bcf	(41/8),(41)&7
  1797                           	line	76
  1798                           	
  1799  0687                     l3848:	
  1800                           ;lcd.c: 76: _delay((unsigned long)((5)*(20000000/4000.0)));
  1801                           	opt asmopt_off
  1802  0687  3021               movlw	33
  1803  0688  00A3               movwf	((??_lcd_init+0)+0+1),f
  1804  0689  3076               	movlw	118
  1805  068A  00A2               movwf	((??_lcd_init+0)+0),f
  1806  068B                     u3907:
  1807  068B  0BA2               	decfsz	((??_lcd_init+0)+0),f
  1808  068C  2E8B               	goto	u3907
  1809  068D  0BA3               	decfsz	((??_lcd_init+0)+0+1),f
  1810  068E  2E8B               	goto	u3907
  1811  068F  0064               	clrwdt
  1812                           opt asmopt_on
  1813                           
  1814                           	line	77
  1815                           	
  1816  0690                     l3850:	
  1817                           ;lcd.c: 77: ((RA1 = 1), (RA1=0));
  1818  0690  1283               	bcf	status, 5	;RP0=0, select bank0
  1819  0691  1303               	bcf	status, 6	;RP1=0, select bank0
  1820  0692  1485               	bsf	(41/8),(41)&7
  1821                           	
  1822  0693                     l3852:	
  1823  0693  1085               	bcf	(41/8),(41)&7
  1824                           	line	78
  1825                           	
  1826  0694                     l3854:	
  1827                           ;lcd.c: 78: _delay((unsigned long)((200)*(20000000/4000000.0)));
  1828                           	opt asmopt_off
  1829  0694  30F9               movlw	249
  1830  0695  00A2               movwf	(??_lcd_init+0)+0,f
  1831  0696                     u3917:
  1832  0696  0064               	clrwdt
  1833  0697  0BA2               decfsz	(??_lcd_init+0)+0,f
  1834  0698  2E96               	goto	u3917
  1835  0699  2E9A               	nop2	;nop
  1836  069A  0064               	clrwdt
  1837                           opt asmopt_on
  1838                           
  1839                           	line	79
  1840                           	
  1841  069B                     l3856:	
  1842                           ;lcd.c: 79: ((RA1 = 1), (RA1=0));
  1843  069B  1283               	bcf	status, 5	;RP0=0, select bank0
  1844  069C  1303               	bcf	status, 6	;RP1=0, select bank0
  1845  069D  1485               	bsf	(41/8),(41)&7
  1846                           	
  1847  069E                     l3858:	
  1848  069E  1085               	bcf	(41/8),(41)&7
  1849                           	line	80
  1850                           	
  1851  069F                     l3860:	
  1852                           ;lcd.c: 80: _delay((unsigned long)((200)*(20000000/4000000.0)));
  1853                           	opt asmopt_off
  1854  069F  30F9               movlw	249
  1855  06A0  00A2               movwf	(??_lcd_init+0)+0,f
  1856  06A1                     u3927:
  1857  06A1  0064               	clrwdt
  1858  06A2  0BA2               decfsz	(??_lcd_init+0)+0,f
  1859  06A3  2EA1               	goto	u3927
  1860  06A4  2EA5               	nop2	;nop
  1861  06A5  0064               	clrwdt
  1862                           opt asmopt_on
  1863                           
  1864                           	line	81
  1865                           ;lcd.c: 81: PORTB = 2 | (PORTB & 0xF0);;
  1866  06A6  1283               	bcf	status, 5	;RP0=0, select bank0
  1867  06A7  1303               	bcf	status, 6	;RP1=0, select bank0
  1868  06A8  0806               	movf	(6),w
  1869  06A9  39F0               	andlw	0F0h
  1870  06AA  3802               	iorlw	02h
  1871  06AB  0086               	movwf	(6)	;volatile
  1872                           	line	82
  1873                           	
  1874  06AC                     l3862:	
  1875                           ;lcd.c: 82: ((RA1 = 1), (RA1=0));
  1876  06AC  1485               	bsf	(41/8),(41)&7
  1877                           	
  1878  06AD                     l3864:	
  1879  06AD  1085               	bcf	(41/8),(41)&7
  1880                           	line	84
  1881                           	
  1882  06AE                     l3866:	
  1883                           ;lcd.c: 84: lcd_write(0x28);
  1884  06AE  3028               	movlw	(028h)
  1885  06AF  2735               	fcall	_lcd_write
  1886                           	line	86
  1887                           	
  1888  06B0                     l3868:	
  1889                           ;lcd.c: 86: lcd_write(0b1100);
  1890  06B0  300C               	movlw	(0Ch)
  1891  06B1  2735               	fcall	_lcd_write
  1892                           	line	87
  1893                           	
  1894  06B2                     l3870:	
  1895                           ;lcd.c: 87: lcd_clear();
  1896  06B2  279D               	fcall	_lcd_clear
  1897                           	line	88
  1898                           	
  1899  06B3                     l3872:	
  1900                           ;lcd.c: 88: lcd_write(0x6);
  1901  06B3  3006               	movlw	(06h)
  1902  06B4  2735               	fcall	_lcd_write
  1903                           	line	89
  1904                           	
  1905  06B5                     l867:	
  1906  06B5  0008               	return
  1907                           	opt stack 0
  1908                           GLOBAL	__end_of_lcd_init
  1909  06B6                     	__end_of_lcd_init:
  1910 ;; =============== function _lcd_init ends ============
  1911                           
  1912                           	signat	_lcd_init,88
  1913                           	global	_lcd_putnumber
  1914                           psect	text818,local,class=CODE,delta=2
  1915                           global __ptext818
  1916  0011                     __ptext818:
  1917                           
  1918 ;; *************** function _lcd_putnumber *****************
  1919 ;; Defined at:
  1920 ;;		line 153 in file "C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\lcd.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  number          4   13[BANK0 ] unsigned long 
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  loop            2   21[BANK0 ] int 
  1925 ;;  displayHZ       2   19[BANK0 ] unsigned char [2]
  1926 ;; Return value:  Size  Location     Type
  1927 ;;		None               void
  1928 ;; Registers used:
  1929 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1935 ;;      Params:         0       4       0       0
  1936 ;;      Locals:         0       4       0       0
  1937 ;;      Temps:          0       2       0       0
  1938 ;;      Totals:         0      10       0       0
  1939 ;;Total ram usage:       10 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; Hardware stack levels required when called:    3
  1942 ;; This function calls:
  1943 ;;		___lldiv
  1944 ;;		___llmod
  1945 ;;		_lcd_putdigit
  1946 ;;		___awmod
  1947 ;;		_lcd_puts
  1948 ;; This function is called by:
  1949 ;;		_doFrequency
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           psect	text818
  1953                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\lcd.c"
  1954                           	line	153
  1955                           	global	__size_of_lcd_putnumber
  1956  010F                     	__size_of_lcd_putnumber	equ	__end_of_lcd_putnumber-_lcd_putnumber
  1957                           	
  1958  0011                     _lcd_putnumber:	
  1959                           	opt	stack 3
  1960                           ; Regs used in _lcd_putnumber: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1961                           	line	154
  1962                           	
  1963  0011                     l3790:	
  1964                           ;lcd.c: 154: char displayHZ[] = {'.', '\0'};
  1965  0011  1283               	bcf	status, 5	;RP0=0, select bank0
  1966  0012  1303               	bcf	status, 6	;RP1=0, select bank0
  1967  0013  0860               	movf	(lcd_putnumber@F612+1),w
  1968  0014  01B4               	clrf	(lcd_putnumber@displayHZ+1)
  1969  0015  07B4               	addwf	(lcd_putnumber@displayHZ+1)
  1970  0016  085F               	movf	(lcd_putnumber@F612),w
  1971  0017  01B3               	clrf	(lcd_putnumber@displayHZ)
  1972  0018  07B3               	addwf	(lcd_putnumber@displayHZ)
  1973                           
  1974                           	line	156
  1975                           	
  1976  0019                     l3792:	
  1977                           ;lcd.c: 156: divBy = 1000000000;
  1978  0019  303B               	movlw	03Bh
  1979  001A  00C8               	movwf	(_divBy+3)
  1980  001B  309A               	movlw	09Ah
  1981  001C  00C7               	movwf	(_divBy+2)
  1982  001D  30CA               	movlw	0CAh
  1983  001E  00C6               	movwf	(_divBy+1)
  1984  001F  3000               	movlw	0
  1985  0020  00C5               	movwf	(_divBy)
  1986                           
  1987                           	line	157
  1988                           	
  1989  0021                     l3794:	
  1990                           ;lcd.c: 157: sig = 0;
  1991  0021  01D4               	clrf	(_sig)
  1992                           	line	160
  1993                           	
  1994  0022                     l3796:	
  1995                           ;lcd.c: 160: for (int loop=0; loop < 10; loop++)
  1996  0022  01B5               	clrf	(lcd_putnumber@loop)
  1997  0023  01B6               	clrf	(lcd_putnumber@loop+1)
  1998                           	
  1999  0024                     l3798:	
  2000  0024  0836               	movf	(lcd_putnumber@loop+1),w
  2001  0025  3A80               	xorlw	80h
  2002  0026  00FF               	movwf	btemp+1
  2003  0027  3080               	movlw	(high(0Ah))^80h
  2004  0028  027F               	subwf	btemp+1,w
  2005  0029  1D03               	skipz
  2006  002A  282D               	goto	u3725
  2007  002B  300A               	movlw	low(0Ah)
  2008  002C  0235               	subwf	(lcd_putnumber@loop),w
  2009  002D                     u3725:
  2010                           
  2011  002D  1C03               	skipc
  2012  002E  2830               	goto	u3721
  2013  002F  2831               	goto	u3720
  2014  0030                     u3721:
  2015  0030  2833               	goto	l3802
  2016  0031                     u3720:
  2017  0031  290A               	goto	l3832
  2018                           	
  2019  0032                     l3800:	
  2020  0032  290A               	goto	l3832
  2021                           	line	161
  2022                           	
  2023  0033                     l893:	
  2024                           	line	162
  2025                           	
  2026  0033                     l3802:	
  2027                           ;lcd.c: 161: {
  2028                           ;lcd.c: 162: digit = number / divBy;
  2029  0033  1283               	bcf	status, 5	;RP0=0, select bank0
  2030  0034  1303               	bcf	status, 6	;RP1=0, select bank0
  2031  0035  0848               	movf	(_divBy+3),w
  2032  0036  00A3               	movwf	(?___lldiv+3)
  2033  0037  0847               	movf	(_divBy+2),w
  2034  0038  00A2               	movwf	(?___lldiv+2)
  2035  0039  0846               	movf	(_divBy+1),w
  2036  003A  00A1               	movwf	(?___lldiv+1)
  2037  003B  0845               	movf	(_divBy),w
  2038  003C  00A0               	movwf	(?___lldiv)
  2039                           
  2040  003D  0830               	movf	(lcd_putnumber@number+3),w
  2041  003E  00A7               	movwf	3+(?___lldiv)+04h
  2042  003F  082F               	movf	(lcd_putnumber@number+2),w
  2043  0040  00A6               	movwf	2+(?___lldiv)+04h
  2044  0041  082E               	movf	(lcd_putnumber@number+1),w
  2045  0042  00A5               	movwf	1+(?___lldiv)+04h
  2046  0043  082D               	movf	(lcd_putnumber@number),w
  2047  0044  00A4               	movwf	0+(?___lldiv)+04h
  2048                           
  2049  0045  23E2               	fcall	___lldiv
  2050  0046  1283               	bcf	status, 5	;RP0=0, select bank0
  2051  0047  1303               	bcf	status, 6	;RP1=0, select bank0
  2052  0048  0820               	movf	0+(((0+(?___lldiv)))),w
  2053  0049  00B1               	movwf	(??_lcd_putnumber+0)+0
  2054  004A  0831               	movf	(??_lcd_putnumber+0)+0,w
  2055  004B  00D3               	movwf	(_digit)
  2056                           	line	163
  2057                           ;lcd.c: 163: number = number % divBy;
  2058  004C  0848               	movf	(_divBy+3),w
  2059  004D  00A3               	movwf	(?___llmod+3)
  2060  004E  0847               	movf	(_divBy+2),w
  2061  004F  00A2               	movwf	(?___llmod+2)
  2062  0050  0846               	movf	(_divBy+1),w
  2063  0051  00A1               	movwf	(?___llmod+1)
  2064  0052  0845               	movf	(_divBy),w
  2065  0053  00A0               	movwf	(?___llmod)
  2066                           
  2067  0054  0830               	movf	(lcd_putnumber@number+3),w
  2068  0055  00A7               	movwf	3+(?___llmod)+04h
  2069  0056  082F               	movf	(lcd_putnumber@number+2),w
  2070  0057  00A6               	movwf	2+(?___llmod)+04h
  2071  0058  082E               	movf	(lcd_putnumber@number+1),w
  2072  0059  00A5               	movwf	1+(?___llmod)+04h
  2073  005A  082D               	movf	(lcd_putnumber@number),w
  2074  005B  00A4               	movwf	0+(?___llmod)+04h
  2075                           
  2076  005C  2521               	fcall	___llmod
  2077  005D  1283               	bcf	status, 5	;RP0=0, select bank0
  2078  005E  1303               	bcf	status, 6	;RP1=0, select bank0
  2079  005F  0823               	movf	(3+(?___llmod)),w
  2080  0060  00B0               	movwf	(lcd_putnumber@number+3)
  2081  0061  0822               	movf	(2+(?___llmod)),w
  2082  0062  00AF               	movwf	(lcd_putnumber@number+2)
  2083  0063  0821               	movf	(1+(?___llmod)),w
  2084  0064  00AE               	movwf	(lcd_putnumber@number+1)
  2085  0065  0820               	movf	(0+(?___llmod)),w
  2086  0066  00AD               	movwf	(lcd_putnumber@number)
  2087                           
  2088                           	line	164
  2089                           	
  2090  0067                     l3804:	
  2091                           ;lcd.c: 164: if (digit > 0 || sig != 0)
  2092  0067  08D3               	movf	(_digit),f
  2093  0068  1D03               	skipz
  2094  0069  286B               	goto	u3731
  2095  006A  286C               	goto	u3730
  2096  006B                     u3731:
  2097  006B  2871               	goto	l3808
  2098  006C                     u3730:
  2099                           	
  2100  006C                     l3806:	
  2101  006C  0854               	movf	(_sig),w
  2102  006D  1D03               	skipz
  2103  006E  2870               	goto	u3740
  2104  006F  28A9               	goto	l3820
  2105  0070                     u3740:
  2106  0070  2871               	goto	l3808
  2107                           	
  2108  0071                     l897:	
  2109                           	line	167
  2110                           	
  2111  0071                     l3808:	
  2112                           ;lcd.c: 165: {
  2113                           ;lcd.c: 167: lcd_putdigit(digit);
  2114  0071  0853               	movf	(_digit),w
  2115  0072  27D6               	fcall	_lcd_putdigit
  2116                           	line	168
  2117                           	
  2118  0073                     l3810:	
  2119                           ;lcd.c: 168: sig++;
  2120  0073  3001               	movlw	(01h)
  2121  0074  1283               	bcf	status, 5	;RP0=0, select bank0
  2122  0075  1303               	bcf	status, 6	;RP1=0, select bank0
  2123  0076  00B1               	movwf	(??_lcd_putnumber+0)+0
  2124  0077  0831               	movf	(??_lcd_putnumber+0)+0,w
  2125  0078  07D4               	addwf	(_sig),f
  2126                           	line	169
  2127                           	
  2128  0079                     l3812:	
  2129                           ;lcd.c: 169: if ( ((9 - loop)%3 == 0) && loop != 9)
  2130  0079  3003               	movlw	low(03h)
  2131  007A  00A0               	movwf	(?___awmod)
  2132  007B  3000               	movlw	high(03h)
  2133  007C  00A1               	movwf	((?___awmod))+1
  2134  007D  0935               	comf	(lcd_putnumber@loop),w
  2135  007E  00B1               	movwf	(??_lcd_putnumber+0)+0
  2136  007F  0936               	comf	(lcd_putnumber@loop+1),w
  2137  0080  00B2               	movwf	((??_lcd_putnumber+0)+0+1)
  2138  0081  0AB1               	incf	(??_lcd_putnumber+0)+0,f
  2139  0082  1903               	skipnz
  2140  0083  0AB2               	incf	((??_lcd_putnumber+0)+0+1),f
  2141  0084  0831               	movf	0+(??_lcd_putnumber+0)+0,w
  2142  0085  3E09               	addlw	low(09h)
  2143  0086  00A2               	movwf	0+(?___awmod)+02h
  2144  0087  0832               	movf	1+(??_lcd_putnumber+0)+0,w
  2145  0088  1803               	skipnc
  2146  0089  3E01               	addlw	1
  2147  008A  3E00               	addlw	high(09h)
  2148  008B  00A3               	movwf	1+0+(?___awmod)+02h
  2149  008C  2452               	fcall	___awmod
  2150  008D  1283               	bcf	status, 5	;RP0=0, select bank0
  2151  008E  1303               	bcf	status, 6	;RP1=0, select bank0
  2152  008F  0821               	movf	((1+(?___awmod))),w
  2153  0090  0420               	iorwf	((0+(?___awmod))),w
  2154  0091  1D03               	skipz
  2155  0092  2894               	goto	u3751
  2156  0093  2895               	goto	u3750
  2157  0094                     u3751:
  2158  0094  28D9               	goto	l3826
  2159  0095                     u3750:
  2160                           	
  2161  0095                     l3814:	
  2162  0095  3009               	movlw	09h
  2163  0096  0635               	xorwf	(lcd_putnumber@loop),w
  2164  0097  0436               	iorwf	(lcd_putnumber@loop+1),w
  2165  0098  1903               	skipnz
  2166  0099  289B               	goto	u3761
  2167  009A  289C               	goto	u3760
  2168  009B                     u3761:
  2169  009B  28D9               	goto	l3826
  2170  009C                     u3760:
  2171                           	line	171
  2172                           	
  2173  009C                     l3816:	
  2174                           ;lcd.c: 170: {
  2175                           ;lcd.c: 171: lcd_puts(displayHZ);
  2176  009C  3033               	movlw	(lcd_putnumber@displayHZ&0ffh)
  2177  009D  00A0               	movwf	(?_lcd_puts)
  2178  009E  3000               	movlw	(0x0/2)
  2179  009F  00A1               	movwf	(?_lcd_puts+1)
  2180  00A0  2758               	fcall	_lcd_puts
  2181                           	line	172
  2182                           	
  2183  00A1                     l3818:	
  2184                           ;lcd.c: 172: displayHZ[0] = ',';
  2185  00A1  302C               	movlw	(02Ch)
  2186  00A2  1283               	bcf	status, 5	;RP0=0, select bank0
  2187  00A3  1303               	bcf	status, 6	;RP1=0, select bank0
  2188  00A4  00B1               	movwf	(??_lcd_putnumber+0)+0
  2189  00A5  0831               	movf	(??_lcd_putnumber+0)+0,w
  2190  00A6  00B3               	movwf	(lcd_putnumber@displayHZ)
  2191  00A7  28D9               	goto	l3826
  2192                           	line	173
  2193                           	
  2194  00A8                     l898:	
  2195                           	line	174
  2196                           ;lcd.c: 173: }
  2197                           ;lcd.c: 174: }
  2198  00A8  28D9               	goto	l3826
  2199                           	line	175
  2200                           	
  2201  00A9                     l895:	
  2202                           	line	179
  2203                           	
  2204  00A9                     l3820:	
  2205                           ;lcd.c: 175: else
  2206                           ;lcd.c: 176: {
  2207                           ;lcd.c: 179: if ( ((9 - loop)%3 == 0) && loop != 9)
  2208  00A9  3003               	movlw	low(03h)
  2209  00AA  00A0               	movwf	(?___awmod)
  2210  00AB  3000               	movlw	high(03h)
  2211  00AC  00A1               	movwf	((?___awmod))+1
  2212  00AD  0935               	comf	(lcd_putnumber@loop),w
  2213  00AE  00B1               	movwf	(??_lcd_putnumber+0)+0
  2214  00AF  0936               	comf	(lcd_putnumber@loop+1),w
  2215  00B0  00B2               	movwf	((??_lcd_putnumber+0)+0+1)
  2216  00B1  0AB1               	incf	(??_lcd_putnumber+0)+0,f
  2217  00B2  1903               	skipnz
  2218  00B3  0AB2               	incf	((??_lcd_putnumber+0)+0+1),f
  2219  00B4  0831               	movf	0+(??_lcd_putnumber+0)+0,w
  2220  00B5  3E09               	addlw	low(09h)
  2221  00B6  00A2               	movwf	0+(?___awmod)+02h
  2222  00B7  0832               	movf	1+(??_lcd_putnumber+0)+0,w
  2223  00B8  1803               	skipnc
  2224  00B9  3E01               	addlw	1
  2225  00BA  3E00               	addlw	high(09h)
  2226  00BB  00A3               	movwf	1+0+(?___awmod)+02h
  2227  00BC  2452               	fcall	___awmod
  2228  00BD  1283               	bcf	status, 5	;RP0=0, select bank0
  2229  00BE  1303               	bcf	status, 6	;RP1=0, select bank0
  2230  00BF  0821               	movf	((1+(?___awmod))),w
  2231  00C0  0420               	iorwf	((0+(?___awmod))),w
  2232  00C1  1D03               	skipz
  2233  00C2  28C4               	goto	u3771
  2234  00C3  28C5               	goto	u3770
  2235  00C4                     u3771:
  2236  00C4  28D1               	goto	l900
  2237  00C5                     u3770:
  2238                           	
  2239  00C5                     l3822:	
  2240  00C5  3009               	movlw	09h
  2241  00C6  0635               	xorwf	(lcd_putnumber@loop),w
  2242  00C7  0436               	iorwf	(lcd_putnumber@loop+1),w
  2243  00C8  1903               	skipnz
  2244  00C9  28CB               	goto	u3781
  2245  00CA  28CC               	goto	u3780
  2246  00CB                     u3781:
  2247  00CB  28D1               	goto	l900
  2248  00CC                     u3780:
  2249                           	line	181
  2250                           	
  2251  00CC                     l3824:	
  2252                           ;lcd.c: 180: {
  2253                           ;lcd.c: 181: lcd_puts(" ");
  2254  00CC  307E               	movlw	low((STR_13-__stringbase))
  2255  00CD  00A0               	movwf	(?_lcd_puts)
  2256  00CE  3080               	movlw	80h
  2257  00CF  00A1               	movwf	(?_lcd_puts+1)
  2258  00D0  2758               	fcall	_lcd_puts
  2259                           	line	182
  2260                           	
  2261  00D1                     l900:	
  2262                           	line	183
  2263                           ;lcd.c: 182: }
  2264                           ;lcd.c: 183: lcd_puts(" ");
  2265  00D1  307E               	movlw	low((STR_14-__stringbase))
  2266  00D2  1283               	bcf	status, 5	;RP0=0, select bank0
  2267  00D3  1303               	bcf	status, 6	;RP1=0, select bank0
  2268  00D4  00A0               	movwf	(?_lcd_puts)
  2269  00D5  3080               	movlw	80h
  2270  00D6  00A1               	movwf	(?_lcd_puts+1)
  2271  00D7  2758               	fcall	_lcd_puts
  2272  00D8  28D9               	goto	l3826
  2273                           	line	184
  2274                           	
  2275  00D9                     l899:	
  2276                           	line	185
  2277                           	
  2278  00D9                     l3826:	
  2279                           ;lcd.c: 184: }
  2280                           ;lcd.c: 185: divBy = divBy / 10;
  2281  00D9  3000               	movlw	0
  2282  00DA  1283               	bcf	status, 5	;RP0=0, select bank0
  2283  00DB  1303               	bcf	status, 6	;RP1=0, select bank0
  2284  00DC  00A3               	movwf	(?___lldiv+3)
  2285  00DD  3000               	movlw	0
  2286  00DE  00A2               	movwf	(?___lldiv+2)
  2287  00DF  3000               	movlw	0
  2288  00E0  00A1               	movwf	(?___lldiv+1)
  2289  00E1  300A               	movlw	0Ah
  2290  00E2  00A0               	movwf	(?___lldiv)
  2291                           
  2292  00E3  0848               	movf	(_divBy+3),w
  2293  00E4  00A7               	movwf	3+(?___lldiv)+04h
  2294  00E5  0847               	movf	(_divBy+2),w
  2295  00E6  00A6               	movwf	2+(?___lldiv)+04h
  2296  00E7  0846               	movf	(_divBy+1),w
  2297  00E8  00A5               	movwf	1+(?___lldiv)+04h
  2298  00E9  0845               	movf	(_divBy),w
  2299  00EA  00A4               	movwf	0+(?___lldiv)+04h
  2300                           
  2301  00EB  23E2               	fcall	___lldiv
  2302  00EC  1283               	bcf	status, 5	;RP0=0, select bank0
  2303  00ED  1303               	bcf	status, 6	;RP1=0, select bank0
  2304  00EE  0823               	movf	(3+(?___lldiv)),w
  2305  00EF  00C8               	movwf	(_divBy+3)
  2306  00F0  0822               	movf	(2+(?___lldiv)),w
  2307  00F1  00C7               	movwf	(_divBy+2)
  2308  00F2  0821               	movf	(1+(?___lldiv)),w
  2309  00F3  00C6               	movwf	(_divBy+1)
  2310  00F4  0820               	movf	(0+(?___lldiv)),w
  2311  00F5  00C5               	movwf	(_divBy)
  2312                           
  2313                           	line	160
  2314                           	
  2315  00F6                     l3828:	
  2316  00F6  3001               	movlw	low(01h)
  2317  00F7  07B5               	addwf	(lcd_putnumber@loop),f
  2318  00F8  1803               	skipnc
  2319  00F9  0AB6               	incf	(lcd_putnumber@loop+1),f
  2320  00FA  3000               	movlw	high(01h)
  2321  00FB  07B6               	addwf	(lcd_putnumber@loop+1),f
  2322                           	
  2323  00FC                     l3830:	
  2324  00FC  0836               	movf	(lcd_putnumber@loop+1),w
  2325  00FD  3A80               	xorlw	80h
  2326  00FE  00FF               	movwf	btemp+1
  2327  00FF  3080               	movlw	(high(0Ah))^80h
  2328  0100  027F               	subwf	btemp+1,w
  2329  0101  1D03               	skipz
  2330  0102  2905               	goto	u3795
  2331  0103  300A               	movlw	low(0Ah)
  2332  0104  0235               	subwf	(lcd_putnumber@loop),w
  2333  0105                     u3795:
  2334                           
  2335  0105  1C03               	skipc
  2336  0106  2908               	goto	u3791
  2337  0107  2909               	goto	u3790
  2338  0108                     u3791:
  2339  0108  2833               	goto	l3802
  2340  0109                     u3790:
  2341  0109  290A               	goto	l3832
  2342                           	
  2343  010A                     l894:	
  2344                           	line	188
  2345                           	
  2346  010A                     l3832:	
  2347                           ;lcd.c: 186: }
  2348                           ;lcd.c: 188: displayHZ[0] = HZ[sig];
  2349  010A  1283               	bcf	status, 5	;RP0=0, select bank0
  2350  010B  1303               	bcf	status, 6	;RP1=0, select bank0
  2351  010C  0854               	movf	(_sig),w
  2352  010D  3E01               	addlw	low((_HZ-__stringbase))
  2353  010E  0084               	movwf	fsr0
  2354  010F  220A               	fcall	stringdir
  2355  0110  00B1               	movwf	(??_lcd_putnumber+0)+0
  2356  0111  0831               	movf	(??_lcd_putnumber+0)+0,w
  2357  0112  00B3               	movwf	(lcd_putnumber@displayHZ)
  2358                           	line	189
  2359                           	
  2360  0113                     l3834:	
  2361                           ;lcd.c: 189: lcd_puts(&displayHZ[0]);
  2362  0113  3033               	movlw	(lcd_putnumber@displayHZ&0ffh)
  2363  0114  00A0               	movwf	(?_lcd_puts)
  2364  0115  3000               	movlw	(0x0/2)
  2365  0116  00A1               	movwf	(?_lcd_puts+1)
  2366  0117  2758               	fcall	_lcd_puts
  2367                           	line	190
  2368                           	
  2369  0118                     l3836:	
  2370                           ;lcd.c: 190: lcd_puts("Hz");
  2371  0118  3084               	movlw	low((STR_15-__stringbase))
  2372  0119  1283               	bcf	status, 5	;RP0=0, select bank0
  2373  011A  1303               	bcf	status, 6	;RP1=0, select bank0
  2374  011B  00A0               	movwf	(?_lcd_puts)
  2375  011C  3080               	movlw	80h
  2376  011D  00A1               	movwf	(?_lcd_puts+1)
  2377  011E  2758               	fcall	_lcd_puts
  2378                           	line	191
  2379                           	
  2380  011F                     l901:	
  2381  011F  0008               	return
  2382                           	opt stack 0
  2383                           GLOBAL	__end_of_lcd_putnumber
  2384  0120                     	__end_of_lcd_putnumber:
  2385 ;; =============== function _lcd_putnumber ends ============
  2386                           
  2387                           	signat	_lcd_putnumber,4216
  2388                           	global	_lcd_putdigit
  2389                           psect	text819,local,class=CODE,delta=2
  2390                           global __ptext819
  2391  07D6                     __ptext819:
  2392                           
  2393 ;; *************** function _lcd_putdigit *****************
  2394 ;; Defined at:
  2395 ;;		line 146 in file "C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\lcd.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;  c               1    wreg     unsigned char 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  c               1    0[BANK0 ] unsigned char 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;		None               void
  2402 ;; Registers used:
  2403 ;;		wreg, status,2, status,0, pclath, cstack
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2409 ;;      Params:         0       0       0       0
  2410 ;;      Locals:         0       1       0       0
  2411 ;;      Temps:          0       0       0       0
  2412 ;;      Totals:         0       1       0       0
  2413 ;;Total ram usage:        1 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; Hardware stack levels required when called:    2
  2416 ;; This function calls:
  2417 ;;		_lcd_write
  2418 ;; This function is called by:
  2419 ;;		_lcd_putnumber
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           psect	text819
  2423                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\lcd.c"
  2424                           	line	146
  2425                           	global	__size_of_lcd_putdigit
  2426  0008                     	__size_of_lcd_putdigit	equ	__end_of_lcd_putdigit-_lcd_putdigit
  2427                           	
  2428  07D6                     _lcd_putdigit:	
  2429                           	opt	stack 3
  2430                           ; Regs used in _lcd_putdigit: [wreg+status,2+status,0+pclath+cstack]
  2431                           ;lcd_putdigit@c stored from wreg
  2432  07D6  1283               	bcf	status, 5	;RP0=0, select bank0
  2433  07D7  1303               	bcf	status, 6	;RP1=0, select bank0
  2434  07D8  00A0               	movwf	(lcd_putdigit@c)
  2435                           	line	147
  2436                           	
  2437  07D9                     l3786:	
  2438                           ;lcd.c: 147: RA3 = 1;
  2439  07D9  1585               	bsf	(43/8),(43)&7
  2440                           	line	148
  2441                           	
  2442  07DA                     l3788:	
  2443                           ;lcd.c: 148: lcd_write( 0x30 + c );
  2444  07DA  0820               	movf	(lcd_putdigit@c),w
  2445  07DB  3E30               	addlw	030h
  2446  07DC  2735               	fcall	_lcd_write
  2447                           	line	149
  2448                           	
  2449  07DD                     l888:	
  2450  07DD  0008               	return
  2451                           	opt stack 0
  2452                           GLOBAL	__end_of_lcd_putdigit
  2453  07DE                     	__end_of_lcd_putdigit:
  2454 ;; =============== function _lcd_putdigit ends ============
  2455                           
  2456                           	signat	_lcd_putdigit,4216
  2457                           	global	_lcd_clear
  2458                           psect	text820,local,class=CODE,delta=2
  2459                           global __ptext820
  2460  079D                     __ptext820:
  2461                           
  2462 ;; *************** function _lcd_clear *****************
  2463 ;; Defined at:
  2464 ;;		line 108 in file "C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\lcd.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;		None
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;		None
  2469 ;; Return value:  Size  Location     Type
  2470 ;;		None               void
  2471 ;; Registers used:
  2472 ;;		wreg, status,2, status,0, pclath, cstack
  2473 ;; Tracked objects:
  2474 ;;		On entry : 0/0
  2475 ;;		On exit  : 0/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2478 ;;      Params:         0       0       0       0
  2479 ;;      Locals:         0       0       0       0
  2480 ;;      Temps:          0       2       0       0
  2481 ;;      Totals:         0       2       0       0
  2482 ;;Total ram usage:        2 bytes
  2483 ;; Hardware stack levels used:    1
  2484 ;; Hardware stack levels required when called:    2
  2485 ;; This function calls:
  2486 ;;		_lcd_write
  2487 ;; This function is called by:
  2488 ;;		_main
  2489 ;;		_lcd_init
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           psect	text820
  2493                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\lcd.c"
  2494                           	line	108
  2495                           	global	__size_of_lcd_clear
  2496  0011                     	__size_of_lcd_clear	equ	__end_of_lcd_clear-_lcd_clear
  2497                           	
  2498  079D                     _lcd_clear:	
  2499                           	opt	stack 5
  2500                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2501                           	line	109
  2502                           	
  2503  079D                     l3780:	
  2504                           ;lcd.c: 109: RA3 = 0;
  2505  079D  1283               	bcf	status, 5	;RP0=0, select bank0
  2506  079E  1303               	bcf	status, 6	;RP1=0, select bank0
  2507  079F  1185               	bcf	(43/8),(43)&7
  2508                           	line	110
  2509                           	
  2510  07A0                     l3782:	
  2511                           ;lcd.c: 110: lcd_write(0x1);
  2512  07A0  3001               	movlw	(01h)
  2513  07A1  2735               	fcall	_lcd_write
  2514                           	line	111
  2515                           	
  2516  07A2                     l3784:	
  2517                           ;lcd.c: 111: _delay((unsigned long)((2)*(20000000/4000.0)));
  2518                           	opt asmopt_off
  2519  07A2  300D               movlw	13
  2520  07A3  1283               	bcf	status, 5	;RP0=0, select bank0
  2521  07A4  1303               	bcf	status, 6	;RP1=0, select bank0
  2522  07A5  00A1               movwf	((??_lcd_clear+0)+0+1),f
  2523  07A6  30FB               	movlw	251
  2524  07A7  00A0               movwf	((??_lcd_clear+0)+0),f
  2525  07A8                     u3937:
  2526  07A8  0BA0               	decfsz	((??_lcd_clear+0)+0),f
  2527  07A9  2FA8               	goto	u3937
  2528  07AA  0BA1               	decfsz	((??_lcd_clear+0)+0+1),f
  2529  07AB  2FA8               	goto	u3937
  2530  07AC  2FAD               	nop2
  2531                           opt asmopt_on
  2532                           
  2533                           	line	112
  2534                           	
  2535  07AD                     l873:	
  2536  07AD  0008               	return
  2537                           	opt stack 0
  2538                           GLOBAL	__end_of_lcd_clear
  2539  07AE                     	__end_of_lcd_clear:
  2540 ;; =============== function _lcd_clear ends ============
  2541                           
  2542                           	signat	_lcd_clear,88
  2543                           	global	_lcd_puts
  2544                           psect	text821,local,class=CODE,delta=2
  2545                           global __ptext821
  2546  0758                     __ptext821:
  2547                           
  2548 ;; *************** function _lcd_puts *****************
  2549 ;; Defined at:
  2550 ;;		line 117 in file "C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\lcd.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  2553 ;;		 -> STR_15(3), STR_14(2), STR_13(2), lcd_putnumber@displayHZ(2), 
  2554 ;;		 -> version(17), qbytes(15), STR_12(4), buffer(10), 
  2555 ;;		 -> STR_11(4), STR_10(2), noinput(17), STR_9(3), 
  2556 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(3), 
  2557 ;;		 -> STR_4(3), STR_3(3), STR_2(3), STR_1(3), 
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;		None
  2560 ;; Return value:  Size  Location     Type
  2561 ;;		None               void
  2562 ;; Registers used:
  2563 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2569 ;;      Params:         0       2       0       0
  2570 ;;      Locals:         0       0       0       0
  2571 ;;      Temps:          0       0       0       0
  2572 ;;      Totals:         0       2       0       0
  2573 ;;Total ram usage:        2 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; Hardware stack levels required when called:    2
  2576 ;; This function calls:
  2577 ;;		_lcd_write
  2578 ;; This function is called by:
  2579 ;;		_doFrequency
  2580 ;;		_main
  2581 ;;		_lcd_putnumber
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           psect	text821
  2585                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\lcd.c"
  2586                           	line	117
  2587                           	global	__size_of_lcd_puts
  2588  001F                     	__size_of_lcd_puts	equ	__end_of_lcd_puts-_lcd_puts
  2589                           	
  2590  0758                     _lcd_puts:	
  2591                           	opt	stack 4
  2592                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2593                           	line	118
  2594                           	
  2595  0758                     l3772:	
  2596                           ;lcd.c: 118: RA3 = 1;
  2597  0758  1283               	bcf	status, 5	;RP0=0, select bank0
  2598  0759  1303               	bcf	status, 6	;RP1=0, select bank0
  2599  075A  1585               	bsf	(43/8),(43)&7
  2600                           	line	119
  2601                           ;lcd.c: 119: while(*s)
  2602  075B  2F6B               	goto	l3778
  2603                           	
  2604  075C                     l877:	
  2605                           	line	120
  2606                           	
  2607  075C                     l3774:	
  2608                           ;lcd.c: 120: lcd_write(*s++);
  2609  075C  0821               	movf	(lcd_puts@s+1),w
  2610  075D  00FF               	movwf	btemp+1
  2611  075E  0820               	movf	(lcd_puts@s),w
  2612  075F  0084               	movwf	fsr0
  2613  0760  2200               	fcall	stringtab
  2614  0761  2735               	fcall	_lcd_write
  2615                           	
  2616  0762                     l3776:	
  2617  0762  3001               	movlw	low(01h)
  2618  0763  1283               	bcf	status, 5	;RP0=0, select bank0
  2619  0764  1303               	bcf	status, 6	;RP1=0, select bank0
  2620  0765  07A0               	addwf	(lcd_puts@s),f
  2621  0766  1803               	skipnc
  2622  0767  0AA1               	incf	(lcd_puts@s+1),f
  2623  0768  3000               	movlw	high(01h)
  2624  0769  07A1               	addwf	(lcd_puts@s+1),f
  2625  076A  2F6B               	goto	l3778
  2626                           	
  2627  076B                     l876:	
  2628                           	line	119
  2629                           	
  2630  076B                     l3778:	
  2631  076B  0821               	movf	(lcd_puts@s+1),w
  2632  076C  00FF               	movwf	btemp+1
  2633  076D  0820               	movf	(lcd_puts@s),w
  2634  076E  0084               	movwf	fsr0
  2635  076F  2200               	fcall	stringtab
  2636  0770  3800               	iorlw	0
  2637  0771  1D03               	skipz
  2638  0772  2F74               	goto	u3711
  2639  0773  2F75               	goto	u3710
  2640  0774                     u3711:
  2641  0774  2F5C               	goto	l3774
  2642  0775                     u3710:
  2643  0775  2F76               	goto	l879
  2644                           	
  2645  0776                     l878:	
  2646                           	line	121
  2647                           	
  2648  0776                     l879:	
  2649  0776  0008               	return
  2650                           	opt stack 0
  2651                           GLOBAL	__end_of_lcd_puts
  2652  0777                     	__end_of_lcd_puts:
  2653 ;; =============== function _lcd_puts ends ============
  2654                           
  2655                           	signat	_lcd_puts,4216
  2656                           	global	_lcd_goto
  2657                           psect	text822,local,class=CODE,delta=2
  2658                           global __ptext822
  2659  07DE                     __ptext822:
  2660                           
  2661 ;; *************** function _lcd_goto *****************
  2662 ;; Defined at:
  2663 ;;		line 137 in file "C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\lcd.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;  pos             1    wreg     unsigned char 
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;  pos             1    0[BANK0 ] unsigned char 
  2668 ;; Return value:  Size  Location     Type
  2669 ;;		None               void
  2670 ;; Registers used:
  2671 ;;		wreg, status,2, status,0, pclath, cstack
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2677 ;;      Params:         0       0       0       0
  2678 ;;      Locals:         0       1       0       0
  2679 ;;      Temps:          0       0       0       0
  2680 ;;      Totals:         0       1       0       0
  2681 ;;Total ram usage:        1 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:    2
  2684 ;; This function calls:
  2685 ;;		_lcd_write
  2686 ;; This function is called by:
  2687 ;;		_doFrequency
  2688 ;;		_main
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           psect	text822
  2692                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\lcd.c"
  2693                           	line	137
  2694                           	global	__size_of_lcd_goto
  2695  0008                     	__size_of_lcd_goto	equ	__end_of_lcd_goto-_lcd_goto
  2696                           	
  2697  07DE                     _lcd_goto:	
  2698                           	opt	stack 4
  2699                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  2700                           ;lcd_goto@pos stored from wreg
  2701  07DE  1283               	bcf	status, 5	;RP0=0, select bank0
  2702  07DF  1303               	bcf	status, 6	;RP1=0, select bank0
  2703  07E0  00A0               	movwf	(lcd_goto@pos)
  2704                           	line	138
  2705                           	
  2706  07E1                     l3768:	
  2707                           ;lcd.c: 138: RA3 = 0;
  2708  07E1  1185               	bcf	(43/8),(43)&7
  2709                           	line	139
  2710                           	
  2711  07E2                     l3770:	
  2712                           ;lcd.c: 139: lcd_write(0x80+pos);
  2713  07E2  0820               	movf	(lcd_goto@pos),w
  2714  07E3  3E80               	addlw	080h
  2715  07E4  2735               	fcall	_lcd_write
  2716                           	line	140
  2717                           	
  2718  07E5                     l885:	
  2719  07E5  0008               	return
  2720                           	opt stack 0
  2721                           GLOBAL	__end_of_lcd_goto
  2722  07E6                     	__end_of_lcd_goto:
  2723 ;; =============== function _lcd_goto ends ============
  2724                           
  2725                           	signat	_lcd_goto,4216
  2726                           	global	_lcd_write
  2727                           psect	text823,local,class=CODE,delta=2
  2728                           global __ptext823
  2729  0735                     __ptext823:
  2730                           
  2731 ;; *************** function _lcd_write *****************
  2732 ;; Defined at:
  2733 ;;		line 95 in file "C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\lcd.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;  c               1    wreg     unsigned char 
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  c               1    6[COMMON] unsigned char 
  2738 ;; Return value:  Size  Location     Type
  2739 ;;		None               void
  2740 ;; Registers used:
  2741 ;;		wreg, status,2, status,0
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2747 ;;      Params:         0       0       0       0
  2748 ;;      Locals:         1       0       0       0
  2749 ;;      Temps:          2       0       0       0
  2750 ;;      Totals:         3       0       0       0
  2751 ;;Total ram usage:        3 bytes
  2752 ;; Hardware stack levels used:    1
  2753 ;; Hardware stack levels required when called:    1
  2754 ;; This function calls:
  2755 ;;		Nothing
  2756 ;; This function is called by:
  2757 ;;		_lcd_init
  2758 ;;		_lcd_clear
  2759 ;;		_lcd_puts
  2760 ;;		_lcd_goto
  2761 ;;		_lcd_putdigit
  2762 ;;		_lcd_putch
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           psect	text823
  2766                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\lcd.c"
  2767                           	line	95
  2768                           	global	__size_of_lcd_write
  2769  0023                     	__size_of_lcd_write	equ	__end_of_lcd_write-_lcd_write
  2770                           	
  2771  0735                     _lcd_write:	
  2772                           	opt	stack 4
  2773                           ; Regs used in _lcd_write: [wreg+status,2+status,0]
  2774                           ;lcd_write@c stored from wreg
  2775  0735  00F6               	movwf	(lcd_write@c)
  2776                           	line	96
  2777                           	
  2778  0736                     l3754:	
  2779                           ;lcd.c: 96: _delay((unsigned long)((40)*(20000000/4000000.0)));
  2780                           	opt asmopt_off
  2781  0736  3042               movlw	66
  2782  0737  00F4               movwf	(??_lcd_write+0)+0,f
  2783  0738                     u3947:
  2784  0738  0BF4               decfsz	(??_lcd_write+0)+0,f
  2785  0739  2F38               	goto	u3947
  2786  073A  0064               	clrwdt
  2787                           opt asmopt_on
  2788                           
  2789                           	line	97
  2790                           	
  2791  073B                     l3756:	
  2792                           ;lcd.c: 97: PORTB = ( (( c >> 4 ) & 0x0F ) | (PORTB & 0xF0) );
  2793  073B  30F0               	movlw	(0F0h)
  2794  073C  1283               	bcf	status, 5	;RP0=0, select bank0
  2795  073D  1303               	bcf	status, 6	;RP1=0, select bank0
  2796  073E  0506               	andwf	(6),w
  2797  073F  00F4               	movwf	(??_lcd_write+0)+0
  2798  0740  0876               	movf	(lcd_write@c),w
  2799  0741  00F5               	movwf	(??_lcd_write+1)+0
  2800  0742  3004               	movlw	04h
  2801  0743                     u3705:
  2802  0743  1003               	clrc
  2803  0744  0CF5               	rrf	(??_lcd_write+1)+0,f
  2804  0745  3EFF               	addlw	-1
  2805  0746  1D03               	skipz
  2806  0747  2F43               	goto	u3705
  2807  0748  0875               	movf	0+(??_lcd_write+1)+0,w
  2808  0749  390F               	andlw	0Fh
  2809  074A  0474               	iorwf	0+(??_lcd_write+0)+0,w
  2810  074B  0086               	movwf	(6)	;volatile
  2811                           	line	98
  2812                           	
  2813  074C                     l3758:	
  2814                           ;lcd.c: 98: ((RA1 = 1), (RA1=0));
  2815  074C  1485               	bsf	(41/8),(41)&7
  2816                           	
  2817  074D                     l3760:	
  2818  074D  1085               	bcf	(41/8),(41)&7
  2819                           	line	99
  2820                           	
  2821  074E                     l3762:	
  2822                           ;lcd.c: 99: PORTB = ( ( c & 0x0F ) | (PORTB & 0xF0) );
  2823  074E  30F0               	movlw	(0F0h)
  2824  074F  0506               	andwf	(6),w
  2825  0750  00F4               	movwf	(??_lcd_write+0)+0
  2826  0751  0876               	movf	(lcd_write@c),w
  2827  0752  390F               	andlw	0Fh
  2828  0753  0474               	iorwf	0+(??_lcd_write+0)+0,w
  2829  0754  0086               	movwf	(6)	;volatile
  2830                           	line	100
  2831                           	
  2832  0755                     l3764:	
  2833                           ;lcd.c: 100: ((RA1 = 1), (RA1=0));
  2834  0755  1485               	bsf	(41/8),(41)&7
  2835                           	
  2836  0756                     l3766:	
  2837  0756  1085               	bcf	(41/8),(41)&7
  2838                           	line	101
  2839                           	
  2840  0757                     l870:	
  2841  0757  0008               	return
  2842                           	opt stack 0
  2843                           GLOBAL	__end_of_lcd_write
  2844  0758                     	__end_of_lcd_write:
  2845 ;; =============== function _lcd_write ends ============
  2846                           
  2847                           	signat	_lcd_write,4216
  2848                           	global	_timersOFF
  2849                           psect	text824,local,class=CODE,delta=2
  2850                           global __ptext824
  2851  04BA                     __ptext824:
  2852                           
  2853 ;; *************** function _timersOFF *****************
  2854 ;; Defined at:
  2855 ;;		line 403 in file "C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;		None
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;		None
  2860 ;; Return value:  Size  Location     Type
  2861 ;;		None               void
  2862 ;; Registers used:
  2863 ;;		wreg, status,2, status,0, pclath, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2869 ;;      Params:         0       0       0       0
  2870 ;;      Locals:         0       0       0       0
  2871 ;;      Temps:          0      10       0       0
  2872 ;;      Totals:         0      10       0       0
  2873 ;;Total ram usage:       10 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    2
  2876 ;; This function calls:
  2877 ;;		___tmul
  2878 ;;		___lmul
  2879 ;; This function is called by:
  2880 ;;		_main
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           psect	text824
  2884                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
  2885                           	line	403
  2886                           	global	__size_of_timersOFF
  2887  0067                     	__size_of_timersOFF	equ	__end_of_timersOFF-_timersOFF
  2888                           	
  2889  04BA                     _timersOFF:	
  2890                           	opt	stack 5
  2891                           ; Regs used in _timersOFF: [wreg+status,2+status,0+pclath+cstack]
  2892                           	line	405
  2893                           	
  2894  04BA                     l3740:	
  2895                           ;blink.c: 405: TRISA = 0x00;
  2896  04BA  1683               	bsf	status, 5	;RP0=1, select bank1
  2897  04BB  1303               	bcf	status, 6	;RP1=0, select bank1
  2898  04BC  0185               	clrf	(133)^080h	;volatile
  2899                           	line	406
  2900                           	
  2901  04BD                     l3742:	
  2902                           ;blink.c: 406: T0IE = 0;
  2903  04BD  128B               	bcf	(93/8),(93)&7
  2904                           	line	407
  2905                           	
  2906  04BE                     l3744:	
  2907                           ;blink.c: 407: TMR1IE = 0;
  2908  04BE  100C               	bcf	(1120/8)^080h,(1120)&7
  2909                           	line	408
  2910                           	
  2911  04BF                     l3746:	
  2912                           ;blink.c: 408: TMR2IE = 0;
  2913  04BF  108C               	bcf	(1121/8)^080h,(1121)&7
  2914                           	line	409
  2915                           	
  2916  04C0                     l3748:	
  2917                           ;blink.c: 409: RA0 = 1;
  2918  04C0  1283               	bcf	status, 5	;RP0=0, select bank0
  2919  04C1  1303               	bcf	status, 6	;RP1=0, select bank0
  2920  04C2  1405               	bsf	(40/8),(40)&7
  2921                           	line	411
  2922                           	
  2923  04C3                     l3750:	
  2924                           ;blink.c: 411: number = (preScaleValue * 256 * TMR0cnt) + (preScaleValue * TMR0);
  2925  04C3  0801               	movf	(1),w	;volatile
  2926  04C4  00AC               	movwf	((??_timersOFF+0)+0)
  2927  04C5  01AD               	clrf	((??_timersOFF+0)+0+1)
  2928  04C6  01AE               	clrf	((??_timersOFF+0)+0+2)
  2929  04C7  082C               	movf	0+(??_timersOFF+0)+0,w
  2930  04C8  00A0               	movwf	(?___tmul)
  2931  04C9  082D               	movf	1+(??_timersOFF+0)+0,w
  2932  04CA  00A1               	movwf	(?___tmul+1)
  2933  04CB  082E               	movf	2+(??_timersOFF+0)+0,w
  2934  04CC  00A2               	movwf	(?___tmul+2)
  2935  04CD  084D               	movf	(_preScaleValue),w
  2936  04CE  00A3               	movwf	0+(?___tmul)+03h
  2937  04CF  084E               	movf	(_preScaleValue+1),w
  2938  04D0  00A4               	movwf	1+(?___tmul)+03h
  2939  04D1  084F               	movf	(_preScaleValue+2),w
  2940  04D2  00A5               	movwf	2+(?___tmul)+03h
  2941  04D3  26F7               	fcall	___tmul
  2942  04D4  1283               	bcf	status, 5	;RP0=0, select bank0
  2943  04D5  1303               	bcf	status, 6	;RP1=0, select bank0
  2944  04D6  0820               	movf	(0+(?___tmul)),w
  2945  04D7  00AF               	movwf	((??_timersOFF+3)+0)
  2946  04D8  0821               	movf	(1+(?___tmul)),w
  2947  04D9  00B0               	movwf	((??_timersOFF+3)+0+1)
  2948  04DA  0822               	movf	(2+(?___tmul)),w
  2949  04DB  00B1               	movwf	((??_timersOFF+3)+0+2)
  2950  04DC  01B2               	clrf	((??_timersOFF+3)+0+3)
  2951  04DD  084D               	movf	(_preScaleValue),w
  2952  04DE  00B3               	movwf	((??_timersOFF+7)+0)
  2953  04DF  084E               	movf	(_preScaleValue+1),w
  2954  04E0  00B4               	movwf	((??_timersOFF+7)+0+1)
  2955  04E1  084F               	movf	(_preScaleValue+2),w
  2956  04E2  00B5               	movwf	((??_timersOFF+7)+0+2)
  2957  04E3  3008               	movlw	08h
  2958  04E4                     u3685:
  2959  04E4  1003               	clrc
  2960  04E5  0DB3               	rlf	(??_timersOFF+7)+0,f
  2961  04E6  0DB4               	rlf	(??_timersOFF+7)+1,f
  2962  04E7  0DB5               	rlf	(??_timersOFF+7)+2,f
  2963  04E8                     u3680:
  2964  04E8  3EFF               	addlw	-1
  2965  04E9  1D03               	skipz
  2966  04EA  2CE4               	goto	u3685
  2967  04EB  0833               	movf	0+(??_timersOFF+7)+0,w
  2968  04EC  00A0               	movwf	(?___lmul)
  2969  04ED  0834               	movf	1+(??_timersOFF+7)+0,w
  2970  04EE  00A1               	movwf	((?___lmul))+1
  2971  04EF  0835               	movf	2+(??_timersOFF+7)+0,w
  2972  04F0  00A2               	movwf	((?___lmul))+2
  2973  04F1  01A3               	clrf	((?___lmul))+3
  2974  04F2  0844               	movf	(_TMR0cnt+3),w
  2975  04F3  00A7               	movwf	3+(?___lmul)+04h
  2976  04F4  0843               	movf	(_TMR0cnt+2),w
  2977  04F5  00A6               	movwf	2+(?___lmul)+04h
  2978  04F6  0842               	movf	(_TMR0cnt+1),w
  2979  04F7  00A5               	movwf	1+(?___lmul)+04h
  2980  04F8  0841               	movf	(_TMR0cnt),w
  2981  04F9  00A4               	movwf	0+(?___lmul)+04h
  2982                           
  2983  04FA  25D9               	fcall	___lmul
  2984  04FB  1283               	bcf	status, 5	;RP0=0, select bank0
  2985  04FC  1303               	bcf	status, 6	;RP1=0, select bank0
  2986  04FD  0820               	movf	(0+(?___lmul)),w
  2987  04FE  07AF               	addwf	(??_timersOFF+3)+0,f
  2988  04FF  0821               	movf	(1+(?___lmul)),w
  2989  0500  1803               	skipnc
  2990  0501  0F21               	incfsz	(1+(?___lmul)),w
  2991  0502  2D04               	goto	u3690
  2992  0503  2D05               	goto	u3691
  2993  0504                     u3690:
  2994  0504  07B0               	addwf	(??_timersOFF+3)+1,f
  2995  0505                     u3691:
  2996  0505  0822               	movf	(2+(?___lmul)),w
  2997  0506  1803               	skipnc
  2998  0507  0F22               	incfsz	(2+(?___lmul)),w
  2999  0508  2D0A               	goto	u3692
  3000  0509  2D0B               	goto	u3693
  3001  050A                     u3692:
  3002  050A  07B1               	addwf	(??_timersOFF+3)+2,f
  3003  050B                     u3693:
  3004  050B  0823               	movf	(3+(?___lmul)),w
  3005  050C  1803               	skipnc
  3006  050D  0A23               	incf	(3+(?___lmul)),w
  3007  050E  07B2               	addwf	(??_timersOFF+3)+3,f
  3008  050F  0832               	movf	3+(??_timersOFF+3)+0,w
  3009  0510  00CC               	movwf	(_number+3)
  3010  0511  0831               	movf	2+(??_timersOFF+3)+0,w
  3011  0512  00CB               	movwf	(_number+2)
  3012  0513  0830               	movf	1+(??_timersOFF+3)+0,w
  3013  0514  00CA               	movwf	(_number+1)
  3014  0515  082F               	movf	0+(??_timersOFF+3)+0,w
  3015  0516  00C9               	movwf	(_number)
  3016                           
  3017                           	line	412
  3018                           	
  3019  0517                     l3752:	
  3020                           ;blink.c: 412: _delay((unsigned long)((10)*(20000000/4000.0)));
  3021                           	opt asmopt_off
  3022  0517  3041               movlw	65
  3023  0518  00AD               movwf	((??_timersOFF+0)+0+1),f
  3024  0519  30EE               	movlw	238
  3025  051A  00AC               movwf	((??_timersOFF+0)+0),f
  3026  051B                     u3957:
  3027  051B  0BAC               	decfsz	((??_timersOFF+0)+0),f
  3028  051C  2D1B               	goto	u3957
  3029  051D  0BAD               	decfsz	((??_timersOFF+0)+0+1),f
  3030  051E  2D1B               	goto	u3957
  3031  051F  0064               	clrwdt
  3032                           opt asmopt_on
  3033                           
  3034                           	line	413
  3035                           	
  3036  0520                     l465:	
  3037  0520  0008               	return
  3038                           	opt stack 0
  3039                           GLOBAL	__end_of_timersOFF
  3040  0521                     	__end_of_timersOFF:
  3041 ;; =============== function _timersOFF ends ============
  3042                           
  3043                           	signat	_timersOFF,88
  3044                           	global	_timersON
  3045                           psect	text825,local,class=CODE,delta=2
  3046                           global __ptext825
  3047  0777                     __ptext825:
  3048                           
  3049 ;; *************** function _timersON *****************
  3050 ;; Defined at:
  3051 ;;		line 384 in file "C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;		None
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;		None
  3056 ;; Return value:  Size  Location     Type
  3057 ;;		None               void
  3058 ;; Registers used:
  3059 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3065 ;;      Params:         0       0       0       0
  3066 ;;      Locals:         0       0       0       0
  3067 ;;      Temps:          0       0       0       0
  3068 ;;      Totals:         0       0       0       0
  3069 ;;Total ram usage:        0 bytes
  3070 ;; Hardware stack levels used:    1
  3071 ;; Hardware stack levels required when called:    3
  3072 ;; This function calls:
  3073 ;;		_initTimer0
  3074 ;;		_initTimer1
  3075 ;;		_initTimer2
  3076 ;; This function is called by:
  3077 ;;		_main
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           psect	text825
  3081                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
  3082                           	line	384
  3083                           	global	__size_of_timersON
  3084  0014                     	__size_of_timersON	equ	__end_of_timersON-_timersON
  3085                           	
  3086  0777                     _timersON:	
  3087                           	opt	stack 4
  3088                           ; Regs used in _timersON: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3089                           	line	385
  3090                           	
  3091  0777                     l3722:	
  3092                           ;blink.c: 385: RA0 = 0;
  3093  0777  1283               	bcf	status, 5	;RP0=0, select bank0
  3094  0778  1303               	bcf	status, 6	;RP1=0, select bank0
  3095  0779  1005               	bcf	(40/8),(40)&7
  3096                           	line	388
  3097                           	
  3098  077A                     l3724:	
  3099                           ;blink.c: 388: TRISA = 0x10;
  3100  077A  3010               	movlw	(010h)
  3101  077B  1683               	bsf	status, 5	;RP0=1, select bank1
  3102  077C  1303               	bcf	status, 6	;RP1=0, select bank1
  3103  077D  0085               	movwf	(133)^080h	;volatile
  3104                           	line	390
  3105                           	
  3106  077E                     l3726:	
  3107                           ;blink.c: 390: initTimer0();
  3108  077E  2625               	fcall	_initTimer0
  3109                           	line	391
  3110                           	
  3111  077F                     l3728:	
  3112                           ;blink.c: 391: initTimer1();
  3113  077F  27AE               	fcall	_initTimer1
  3114                           	line	392
  3115                           	
  3116  0780                     l3730:	
  3117                           ;blink.c: 392: initTimer2();
  3118  0780  27BA               	fcall	_initTimer2
  3119                           	line	394
  3120                           	
  3121  0781                     l3732:	
  3122                           ;blink.c: 394: TMR1cnt = 0;
  3123  0781  1283               	bcf	status, 5	;RP0=0, select bank0
  3124  0782  1303               	bcf	status, 6	;RP1=0, select bank0
  3125  0783  01D0               	clrf	(_TMR1cnt)
  3126  0784  01D1               	clrf	(_TMR1cnt+1)
  3127                           	line	396
  3128                           	
  3129  0785                     l3734:	
  3130                           ;blink.c: 396: TMR2IE = 1;
  3131  0785  1683               	bsf	status, 5	;RP0=1, select bank1
  3132  0786  1303               	bcf	status, 6	;RP1=0, select bank1
  3133  0787  148C               	bsf	(1121/8)^080h,(1121)&7
  3134                           	line	397
  3135                           	
  3136  0788                     l3736:	
  3137                           ;blink.c: 397: TMR1IE = 1;
  3138  0788  140C               	bsf	(1120/8)^080h,(1120)&7
  3139                           	line	398
  3140                           	
  3141  0789                     l3738:	
  3142                           ;blink.c: 398: T0IE = 1;
  3143  0789  168B               	bsf	(93/8),(93)&7
  3144                           	line	399
  3145                           	
  3146  078A                     l462:	
  3147  078A  0008               	return
  3148                           	opt stack 0
  3149                           GLOBAL	__end_of_timersON
  3150  078B                     	__end_of_timersON:
  3151 ;; =============== function _timersON ends ============
  3152                           
  3153                           	signat	_timersON,88
  3154                           	global	_ultoa
  3155                           psect	text826,local,class=CODE,delta=2
  3156                           global __ptext826
  3157  0351                     __ptext826:
  3158                           
  3159 ;; *************** function _ultoa *****************
  3160 ;; Defined at:
  3161 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ltoa.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;  buf             1    wreg     PTR unsigned char 
  3164 ;;		 -> buffer(10), 
  3165 ;;  val             4   13[BANK0 ] unsigned long 
  3166 ;;  base            2   17[BANK0 ] int 
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;  buf             1   24[BANK0 ] PTR unsigned char 
  3169 ;;		 -> buffer(10), 
  3170 ;;  v               4   19[BANK0 ] unsigned long 
  3171 ;;  c               1   23[BANK0 ] unsigned char 
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      PTR unsigned char 
  3174 ;; Registers used:
  3175 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3181 ;;      Params:         0       6       0       0
  3182 ;;      Locals:         0       6       0       0
  3183 ;;      Temps:          1       0       0       0
  3184 ;;      Totals:         1      12       0       0
  3185 ;;Total ram usage:       13 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:    2
  3188 ;; This function calls:
  3189 ;;		___lldiv
  3190 ;;		___llmod
  3191 ;; This function is called by:
  3192 ;;		_doFrequency
  3193 ;;		_ltoa
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           psect	text826
  3197                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ltoa.c"
  3198                           	line	17
  3199                           	global	__size_of_ultoa
  3200  0091                     	__size_of_ultoa	equ	__end_of_ultoa-_ultoa
  3201                           	
  3202  0351                     _ultoa:	
  3203                           	opt	stack 4
  3204                           ; Regs used in _ultoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3205                           ;ultoa@buf stored from wreg
  3206                           	line	21
  3207  0351  1283               	bcf	status, 5	;RP0=0, select bank0
  3208  0352  1303               	bcf	status, 6	;RP1=0, select bank0
  3209  0353  00B8               	movwf	(ultoa@buf)
  3210                           	
  3211  0354                     l3696:	
  3212  0354  0830               	movf	(ultoa@val+3),w
  3213  0355  00B6               	movwf	(ultoa@v+3)
  3214  0356  082F               	movf	(ultoa@val+2),w
  3215  0357  00B5               	movwf	(ultoa@v+2)
  3216  0358  082E               	movf	(ultoa@val+1),w
  3217  0359  00B4               	movwf	(ultoa@v+1)
  3218  035A  082D               	movf	(ultoa@val),w
  3219  035B  00B3               	movwf	(ultoa@v)
  3220                           
  3221  035C  2B5D               	goto	l3698
  3222                           	line	22
  3223                           	
  3224  035D                     l1308:	
  3225                           	line	23
  3226                           	
  3227  035D                     l3698:	
  3228  035D  0831               	movf	(ultoa@base),w
  3229  035E  00A0               	movwf	(?___lldiv)
  3230  035F  0832               	movf	(ultoa@base+1),w
  3231  0360  00A1               	movwf	(?___lldiv+1)
  3232  0361  3000               	movlw	0
  3233  0362  1BA1               	btfsc	(?___lldiv+1),7
  3234  0363  30FF               	movlw	255
  3235  0364  00A2               	movwf	(?___lldiv+2)
  3236  0365  00A3               	movwf	(?___lldiv+3)
  3237  0366  0836               	movf	(ultoa@v+3),w
  3238  0367  00A7               	movwf	3+(?___lldiv)+04h
  3239  0368  0835               	movf	(ultoa@v+2),w
  3240  0369  00A6               	movwf	2+(?___lldiv)+04h
  3241  036A  0834               	movf	(ultoa@v+1),w
  3242  036B  00A5               	movwf	1+(?___lldiv)+04h
  3243  036C  0833               	movf	(ultoa@v),w
  3244  036D  00A4               	movwf	0+(?___lldiv)+04h
  3245                           
  3246  036E  23E2               	fcall	___lldiv
  3247  036F  1283               	bcf	status, 5	;RP0=0, select bank0
  3248  0370  1303               	bcf	status, 6	;RP1=0, select bank0
  3249  0371  0823               	movf	(3+(?___lldiv)),w
  3250  0372  00B6               	movwf	(ultoa@v+3)
  3251  0373  0822               	movf	(2+(?___lldiv)),w
  3252  0374  00B5               	movwf	(ultoa@v+2)
  3253  0375  0821               	movf	(1+(?___lldiv)),w
  3254  0376  00B4               	movwf	(ultoa@v+1)
  3255  0377  0820               	movf	(0+(?___lldiv)),w
  3256  0378  00B3               	movwf	(ultoa@v)
  3257                           
  3258                           	line	24
  3259                           	
  3260  0379                     l3700:	
  3261  0379  3001               	movlw	(01h)
  3262  037A  00F6               	movwf	(??_ultoa+0)+0
  3263  037B  0876               	movf	(??_ultoa+0)+0,w
  3264  037C  07B8               	addwf	(ultoa@buf),f
  3265                           	line	25
  3266                           	
  3267  037D                     l3702:	
  3268  037D  0836               	movf	(ultoa@v+3),w
  3269  037E  0435               	iorwf	(ultoa@v+2),w
  3270  037F  0434               	iorwf	(ultoa@v+1),w
  3271  0380  0433               	iorwf	(ultoa@v),w
  3272  0381  1D03               	skipz
  3273  0382  2B84               	goto	u3651
  3274  0383  2B85               	goto	u3650
  3275  0384                     u3651:
  3276  0384  2B5D               	goto	l3698
  3277  0385                     u3650:
  3278  0385  2B86               	goto	l3704
  3279                           	
  3280  0386                     l1309:	
  3281                           	line	26
  3282                           	
  3283  0386                     l3704:	
  3284  0386  0838               	movf	(ultoa@buf),w
  3285  0387  0084               	movwf	fsr0
  3286  0388  1383               	bcf	status, 7	;select IRP bank0
  3287  0389  0180               	clrf	indf
  3288                           	
  3289  038A                     l3706:	
  3290  038A  3001               	movlw	low(01h)
  3291  038B  02B8               	subwf	(ultoa@buf),f
  3292  038C  2B8D               	goto	l3708
  3293                           	line	27
  3294                           	
  3295  038D                     l1310:	
  3296                           	line	28
  3297                           	
  3298  038D                     l3708:	
  3299  038D  0831               	movf	(ultoa@base),w
  3300  038E  00A0               	movwf	(?___llmod)
  3301  038F  0832               	movf	(ultoa@base+1),w
  3302  0390  00A1               	movwf	(?___llmod+1)
  3303  0391  3000               	movlw	0
  3304  0392  1BA1               	btfsc	(?___llmod+1),7
  3305  0393  30FF               	movlw	255
  3306  0394  00A2               	movwf	(?___llmod+2)
  3307  0395  00A3               	movwf	(?___llmod+3)
  3308  0396  0830               	movf	(ultoa@val+3),w
  3309  0397  00A7               	movwf	3+(?___llmod)+04h
  3310  0398  082F               	movf	(ultoa@val+2),w
  3311  0399  00A6               	movwf	2+(?___llmod)+04h
  3312  039A  082E               	movf	(ultoa@val+1),w
  3313  039B  00A5               	movwf	1+(?___llmod)+04h
  3314  039C  082D               	movf	(ultoa@val),w
  3315  039D  00A4               	movwf	0+(?___llmod)+04h
  3316                           
  3317  039E  2521               	fcall	___llmod
  3318  039F  1283               	bcf	status, 5	;RP0=0, select bank0
  3319  03A0  1303               	bcf	status, 6	;RP1=0, select bank0
  3320  03A1  0820               	movf	0+(((0+(?___llmod)))),w
  3321  03A2  00F6               	movwf	(??_ultoa+0)+0
  3322  03A3  0876               	movf	(??_ultoa+0)+0,w
  3323  03A4  00B7               	movwf	(ultoa@c)
  3324                           	line	29
  3325                           	
  3326  03A5                     l3710:	
  3327  03A5  0831               	movf	(ultoa@base),w
  3328  03A6  00A0               	movwf	(?___lldiv)
  3329  03A7  0832               	movf	(ultoa@base+1),w
  3330  03A8  00A1               	movwf	(?___lldiv+1)
  3331  03A9  3000               	movlw	0
  3332  03AA  1BA1               	btfsc	(?___lldiv+1),7
  3333  03AB  30FF               	movlw	255
  3334  03AC  00A2               	movwf	(?___lldiv+2)
  3335  03AD  00A3               	movwf	(?___lldiv+3)
  3336  03AE  0830               	movf	(ultoa@val+3),w
  3337  03AF  00A7               	movwf	3+(?___lldiv)+04h
  3338  03B0  082F               	movf	(ultoa@val+2),w
  3339  03B1  00A6               	movwf	2+(?___lldiv)+04h
  3340  03B2  082E               	movf	(ultoa@val+1),w
  3341  03B3  00A5               	movwf	1+(?___lldiv)+04h
  3342  03B4  082D               	movf	(ultoa@val),w
  3343  03B5  00A4               	movwf	0+(?___lldiv)+04h
  3344                           
  3345  03B6  23E2               	fcall	___lldiv
  3346  03B7  1283               	bcf	status, 5	;RP0=0, select bank0
  3347  03B8  1303               	bcf	status, 6	;RP1=0, select bank0
  3348  03B9  0823               	movf	(3+(?___lldiv)),w
  3349  03BA  00B0               	movwf	(ultoa@val+3)
  3350  03BB  0822               	movf	(2+(?___lldiv)),w
  3351  03BC  00AF               	movwf	(ultoa@val+2)
  3352  03BD  0821               	movf	(1+(?___lldiv)),w
  3353  03BE  00AE               	movwf	(ultoa@val+1)
  3354  03BF  0820               	movf	(0+(?___lldiv)),w
  3355  03C0  00AD               	movwf	(ultoa@val)
  3356                           
  3357                           	line	30
  3358                           	
  3359  03C1                     l3712:	
  3360  03C1  300A               	movlw	(0Ah)
  3361  03C2  0237               	subwf	(ultoa@c),w
  3362  03C3  1C03               	skipc
  3363  03C4  2BC6               	goto	u3661
  3364  03C5  2BC7               	goto	u3660
  3365  03C6                     u3661:
  3366  03C6  2BCB               	goto	l1311
  3367  03C7                     u3660:
  3368                           	line	31
  3369                           	
  3370  03C7                     l3714:	
  3371  03C7  3007               	movlw	(07h)
  3372  03C8  00F6               	movwf	(??_ultoa+0)+0
  3373  03C9  0876               	movf	(??_ultoa+0)+0,w
  3374  03CA  07B7               	addwf	(ultoa@c),f
  3375                           	
  3376  03CB                     l1311:	
  3377                           	line	32
  3378  03CB  3030               	movlw	(030h)
  3379  03CC  00F6               	movwf	(??_ultoa+0)+0
  3380  03CD  0876               	movf	(??_ultoa+0)+0,w
  3381  03CE  07B7               	addwf	(ultoa@c),f
  3382                           	line	33
  3383                           	
  3384  03CF                     l3716:	
  3385  03CF  0837               	movf	(ultoa@c),w
  3386  03D0  00F6               	movwf	(??_ultoa+0)+0
  3387  03D1  0838               	movf	(ultoa@buf),w
  3388  03D2  0084               	movwf	fsr0
  3389  03D3  0876               	movf	(??_ultoa+0)+0,w
  3390  03D4  1383               	bcf	status, 7	;select IRP bank0
  3391  03D5  0080               	movwf	indf
  3392                           	
  3393  03D6                     l3718:	
  3394  03D6  3001               	movlw	low(01h)
  3395  03D7  02B8               	subwf	(ultoa@buf),f
  3396                           	line	34
  3397                           	
  3398  03D8                     l3720:	
  3399  03D8  0830               	movf	(ultoa@val+3),w
  3400  03D9  042F               	iorwf	(ultoa@val+2),w
  3401  03DA  042E               	iorwf	(ultoa@val+1),w
  3402  03DB  042D               	iorwf	(ultoa@val),w
  3403  03DC  1D03               	skipz
  3404  03DD  2BDF               	goto	u3671
  3405  03DE  2BE0               	goto	u3670
  3406  03DF                     u3671:
  3407  03DF  2B8D               	goto	l3708
  3408  03E0                     u3670:
  3409  03E0  2BE1               	goto	l1313
  3410                           	
  3411  03E1                     l1312:	
  3412                           	line	36
  3413                           ;	Return value of _ultoa is never used
  3414                           	
  3415  03E1                     l1313:	
  3416  03E1  0008               	return
  3417                           	opt stack 0
  3418                           GLOBAL	__end_of_ultoa
  3419  03E2                     	__end_of_ultoa:
  3420 ;; =============== function _ultoa ends ============
  3421                           
  3422                           	signat	_ultoa,12409
  3423                           	global	___tmul
  3424                           psect	text827,local,class=CODE,delta=2
  3425                           global __ptext827
  3426  06F7                     __ptext827:
  3427                           
  3428 ;; *************** function ___tmul *****************
  3429 ;; Defined at:
  3430 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\tmul.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;  multiplier      3    0[BANK0 ] unsigned um
  3433 ;;  multiplicand    3    3[BANK0 ] unsigned um
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;  product         3    4[COMMON] unsigned um
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  3    0[BANK0 ] unsigned um
  3438 ;; Registers used:
  3439 ;;		wreg, status,2, status,0
  3440 ;; Tracked objects:
  3441 ;;		On entry : 0/0
  3442 ;;		On exit  : 0/0
  3443 ;;		Unchanged: 0/0
  3444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3445 ;;      Params:         0       6       0       0
  3446 ;;      Locals:         3       0       0       0
  3447 ;;      Temps:          0       0       0       0
  3448 ;;      Totals:         3       6       0       0
  3449 ;;Total ram usage:        9 bytes
  3450 ;; Hardware stack levels used:    1
  3451 ;; Hardware stack levels required when called:    1
  3452 ;; This function calls:
  3453 ;;		Nothing
  3454 ;; This function is called by:
  3455 ;;		_timersOFF
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           psect	text827
  3459                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\tmul.c"
  3460                           	line	3
  3461                           	global	__size_of___tmul
  3462  003E                     	__size_of___tmul	equ	__end_of___tmul-___tmul
  3463                           	
  3464  06F7                     ___tmul:	
  3465                           	opt	stack 5
  3466                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  3467                           	line	4
  3468                           	
  3469  06F7                     l3682:	
  3470  06F7  3000               	movlw	0
  3471  06F8  00F4               	movwf	(___tmul@product)
  3472  06F9  3000               	movlw	0
  3473  06FA  00F5               	movwf	(___tmul@product+1)
  3474  06FB  3000               	movlw	0
  3475  06FC  00F6               	movwf	(___tmul@product+2)
  3476  06FD  2EFE               	goto	l3684
  3477                           	line	6
  3478                           	
  3479  06FE                     l1648:	
  3480                           	line	7
  3481                           	
  3482  06FE                     l3684:	
  3483  06FE  1283               	bcf	status, 5	;RP0=0, select bank0
  3484  06FF  1303               	bcf	status, 6	;RP1=0, select bank0
  3485  0700  1C20               	btfss	(___tmul@multiplier),(0)&7
  3486  0701  2F03               	goto	u3601
  3487  0702  2F04               	goto	u3600
  3488  0703                     u3601:
  3489  0703  2F15               	goto	l3688
  3490  0704                     u3600:
  3491                           	line	8
  3492                           	
  3493  0704                     l3686:	
  3494  0704  0823               	movf	(___tmul@multiplicand),w
  3495  0705  07F4               	addwf	(___tmul@product),f
  3496  0706  0824               	movf	(___tmul@multiplicand+1),w
  3497  0707  1103               	clrz
  3498  0708  1803               	skipnc
  3499  0709  0A24               	incf	(___tmul@multiplicand+1),w
  3500  070A  1903               	skipnz
  3501  070B  2F0D               	goto	u3611
  3502  070C  07F5               	addwf	(___tmul@product+1),f
  3503  070D                     u3611:
  3504  070D  0825               	movf	(___tmul@multiplicand+2),w
  3505  070E  1103               	clrz
  3506  070F  1803               	skipnc
  3507  0710  0A25               	incf	(___tmul@multiplicand+2),w
  3508  0711  1903               	skipnz
  3509  0712  2F14               	goto	u3612
  3510  0713  07F6               	addwf	(___tmul@product+2),f
  3511  0714                     u3612:
  3512                           
  3513  0714  2F15               	goto	l3688
  3514                           	
  3515  0715                     l1649:	
  3516                           	line	9
  3517                           	
  3518  0715                     l3688:	
  3519  0715  3001               	movlw	01h
  3520  0716                     u3625:
  3521  0716  1003               	clrc
  3522  0717  0DA3               	rlf	(___tmul@multiplicand),f
  3523  0718  0DA4               	rlf	(___tmul@multiplicand+1),f
  3524  0719  0DA5               	rlf	(___tmul@multiplicand+2),f
  3525  071A  3EFF               	addlw	-1
  3526  071B  1D03               	skipz
  3527  071C  2F16               	goto	u3625
  3528                           	line	10
  3529                           	
  3530  071D                     l3690:	
  3531  071D  3001               	movlw	01h
  3532  071E                     u3635:
  3533  071E  1003               	clrc
  3534  071F  0CA2               	rrf	(___tmul@multiplier+2),f
  3535  0720  0CA1               	rrf	(___tmul@multiplier+1),f
  3536  0721  0CA0               	rrf	(___tmul@multiplier),f
  3537  0722  3EFF               	addlw	-1
  3538  0723  1D03               	skipz
  3539  0724  2F1E               	goto	u3635
  3540                           
  3541                           	line	11
  3542  0725  0822               	movf	(___tmul@multiplier+2),w
  3543  0726  0421               	iorwf	(___tmul@multiplier+1),w
  3544  0727  0420               	iorwf	(___tmul@multiplier),w
  3545  0728  1D03               	skipz
  3546  0729  2F2B               	goto	u3641
  3547  072A  2F2C               	goto	u3640
  3548  072B                     u3641:
  3549  072B  2EFE               	goto	l3684
  3550  072C                     u3640:
  3551  072C  2F2D               	goto	l3692
  3552                           	
  3553  072D                     l1650:	
  3554                           	line	12
  3555                           	
  3556  072D                     l3692:	
  3557  072D  0874               	movf	(___tmul@product),w
  3558  072E  00A0               	movwf	(?___tmul)
  3559  072F  0875               	movf	(___tmul@product+1),w
  3560  0730  00A1               	movwf	(?___tmul+1)
  3561  0731  0876               	movf	(___tmul@product+2),w
  3562  0732  00A2               	movwf	(?___tmul+2)
  3563  0733  2F34               	goto	l1651
  3564                           	
  3565  0734                     l3694:	
  3566                           	line	13
  3567                           	
  3568  0734                     l1651:	
  3569  0734  0008               	return
  3570                           	opt stack 0
  3571                           GLOBAL	__end_of___tmul
  3572  0735                     	__end_of___tmul:
  3573 ;; =============== function ___tmul ends ============
  3574                           
  3575                           	signat	___tmul,8315
  3576                           	global	___awmod
  3577                           psect	text828,local,class=CODE,delta=2
  3578                           global __ptext828
  3579  0452                     __ptext828:
  3580                           
  3581 ;; *************** function ___awmod *****************
  3582 ;; Defined at:
  3583 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awmod.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  divisor         2    0[BANK0 ] int 
  3586 ;;  dividend        2    2[BANK0 ] int 
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;  sign            1    6[COMMON] unsigned char 
  3589 ;;  counter         1    5[COMMON] unsigned char 
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  2    0[BANK0 ] int 
  3592 ;; Registers used:
  3593 ;;		wreg, status,2, status,0
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3599 ;;      Params:         0       4       0       0
  3600 ;;      Locals:         2       0       0       0
  3601 ;;      Temps:          1       0       0       0
  3602 ;;      Totals:         3       4       0       0
  3603 ;;Total ram usage:        7 bytes
  3604 ;; Hardware stack levels used:    1
  3605 ;; Hardware stack levels required when called:    1
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		_lcd_putnumber
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           psect	text828
  3613                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awmod.c"
  3614                           	line	5
  3615                           	global	__size_of___awmod
  3616  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  3617                           	
  3618  0452                     ___awmod:	
  3619                           	opt	stack 4
  3620                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3621                           	line	8
  3622                           	
  3623  0452                     l3648:	
  3624  0452  01F6               	clrf	(___awmod@sign)
  3625                           	line	9
  3626  0453  1283               	bcf	status, 5	;RP0=0, select bank0
  3627  0454  1303               	bcf	status, 6	;RP1=0, select bank0
  3628  0455  1FA3               	btfss	(___awmod@dividend+1),7
  3629  0456  2C58               	goto	u3511
  3630  0457  2C59               	goto	u3510
  3631  0458                     u3511:
  3632  0458  2C62               	goto	l3652
  3633  0459                     u3510:
  3634                           	line	10
  3635                           	
  3636  0459                     l3650:	
  3637  0459  09A2               	comf	(___awmod@dividend),f
  3638  045A  09A3               	comf	(___awmod@dividend+1),f
  3639  045B  0AA2               	incf	(___awmod@dividend),f
  3640  045C  1903               	skipnz
  3641  045D  0AA3               	incf	(___awmod@dividend+1),f
  3642                           	line	11
  3643  045E  01F6               	clrf	(___awmod@sign)
  3644  045F  1403               	bsf	status,0
  3645  0460  0DF6               	rlf	(___awmod@sign),f
  3646  0461  2C62               	goto	l3652
  3647                           	line	12
  3648                           	
  3649  0462                     l1530:	
  3650                           	line	13
  3651                           	
  3652  0462                     l3652:	
  3653  0462  1FA1               	btfss	(___awmod@divisor+1),7
  3654  0463  2C65               	goto	u3521
  3655  0464  2C66               	goto	u3520
  3656  0465                     u3521:
  3657  0465  2C6C               	goto	l3656
  3658  0466                     u3520:
  3659                           	line	14
  3660                           	
  3661  0466                     l3654:	
  3662  0466  09A0               	comf	(___awmod@divisor),f
  3663  0467  09A1               	comf	(___awmod@divisor+1),f
  3664  0468  0AA0               	incf	(___awmod@divisor),f
  3665  0469  1903               	skipnz
  3666  046A  0AA1               	incf	(___awmod@divisor+1),f
  3667  046B  2C6C               	goto	l3656
  3668                           	
  3669  046C                     l1531:	
  3670                           	line	15
  3671                           	
  3672  046C                     l3656:	
  3673  046C  0821               	movf	(___awmod@divisor+1),w
  3674  046D  0420               	iorwf	(___awmod@divisor),w
  3675  046E  1903               	skipnz
  3676  046F  2C71               	goto	u3531
  3677  0470  2C72               	goto	u3530
  3678  0471                     u3531:
  3679  0471  2CA8               	goto	l3674
  3680  0472                     u3530:
  3681                           	line	16
  3682                           	
  3683  0472                     l3658:	
  3684  0472  01F5               	clrf	(___awmod@counter)
  3685  0473  1403               	bsf	status,0
  3686  0474  0DF5               	rlf	(___awmod@counter),f
  3687                           	line	17
  3688  0475  2C82               	goto	l3664
  3689                           	
  3690  0476                     l1534:	
  3691                           	line	18
  3692                           	
  3693  0476                     l3660:	
  3694  0476  3001               	movlw	01h
  3695                           	
  3696  0477                     u3545:
  3697  0477  1003               	clrc
  3698  0478  0DA0               	rlf	(___awmod@divisor),f
  3699  0479  0DA1               	rlf	(___awmod@divisor+1),f
  3700  047A  3EFF               	addlw	-1
  3701  047B  1D03               	skipz
  3702  047C  2C77               	goto	u3545
  3703                           	line	19
  3704                           	
  3705  047D                     l3662:	
  3706  047D  3001               	movlw	(01h)
  3707  047E  00F4               	movwf	(??___awmod+0)+0
  3708  047F  0874               	movf	(??___awmod+0)+0,w
  3709  0480  07F5               	addwf	(___awmod@counter),f
  3710  0481  2C82               	goto	l3664
  3711                           	line	20
  3712                           	
  3713  0482                     l1533:	
  3714                           	line	17
  3715                           	
  3716  0482                     l3664:	
  3717  0482  1FA1               	btfss	(___awmod@divisor+1),(15)&7
  3718  0483  2C85               	goto	u3551
  3719  0484  2C86               	goto	u3550
  3720  0485                     u3551:
  3721  0485  2C76               	goto	l3660
  3722  0486                     u3550:
  3723  0486  2C88               	goto	l3666
  3724                           	
  3725  0487                     l1535:	
  3726  0487  2C88               	goto	l3666
  3727                           	line	21
  3728                           	
  3729  0488                     l1536:	
  3730                           	line	22
  3731                           	
  3732  0488                     l3666:	
  3733  0488  0821               	movf	(___awmod@divisor+1),w
  3734  0489  0223               	subwf	(___awmod@dividend+1),w
  3735  048A  1D03               	skipz
  3736  048B  2C8E               	goto	u3565
  3737  048C  0820               	movf	(___awmod@divisor),w
  3738  048D  0222               	subwf	(___awmod@dividend),w
  3739  048E                     u3565:
  3740  048E  1C03               	skipc
  3741  048F  2C91               	goto	u3561
  3742  0490  2C92               	goto	u3560
  3743  0491                     u3561:
  3744  0491  2C99               	goto	l3670
  3745  0492                     u3560:
  3746                           	line	23
  3747                           	
  3748  0492                     l3668:	
  3749  0492  0820               	movf	(___awmod@divisor),w
  3750  0493  02A2               	subwf	(___awmod@dividend),f
  3751  0494  0821               	movf	(___awmod@divisor+1),w
  3752  0495  1C03               	skipc
  3753  0496  03A3               	decf	(___awmod@dividend+1),f
  3754  0497  02A3               	subwf	(___awmod@dividend+1),f
  3755  0498  2C99               	goto	l3670
  3756                           	
  3757  0499                     l1537:	
  3758                           	line	24
  3759                           	
  3760  0499                     l3670:	
  3761  0499  3001               	movlw	01h
  3762                           	
  3763  049A                     u3575:
  3764  049A  1003               	clrc
  3765  049B  0CA1               	rrf	(___awmod@divisor+1),f
  3766  049C  0CA0               	rrf	(___awmod@divisor),f
  3767  049D  3EFF               	addlw	-1
  3768  049E  1D03               	skipz
  3769  049F  2C9A               	goto	u3575
  3770                           	line	25
  3771                           	
  3772  04A0                     l3672:	
  3773  04A0  3001               	movlw	low(01h)
  3774  04A1  02F5               	subwf	(___awmod@counter),f
  3775  04A2  1D03               	btfss	status,2
  3776  04A3  2CA5               	goto	u3581
  3777  04A4  2CA6               	goto	u3580
  3778  04A5                     u3581:
  3779  04A5  2C88               	goto	l3666
  3780  04A6                     u3580:
  3781  04A6  2CA8               	goto	l3674
  3782                           	
  3783  04A7                     l1538:	
  3784  04A7  2CA8               	goto	l3674
  3785                           	line	26
  3786                           	
  3787  04A8                     l1532:	
  3788                           	line	27
  3789                           	
  3790  04A8                     l3674:	
  3791  04A8  0876               	movf	(___awmod@sign),w
  3792  04A9  1D03               	skipz
  3793  04AA  2CAC               	goto	u3590
  3794  04AB  2CB2               	goto	l3678
  3795  04AC                     u3590:
  3796                           	line	28
  3797                           	
  3798  04AC                     l3676:	
  3799  04AC  09A2               	comf	(___awmod@dividend),f
  3800  04AD  09A3               	comf	(___awmod@dividend+1),f
  3801  04AE  0AA2               	incf	(___awmod@dividend),f
  3802  04AF  1903               	skipnz
  3803  04B0  0AA3               	incf	(___awmod@dividend+1),f
  3804  04B1  2CB2               	goto	l3678
  3805                           	
  3806  04B2                     l1539:	
  3807                           	line	29
  3808                           	
  3809  04B2                     l3678:	
  3810  04B2  0823               	movf	(___awmod@dividend+1),w
  3811  04B3  01A1               	clrf	(?___awmod+1)
  3812  04B4  07A1               	addwf	(?___awmod+1)
  3813  04B5  0822               	movf	(___awmod@dividend),w
  3814  04B6  01A0               	clrf	(?___awmod)
  3815  04B7  07A0               	addwf	(?___awmod)
  3816                           
  3817  04B8  2CB9               	goto	l1540
  3818                           	
  3819  04B9                     l3680:	
  3820                           	line	30
  3821                           	
  3822  04B9                     l1540:	
  3823  04B9  0008               	return
  3824                           	opt stack 0
  3825                           GLOBAL	__end_of___awmod
  3826  04BA                     	__end_of___awmod:
  3827 ;; =============== function ___awmod ends ============
  3828                           
  3829                           	signat	___awmod,8314
  3830                           	global	___lldiv
  3831                           psect	text829,local,class=CODE,delta=2
  3832                           global __ptext829
  3833  03E2                     __ptext829:
  3834                           
  3835 ;; *************** function ___lldiv *****************
  3836 ;; Defined at:
  3837 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lldiv.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;  divisor         4    0[BANK0 ] unsigned long 
  3840 ;;  dividend        4    4[BANK0 ] unsigned long 
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;  quotient        4    8[BANK0 ] unsigned long 
  3843 ;;  counter         1   12[BANK0 ] unsigned char 
  3844 ;; Return value:  Size  Location     Type
  3845 ;;                  4    0[BANK0 ] unsigned long 
  3846 ;; Registers used:
  3847 ;;		wreg, status,2, status,0
  3848 ;; Tracked objects:
  3849 ;;		On entry : 0/0
  3850 ;;		On exit  : 0/0
  3851 ;;		Unchanged: 0/0
  3852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3853 ;;      Params:         0       8       0       0
  3854 ;;      Locals:         0       5       0       0
  3855 ;;      Temps:          1       0       0       0
  3856 ;;      Totals:         1      13       0       0
  3857 ;;Total ram usage:       14 bytes
  3858 ;; Hardware stack levels used:    1
  3859 ;; Hardware stack levels required when called:    1
  3860 ;; This function calls:
  3861 ;;		Nothing
  3862 ;; This function is called by:
  3863 ;;		_lcd_putnumber
  3864 ;;		_ultoa
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           psect	text829
  3868                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lldiv.c"
  3869                           	line	5
  3870                           	global	__size_of___lldiv
  3871  0070                     	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  3872                           	
  3873  03E2                     ___lldiv:	
  3874                           	opt	stack 4
  3875                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3876                           	line	9
  3877                           	
  3878  03E2                     l3624:	
  3879  03E2  3000               	movlw	0
  3880  03E3  1283               	bcf	status, 5	;RP0=0, select bank0
  3881  03E4  1303               	bcf	status, 6	;RP1=0, select bank0
  3882  03E5  00AB               	movwf	(___lldiv@quotient+3)
  3883  03E6  3000               	movlw	0
  3884  03E7  00AA               	movwf	(___lldiv@quotient+2)
  3885  03E8  3000               	movlw	0
  3886  03E9  00A9               	movwf	(___lldiv@quotient+1)
  3887  03EA  3000               	movlw	0
  3888  03EB  00A8               	movwf	(___lldiv@quotient)
  3889                           
  3890                           	line	10
  3891  03EC  0823               	movf	(___lldiv@divisor+3),w
  3892  03ED  0422               	iorwf	(___lldiv@divisor+2),w
  3893  03EE  0421               	iorwf	(___lldiv@divisor+1),w
  3894  03EF  0420               	iorwf	(___lldiv@divisor),w
  3895  03F0  1903               	skipnz
  3896  03F1  2BF3               	goto	u3441
  3897  03F2  2BF4               	goto	u3440
  3898  03F3                     u3441:
  3899  03F3  2C48               	goto	l3644
  3900  03F4                     u3440:
  3901                           	line	11
  3902                           	
  3903  03F4                     l3626:	
  3904  03F4  01AC               	clrf	(___lldiv@counter)
  3905  03F5  1403               	bsf	status,0
  3906  03F6  0DAC               	rlf	(___lldiv@counter),f
  3907                           	line	12
  3908  03F7  2C06               	goto	l3630
  3909                           	
  3910  03F8                     l1496:	
  3911                           	line	13
  3912                           	
  3913  03F8                     l3628:	
  3914  03F8  3001               	movlw	01h
  3915  03F9  00F4               	movwf	(??___lldiv+0)+0
  3916  03FA                     u3455:
  3917  03FA  1003               	clrc
  3918  03FB  0DA0               	rlf	(___lldiv@divisor),f
  3919  03FC  0DA1               	rlf	(___lldiv@divisor+1),f
  3920  03FD  0DA2               	rlf	(___lldiv@divisor+2),f
  3921  03FE  0DA3               	rlf	(___lldiv@divisor+3),f
  3922  03FF  0BF4               	decfsz	(??___lldiv+0)+0
  3923  0400  2BFA               	goto	u3455
  3924                           	line	14
  3925  0401  3001               	movlw	(01h)
  3926  0402  00F4               	movwf	(??___lldiv+0)+0
  3927  0403  0874               	movf	(??___lldiv+0)+0,w
  3928  0404  07AC               	addwf	(___lldiv@counter),f
  3929  0405  2C06               	goto	l3630
  3930                           	line	15
  3931                           	
  3932  0406                     l1495:	
  3933                           	line	12
  3934                           	
  3935  0406                     l3630:	
  3936  0406  1FA3               	btfss	(___lldiv@divisor+3),(31)&7
  3937  0407  2C09               	goto	u3461
  3938  0408  2C0A               	goto	u3460
  3939  0409                     u3461:
  3940  0409  2BF8               	goto	l3628
  3941  040A                     u3460:
  3942  040A  2C0C               	goto	l3632
  3943                           	
  3944  040B                     l1497:	
  3945  040B  2C0C               	goto	l3632
  3946                           	line	16
  3947                           	
  3948  040C                     l1498:	
  3949                           	line	17
  3950                           	
  3951  040C                     l3632:	
  3952  040C  3001               	movlw	01h
  3953  040D  00F4               	movwf	(??___lldiv+0)+0
  3954  040E                     u3475:
  3955  040E  1003               	clrc
  3956  040F  0DA8               	rlf	(___lldiv@quotient),f
  3957  0410  0DA9               	rlf	(___lldiv@quotient+1),f
  3958  0411  0DAA               	rlf	(___lldiv@quotient+2),f
  3959  0412  0DAB               	rlf	(___lldiv@quotient+3),f
  3960  0413  0BF4               	decfsz	(??___lldiv+0)+0
  3961  0414  2C0E               	goto	u3475
  3962                           	line	18
  3963                           	
  3964  0415                     l3634:	
  3965  0415  0823               	movf	(___lldiv@divisor+3),w
  3966  0416  0227               	subwf	(___lldiv@dividend+3),w
  3967  0417  1D03               	skipz
  3968  0418  2C23               	goto	u3485
  3969  0419  0822               	movf	(___lldiv@divisor+2),w
  3970  041A  0226               	subwf	(___lldiv@dividend+2),w
  3971  041B  1D03               	skipz
  3972  041C  2C23               	goto	u3485
  3973  041D  0821               	movf	(___lldiv@divisor+1),w
  3974  041E  0225               	subwf	(___lldiv@dividend+1),w
  3975  041F  1D03               	skipz
  3976  0420  2C23               	goto	u3485
  3977  0421  0820               	movf	(___lldiv@divisor),w
  3978  0422  0224               	subwf	(___lldiv@dividend),w
  3979  0423                     u3485:
  3980  0423  1C03               	skipc
  3981  0424  2C26               	goto	u3481
  3982  0425  2C27               	goto	u3480
  3983  0426                     u3481:
  3984  0426  2C37               	goto	l3640
  3985  0427                     u3480:
  3986                           	line	19
  3987                           	
  3988  0427                     l3636:	
  3989  0427  0820               	movf	(___lldiv@divisor),w
  3990  0428  02A4               	subwf	(___lldiv@dividend),f
  3991  0429  0821               	movf	(___lldiv@divisor+1),w
  3992  042A  1C03               	skipc
  3993  042B  0F21               	incfsz	(___lldiv@divisor+1),w
  3994  042C  02A5               	subwf	(___lldiv@dividend+1),f
  3995  042D  0822               	movf	(___lldiv@divisor+2),w
  3996  042E  1C03               	skipc
  3997  042F  0F22               	incfsz	(___lldiv@divisor+2),w
  3998  0430  02A6               	subwf	(___lldiv@dividend+2),f
  3999  0431  0823               	movf	(___lldiv@divisor+3),w
  4000  0432  1C03               	skipc
  4001  0433  0F23               	incfsz	(___lldiv@divisor+3),w
  4002  0434  02A7               	subwf	(___lldiv@dividend+3),f
  4003                           	line	20
  4004                           	
  4005  0435                     l3638:	
  4006  0435  1428               	bsf	(___lldiv@quotient)+(0/8),(0)&7
  4007  0436  2C37               	goto	l3640
  4008                           	line	21
  4009                           	
  4010  0437                     l1499:	
  4011                           	line	22
  4012                           	
  4013  0437                     l3640:	
  4014  0437  3001               	movlw	01h
  4015  0438                     u3495:
  4016  0438  1003               	clrc
  4017  0439  0CA3               	rrf	(___lldiv@divisor+3),f
  4018  043A  0CA2               	rrf	(___lldiv@divisor+2),f
  4019  043B  0CA1               	rrf	(___lldiv@divisor+1),f
  4020  043C  0CA0               	rrf	(___lldiv@divisor),f
  4021  043D  3EFF               	addlw	-1
  4022  043E  1D03               	skipz
  4023  043F  2C38               	goto	u3495
  4024                           
  4025                           	line	23
  4026                           	
  4027  0440                     l3642:	
  4028  0440  3001               	movlw	low(01h)
  4029  0441  02AC               	subwf	(___lldiv@counter),f
  4030  0442  1D03               	btfss	status,2
  4031  0443  2C45               	goto	u3501
  4032  0444  2C46               	goto	u3500
  4033  0445                     u3501:
  4034  0445  2C0C               	goto	l3632
  4035  0446                     u3500:
  4036  0446  2C48               	goto	l3644
  4037                           	
  4038  0447                     l1500:	
  4039  0447  2C48               	goto	l3644
  4040                           	line	24
  4041                           	
  4042  0448                     l1494:	
  4043                           	line	25
  4044                           	
  4045  0448                     l3644:	
  4046  0448  082B               	movf	(___lldiv@quotient+3),w
  4047  0449  00A3               	movwf	(?___lldiv+3)
  4048  044A  082A               	movf	(___lldiv@quotient+2),w
  4049  044B  00A2               	movwf	(?___lldiv+2)
  4050  044C  0829               	movf	(___lldiv@quotient+1),w
  4051  044D  00A1               	movwf	(?___lldiv+1)
  4052  044E  0828               	movf	(___lldiv@quotient),w
  4053  044F  00A0               	movwf	(?___lldiv)
  4054                           
  4055  0450  2C51               	goto	l1501
  4056                           	
  4057  0451                     l3646:	
  4058                           	line	26
  4059                           	
  4060  0451                     l1501:	
  4061  0451  0008               	return
  4062                           	opt stack 0
  4063                           GLOBAL	__end_of___lldiv
  4064  0452                     	__end_of___lldiv:
  4065 ;; =============== function ___lldiv ends ============
  4066                           
  4067                           	signat	___lldiv,8316
  4068                           	global	___llmod
  4069                           psect	text830,local,class=CODE,delta=2
  4070                           global __ptext830
  4071  0521                     __ptext830:
  4072                           
  4073 ;; *************** function ___llmod *****************
  4074 ;; Defined at:
  4075 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\llmod.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;  divisor         4    0[BANK0 ] unsigned long 
  4078 ;;  dividend        4    4[BANK0 ] unsigned long 
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;  counter         1    5[COMMON] unsigned char 
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  4    0[BANK0 ] unsigned long 
  4083 ;; Registers used:
  4084 ;;		wreg, status,2, status,0
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4090 ;;      Params:         0       8       0       0
  4091 ;;      Locals:         1       0       0       0
  4092 ;;      Temps:          1       0       0       0
  4093 ;;      Totals:         2       8       0       0
  4094 ;;Total ram usage:       10 bytes
  4095 ;; Hardware stack levels used:    1
  4096 ;; Hardware stack levels required when called:    1
  4097 ;; This function calls:
  4098 ;;		Nothing
  4099 ;; This function is called by:
  4100 ;;		_lcd_putnumber
  4101 ;;		_ultoa
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           psect	text830
  4105                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\llmod.c"
  4106                           	line	5
  4107                           	global	__size_of___llmod
  4108  005E                     	__size_of___llmod	equ	__end_of___llmod-___llmod
  4109                           	
  4110  0521                     ___llmod:	
  4111                           	opt	stack 4
  4112                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4113                           	line	8
  4114                           	
  4115  0521                     l3182:	
  4116  0521  1283               	bcf	status, 5	;RP0=0, select bank0
  4117  0522  1303               	bcf	status, 6	;RP1=0, select bank0
  4118  0523  0823               	movf	(___llmod@divisor+3),w
  4119  0524  0422               	iorwf	(___llmod@divisor+2),w
  4120  0525  0421               	iorwf	(___llmod@divisor+1),w
  4121  0526  0420               	iorwf	(___llmod@divisor),w
  4122  0527  1903               	skipnz
  4123  0528  2D2A               	goto	u2781
  4124  0529  2D2B               	goto	u2780
  4125  052A                     u2781:
  4126  052A  2D75               	goto	l3198
  4127  052B                     u2780:
  4128                           	line	9
  4129                           	
  4130  052B                     l3184:	
  4131  052B  01F5               	clrf	(___llmod@counter)
  4132  052C  1403               	bsf	status,0
  4133  052D  0DF5               	rlf	(___llmod@counter),f
  4134                           	line	10
  4135  052E  2D3D               	goto	l3188
  4136                           	
  4137  052F                     l1477:	
  4138                           	line	11
  4139                           	
  4140  052F                     l3186:	
  4141  052F  3001               	movlw	01h
  4142  0530  00F4               	movwf	(??___llmod+0)+0
  4143  0531                     u2795:
  4144  0531  1003               	clrc
  4145  0532  0DA0               	rlf	(___llmod@divisor),f
  4146  0533  0DA1               	rlf	(___llmod@divisor+1),f
  4147  0534  0DA2               	rlf	(___llmod@divisor+2),f
  4148  0535  0DA3               	rlf	(___llmod@divisor+3),f
  4149  0536  0BF4               	decfsz	(??___llmod+0)+0
  4150  0537  2D31               	goto	u2795
  4151                           	line	12
  4152  0538  3001               	movlw	(01h)
  4153  0539  00F4               	movwf	(??___llmod+0)+0
  4154  053A  0874               	movf	(??___llmod+0)+0,w
  4155  053B  07F5               	addwf	(___llmod@counter),f
  4156  053C  2D3D               	goto	l3188
  4157                           	line	13
  4158                           	
  4159  053D                     l1476:	
  4160                           	line	10
  4161                           	
  4162  053D                     l3188:	
  4163  053D  1FA3               	btfss	(___llmod@divisor+3),(31)&7
  4164  053E  2D40               	goto	u2801
  4165  053F  2D41               	goto	u2800
  4166  0540                     u2801:
  4167  0540  2D2F               	goto	l3186
  4168  0541                     u2800:
  4169  0541  2D43               	goto	l3190
  4170                           	
  4171  0542                     l1478:	
  4172  0542  2D43               	goto	l3190
  4173                           	line	14
  4174                           	
  4175  0543                     l1479:	
  4176                           	line	15
  4177                           	
  4178  0543                     l3190:	
  4179  0543  0823               	movf	(___llmod@divisor+3),w
  4180  0544  0227               	subwf	(___llmod@dividend+3),w
  4181  0545  1D03               	skipz
  4182  0546  2D51               	goto	u2815
  4183  0547  0822               	movf	(___llmod@divisor+2),w
  4184  0548  0226               	subwf	(___llmod@dividend+2),w
  4185  0549  1D03               	skipz
  4186  054A  2D51               	goto	u2815
  4187  054B  0821               	movf	(___llmod@divisor+1),w
  4188  054C  0225               	subwf	(___llmod@dividend+1),w
  4189  054D  1D03               	skipz
  4190  054E  2D51               	goto	u2815
  4191  054F  0820               	movf	(___llmod@divisor),w
  4192  0550  0224               	subwf	(___llmod@dividend),w
  4193  0551                     u2815:
  4194  0551  1C03               	skipc
  4195  0552  2D54               	goto	u2811
  4196  0553  2D55               	goto	u2810
  4197  0554                     u2811:
  4198  0554  2D64               	goto	l3194
  4199  0555                     u2810:
  4200                           	line	16
  4201                           	
  4202  0555                     l3192:	
  4203  0555  0820               	movf	(___llmod@divisor),w
  4204  0556  02A4               	subwf	(___llmod@dividend),f
  4205  0557  0821               	movf	(___llmod@divisor+1),w
  4206  0558  1C03               	skipc
  4207  0559  0F21               	incfsz	(___llmod@divisor+1),w
  4208  055A  02A5               	subwf	(___llmod@dividend+1),f
  4209  055B  0822               	movf	(___llmod@divisor+2),w
  4210  055C  1C03               	skipc
  4211  055D  0F22               	incfsz	(___llmod@divisor+2),w
  4212  055E  02A6               	subwf	(___llmod@dividend+2),f
  4213  055F  0823               	movf	(___llmod@divisor+3),w
  4214  0560  1C03               	skipc
  4215  0561  0F23               	incfsz	(___llmod@divisor+3),w
  4216  0562  02A7               	subwf	(___llmod@dividend+3),f
  4217  0563  2D64               	goto	l3194
  4218                           	
  4219  0564                     l1480:	
  4220                           	line	17
  4221                           	
  4222  0564                     l3194:	
  4223  0564  3001               	movlw	01h
  4224  0565                     u2825:
  4225  0565  1003               	clrc
  4226  0566  0CA3               	rrf	(___llmod@divisor+3),f
  4227  0567  0CA2               	rrf	(___llmod@divisor+2),f
  4228  0568  0CA1               	rrf	(___llmod@divisor+1),f
  4229  0569  0CA0               	rrf	(___llmod@divisor),f
  4230  056A  3EFF               	addlw	-1
  4231  056B  1D03               	skipz
  4232  056C  2D65               	goto	u2825
  4233                           
  4234                           	line	18
  4235                           	
  4236  056D                     l3196:	
  4237  056D  3001               	movlw	low(01h)
  4238  056E  02F5               	subwf	(___llmod@counter),f
  4239  056F  1D03               	btfss	status,2
  4240  0570  2D72               	goto	u2831
  4241  0571  2D73               	goto	u2830
  4242  0572                     u2831:
  4243  0572  2D43               	goto	l3190
  4244  0573                     u2830:
  4245  0573  2D75               	goto	l3198
  4246                           	
  4247  0574                     l1481:	
  4248  0574  2D75               	goto	l3198
  4249                           	line	19
  4250                           	
  4251  0575                     l1475:	
  4252                           	line	20
  4253                           	
  4254  0575                     l3198:	
  4255  0575  0827               	movf	(___llmod@dividend+3),w
  4256  0576  00A3               	movwf	(?___llmod+3)
  4257  0577  0826               	movf	(___llmod@dividend+2),w
  4258  0578  00A2               	movwf	(?___llmod+2)
  4259  0579  0825               	movf	(___llmod@dividend+1),w
  4260  057A  00A1               	movwf	(?___llmod+1)
  4261  057B  0824               	movf	(___llmod@dividend),w
  4262  057C  00A0               	movwf	(?___llmod)
  4263                           
  4264  057D  2D7E               	goto	l1482
  4265                           	
  4266  057E                     l3200:	
  4267                           	line	21
  4268                           	
  4269  057E                     l1482:	
  4270  057E  0008               	return
  4271                           	opt stack 0
  4272                           GLOBAL	__end_of___llmod
  4273  057F                     	__end_of___llmod:
  4274 ;; =============== function ___llmod ends ============
  4275                           
  4276                           	signat	___llmod,8316
  4277                           	global	___lmul
  4278                           psect	text831,local,class=CODE,delta=2
  4279                           global __ptext831
  4280  05D9                     __ptext831:
  4281                           
  4282 ;; *************** function ___lmul *****************
  4283 ;; Defined at:
  4284 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lmul.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;  multiplier      4    0[BANK0 ] unsigned long 
  4287 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;  product         4    8[BANK0 ] unsigned long 
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  4    0[BANK0 ] unsigned long 
  4292 ;; Registers used:
  4293 ;;		wreg, status,2, status,0
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4299 ;;      Params:         0       8       0       0
  4300 ;;      Locals:         0       4       0       0
  4301 ;;      Temps:          1       0       0       0
  4302 ;;      Totals:         1      12       0       0
  4303 ;;Total ram usage:       13 bytes
  4304 ;; Hardware stack levels used:    1
  4305 ;; Hardware stack levels required when called:    1
  4306 ;; This function calls:
  4307 ;;		Nothing
  4308 ;; This function is called by:
  4309 ;;		_doFrequency
  4310 ;;		_timersOFF
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           psect	text831
  4314                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lmul.c"
  4315                           	line	3
  4316                           	global	__size_of___lmul
  4317  004C                     	__size_of___lmul	equ	__end_of___lmul-___lmul
  4318                           	
  4319  05D9                     ___lmul:	
  4320                           	opt	stack 5
  4321                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4322                           	line	4
  4323                           	
  4324  05D9                     l3610:	
  4325  05D9  3000               	movlw	0
  4326  05DA  1283               	bcf	status, 5	;RP0=0, select bank0
  4327  05DB  1303               	bcf	status, 6	;RP1=0, select bank0
  4328  05DC  00AB               	movwf	(___lmul@product+3)
  4329  05DD  3000               	movlw	0
  4330  05DE  00AA               	movwf	(___lmul@product+2)
  4331  05DF  3000               	movlw	0
  4332  05E0  00A9               	movwf	(___lmul@product+1)
  4333  05E1  3000               	movlw	0
  4334  05E2  00A8               	movwf	(___lmul@product)
  4335                           
  4336  05E3  2DE4               	goto	l3612
  4337                           	line	6
  4338                           	
  4339  05E4                     l1397:	
  4340                           	line	7
  4341                           	
  4342  05E4                     l3612:	
  4343  05E4  1C20               	btfss	(___lmul@multiplier),(0)&7
  4344  05E5  2DE7               	goto	u3391
  4345  05E6  2DE8               	goto	u3390
  4346  05E7                     u3391:
  4347  05E7  2E00               	goto	l3616
  4348  05E8                     u3390:
  4349                           	line	8
  4350                           	
  4351  05E8                     l3614:	
  4352  05E8  0824               	movf	(___lmul@multiplicand),w
  4353  05E9  07A8               	addwf	(___lmul@product),f
  4354  05EA  0825               	movf	(___lmul@multiplicand+1),w
  4355  05EB  1103               	clrz
  4356  05EC  1803               	skipnc
  4357  05ED  3E01               	addlw	1
  4358  05EE  1903               	skipnz
  4359  05EF  2DF1               	goto	u3401
  4360  05F0  07A9               	addwf	(___lmul@product+1),f
  4361  05F1                     u3401:
  4362  05F1  0826               	movf	(___lmul@multiplicand+2),w
  4363  05F2  1103               	clrz
  4364  05F3  1803               	skipnc
  4365  05F4  3E01               	addlw	1
  4366  05F5  1903               	skipnz
  4367  05F6  2DF8               	goto	u3402
  4368  05F7  07AA               	addwf	(___lmul@product+2),f
  4369  05F8                     u3402:
  4370  05F8  0827               	movf	(___lmul@multiplicand+3),w
  4371  05F9  1103               	clrz
  4372  05FA  1803               	skipnc
  4373  05FB  3E01               	addlw	1
  4374  05FC  1903               	skipnz
  4375  05FD  2DFF               	goto	u3403
  4376  05FE  07AB               	addwf	(___lmul@product+3),f
  4377  05FF                     u3403:
  4378                           
  4379  05FF  2E00               	goto	l3616
  4380                           	
  4381  0600                     l1398:	
  4382                           	line	9
  4383                           	
  4384  0600                     l3616:	
  4385  0600  3001               	movlw	01h
  4386  0601  00F4               	movwf	(??___lmul+0)+0
  4387  0602                     u3415:
  4388  0602  1003               	clrc
  4389  0603  0DA4               	rlf	(___lmul@multiplicand),f
  4390  0604  0DA5               	rlf	(___lmul@multiplicand+1),f
  4391  0605  0DA6               	rlf	(___lmul@multiplicand+2),f
  4392  0606  0DA7               	rlf	(___lmul@multiplicand+3),f
  4393  0607  0BF4               	decfsz	(??___lmul+0)+0
  4394  0608  2E02               	goto	u3415
  4395                           	line	10
  4396                           	
  4397  0609                     l3618:	
  4398  0609  3001               	movlw	01h
  4399  060A                     u3425:
  4400  060A  1003               	clrc
  4401  060B  0CA3               	rrf	(___lmul@multiplier+3),f
  4402  060C  0CA2               	rrf	(___lmul@multiplier+2),f
  4403  060D  0CA1               	rrf	(___lmul@multiplier+1),f
  4404  060E  0CA0               	rrf	(___lmul@multiplier),f
  4405  060F  3EFF               	addlw	-1
  4406  0610  1D03               	skipz
  4407  0611  2E0A               	goto	u3425
  4408                           
  4409                           	line	11
  4410  0612  0823               	movf	(___lmul@multiplier+3),w
  4411  0613  0422               	iorwf	(___lmul@multiplier+2),w
  4412  0614  0421               	iorwf	(___lmul@multiplier+1),w
  4413  0615  0420               	iorwf	(___lmul@multiplier),w
  4414  0616  1D03               	skipz
  4415  0617  2E19               	goto	u3431
  4416  0618  2E1A               	goto	u3430
  4417  0619                     u3431:
  4418  0619  2DE4               	goto	l3612
  4419  061A                     u3430:
  4420  061A  2E1B               	goto	l3620
  4421                           	
  4422  061B                     l1399:	
  4423                           	line	12
  4424                           	
  4425  061B                     l3620:	
  4426  061B  082B               	movf	(___lmul@product+3),w
  4427  061C  00A3               	movwf	(?___lmul+3)
  4428  061D  082A               	movf	(___lmul@product+2),w
  4429  061E  00A2               	movwf	(?___lmul+2)
  4430  061F  0829               	movf	(___lmul@product+1),w
  4431  0620  00A1               	movwf	(?___lmul+1)
  4432  0621  0828               	movf	(___lmul@product),w
  4433  0622  00A0               	movwf	(?___lmul)
  4434                           
  4435  0623  2E24               	goto	l1400
  4436                           	
  4437  0624                     l3622:	
  4438                           	line	13
  4439                           	
  4440  0624                     l1400:	
  4441  0624  0008               	return
  4442                           	opt stack 0
  4443                           GLOBAL	__end_of___lmul
  4444  0625                     	__end_of___lmul:
  4445 ;; =============== function ___lmul ends ============
  4446                           
  4447                           	signat	___lmul,8316
  4448                           	global	_doScale
  4449                           psect	text832,local,class=CODE,delta=2
  4450                           global __ptext832
  4451  02B3                     __ptext832:
  4452                           
  4453 ;; *************** function _doScale *****************
  4454 ;; Defined at:
  4455 ;;		line 277 in file "C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;		None
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;		None
  4460 ;; Return value:  Size  Location     Type
  4461 ;;		None               void
  4462 ;; Registers used:
  4463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4469 ;;      Params:         0       0       0       0
  4470 ;;      Locals:         0       0       0       0
  4471 ;;      Temps:          0       4       0       0
  4472 ;;      Totals:         0       4       0       0
  4473 ;;Total ram usage:        4 bytes
  4474 ;; Hardware stack levels used:    2
  4475 ;; Hardware stack levels required when called:    1
  4476 ;; This function calls:
  4477 ;;		Nothing
  4478 ;; This function is called by:
  4479 ;;		_main
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           psect	text832
  4483                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
  4484                           	line	277
  4485                           	global	__size_of_doScale
  4486  009E                     	__size_of_doScale	equ	__end_of_doScale-_doScale
  4487                           	
  4488  02B3                     _doScale:	
  4489                           	opt	stack 5
  4490                           ; Regs used in _doScale: [wreg-fsr0h+status,2+status,0+pclath]
  4491                           	line	279
  4492                           	
  4493  02B3                     l3568:	
  4494                           ;blink.c: 279: number = number >> (17);
  4495  02B3  1283               	bcf	status, 5	;RP0=0, select bank0
  4496  02B4  1303               	bcf	status, 6	;RP1=0, select bank0
  4497  02B5  0849               	movf	(_number),w
  4498  02B6  00A0               	movwf	(??_doScale+0)+0
  4499  02B7  084A               	movf	(_number+1),w
  4500  02B8  00A1               	movwf	((??_doScale+0)+0+1)
  4501  02B9  084B               	movf	(_number+2),w
  4502  02BA  00A2               	movwf	((??_doScale+0)+0+2)
  4503  02BB  084C               	movf	(_number+3),w
  4504  02BC  00A3               	movwf	((??_doScale+0)+0+3)
  4505  02BD  3011               	movlw	011h
  4506  02BE                     u3305:
  4507  02BE  1003               	clrc
  4508  02BF  0CA3               	rrf	(??_doScale+0)+3,f
  4509  02C0  0CA2               	rrf	(??_doScale+0)+2,f
  4510  02C1  0CA1               	rrf	(??_doScale+0)+1,f
  4511  02C2  0CA0               	rrf	(??_doScale+0)+0,f
  4512  02C3                     u3300:
  4513  02C3  3EFF               	addlw	-1
  4514  02C4  1D03               	skipz
  4515  02C5  2ABE               	goto	u3305
  4516  02C6  0823               	movf	3+(??_doScale+0)+0,w
  4517  02C7  00CC               	movwf	(_number+3)
  4518  02C8  0822               	movf	2+(??_doScale+0)+0,w
  4519  02C9  00CB               	movwf	(_number+2)
  4520  02CA  0821               	movf	1+(??_doScale+0)+0,w
  4521  02CB  00CA               	movwf	(_number+1)
  4522  02CC  0820               	movf	0+(??_doScale+0)+0,w
  4523  02CD  00C9               	movwf	(_number)
  4524                           
  4525                           	line	281
  4526                           	
  4527  02CE                     l3570:	
  4528                           ;blink.c: 281: TMR0cnt = 1;
  4529  02CE  3000               	movlw	0
  4530  02CF  00C4               	movwf	(_TMR0cnt+3)
  4531  02D0  3000               	movlw	0
  4532  02D1  00C3               	movwf	(_TMR0cnt+2)
  4533  02D2  3000               	movlw	0
  4534  02D3  00C2               	movwf	(_TMR0cnt+1)
  4535  02D4  3001               	movlw	01h
  4536  02D5  00C1               	movwf	(_TMR0cnt)
  4537                           
  4538                           	line	282
  4539                           	
  4540  02D6                     l3572:	
  4541                           ;blink.c: 282: for (preScaleSelect =0; preScaleSelect <= 7; preScaleSelect++)
  4542  02D6  01E2               	clrf	(_preScaleSelect)
  4543                           	
  4544  02D7                     l3574:	
  4545  02D7  3008               	movlw	(08h)
  4546  02D8  0262               	subwf	(_preScaleSelect),w
  4547  02D9  1C03               	skipc
  4548  02DA  2ADC               	goto	u3311
  4549  02DB  2ADD               	goto	u3310
  4550  02DC                     u3311:
  4551  02DC  2ADF               	goto	l3578
  4552  02DD                     u3310:
  4553  02DD  2B17               	goto	l3586
  4554                           	
  4555  02DE                     l3576:	
  4556  02DE  2B17               	goto	l3586
  4557                           	line	283
  4558                           	
  4559  02DF                     l447:	
  4560                           	line	284
  4561                           	
  4562  02DF                     l3578:	
  4563                           ;blink.c: 283: {
  4564                           ;blink.c: 284: if (TMR0cnt > number)
  4565  02DF  0844               	movf	(_TMR0cnt+3),w
  4566  02E0  024C               	subwf	(_number+3),w
  4567  02E1  1D03               	skipz
  4568  02E2  2AED               	goto	u3325
  4569  02E3  0843               	movf	(_TMR0cnt+2),w
  4570  02E4  024B               	subwf	(_number+2),w
  4571  02E5  1D03               	skipz
  4572  02E6  2AED               	goto	u3325
  4573  02E7  0842               	movf	(_TMR0cnt+1),w
  4574  02E8  024A               	subwf	(_number+1),w
  4575  02E9  1D03               	skipz
  4576  02EA  2AED               	goto	u3325
  4577  02EB  0841               	movf	(_TMR0cnt),w
  4578  02EC  0249               	subwf	(_number),w
  4579  02ED                     u3325:
  4580  02ED  1803               	skipnc
  4581  02EE  2AF0               	goto	u3321
  4582  02EF  2AF1               	goto	u3320
  4583  02F0                     u3321:
  4584  02F0  2AF3               	goto	l3582
  4585  02F1                     u3320:
  4586  02F1  2B17               	goto	l3586
  4587                           	line	286
  4588                           	
  4589  02F2                     l3580:	
  4590                           ;blink.c: 285: {
  4591                           ;blink.c: 286: break;
  4592  02F2  2B17               	goto	l3586
  4593                           	line	287
  4594                           	
  4595  02F3                     l449:	
  4596                           	line	288
  4597                           	
  4598  02F3                     l3582:	
  4599                           ;blink.c: 287: }
  4600                           ;blink.c: 288: TMR0cnt = TMR0cnt << 1;
  4601  02F3  0841               	movf	(_TMR0cnt),w
  4602  02F4  00A0               	movwf	(??_doScale+0)+0
  4603  02F5  0842               	movf	(_TMR0cnt+1),w
  4604  02F6  00A1               	movwf	((??_doScale+0)+0+1)
  4605  02F7  0843               	movf	(_TMR0cnt+2),w
  4606  02F8  00A2               	movwf	((??_doScale+0)+0+2)
  4607  02F9  0844               	movf	(_TMR0cnt+3),w
  4608  02FA  00A3               	movwf	((??_doScale+0)+0+3)
  4609  02FB  3001               	movlw	01h
  4610  02FC                     u3335:
  4611  02FC  1003               	clrc
  4612  02FD  0DA0               	rlf	(??_doScale+0)+0,f
  4613  02FE  0DA1               	rlf	(??_doScale+0)+1,f
  4614  02FF  0DA2               	rlf	(??_doScale+0)+2,f
  4615  0300  0DA3               	rlf	(??_doScale+0)+3,f
  4616  0301                     u3330:
  4617  0301  3EFF               	addlw	-1
  4618  0302  1D03               	skipz
  4619  0303  2AFC               	goto	u3335
  4620  0304  0823               	movf	3+(??_doScale+0)+0,w
  4621  0305  00C4               	movwf	(_TMR0cnt+3)
  4622  0306  0822               	movf	2+(??_doScale+0)+0,w
  4623  0307  00C3               	movwf	(_TMR0cnt+2)
  4624  0308  0821               	movf	1+(??_doScale+0)+0,w
  4625  0309  00C2               	movwf	(_TMR0cnt+1)
  4626  030A  0820               	movf	0+(??_doScale+0)+0,w
  4627  030B  00C1               	movwf	(_TMR0cnt)
  4628                           
  4629                           	line	282
  4630  030C  3001               	movlw	(01h)
  4631  030D  00A0               	movwf	(??_doScale+0)+0
  4632  030E  0820               	movf	(??_doScale+0)+0,w
  4633  030F  07E2               	addwf	(_preScaleSelect),f
  4634                           	
  4635  0310                     l3584:	
  4636  0310  3008               	movlw	(08h)
  4637  0311  0262               	subwf	(_preScaleSelect),w
  4638  0312  1C03               	skipc
  4639  0313  2B15               	goto	u3341
  4640  0314  2B16               	goto	u3340
  4641  0315                     u3341:
  4642  0315  2ADF               	goto	l3578
  4643  0316                     u3340:
  4644  0316  2B17               	goto	l3586
  4645                           	
  4646  0317                     l448:	
  4647                           	line	290
  4648                           	
  4649  0317                     l3586:	
  4650                           ;blink.c: 289: }
  4651                           ;blink.c: 290: if (preScaleSelect>7)
  4652  0317  3008               	movlw	(08h)
  4653  0318  0262               	subwf	(_preScaleSelect),w
  4654  0319  1C03               	skipc
  4655  031A  2B1C               	goto	u3351
  4656  031B  2B1D               	goto	u3350
  4657  031C                     u3351:
  4658  031C  2B22               	goto	l3590
  4659  031D                     u3350:
  4660                           	line	292
  4661                           	
  4662  031D                     l3588:	
  4663                           ;blink.c: 291: {
  4664                           ;blink.c: 292: preScaleSelect=7;
  4665  031D  3007               	movlw	(07h)
  4666  031E  00A0               	movwf	(??_doScale+0)+0
  4667  031F  0820               	movf	(??_doScale+0)+0,w
  4668  0320  00E2               	movwf	(_preScaleSelect)
  4669  0321  2B22               	goto	l3590
  4670                           	line	293
  4671                           	
  4672  0322                     l450:	
  4673                           	line	295
  4674                           	
  4675  0322                     l3590:	
  4676                           ;blink.c: 293: }
  4677                           ;blink.c: 295: preScaleValue = (1 << prescaleInternalShift[preScaleSelect] << prescaleEx
                                 ternalShift[preScaleSelect]);
  4678  0322  0862               	movf	(_preScaleSelect),w
  4679  0323  3E18               	addlw	low((_prescaleExternalShift-__stringbase))
  4680  0324  0084               	movwf	fsr0
  4681  0325  220A               	fcall	stringdir
  4682  0326  00A0               	movwf	(??_doScale+0)+0
  4683  0327  0AA0               	incf	(??_doScale+0)+0,f
  4684  0328  0862               	movf	(_preScaleSelect),w
  4685  0329  3E71               	addlw	low((_prescaleInternalShift-__stringbase))
  4686  032A  0084               	movwf	fsr0
  4687  032B  220A               	fcall	stringdir
  4688  032C  00A1               	movwf	(??_doScale+1)+0
  4689  032D  0AA1               	incf	(??_doScale+1)+0,f
  4690  032E  3001               	movlw	low(01h)
  4691  032F  00A2               	movwf	(??_doScale+2)+0
  4692  0330  3000               	movlw	high(01h)
  4693  0331  00A3               	movwf	(??_doScale+2)+0+1
  4694  0332  2B36               	goto	u3364
  4695  0333                     u3365:
  4696  0333  1003               	clrc
  4697  0334  0DA2               	rlf	(??_doScale+2)+0,f
  4698  0335  0DA3               	rlf	(??_doScale+2)+1,f
  4699  0336                     u3364:
  4700  0336  0BA1               	decfsz	(??_doScale+1)+0,f
  4701  0337  2B33               	goto	u3365
  4702  0338  2B3C               	goto	u3374
  4703  0339                     u3375:
  4704  0339  1003               	clrc
  4705  033A  0DA2               	rlf	(??_doScale+2)+0,f
  4706  033B  0DA3               	rlf	(??_doScale+2)+1,f
  4707  033C                     u3374:
  4708  033C  0BA0               	decfsz	(??_doScale+0)+0,f
  4709  033D  2B39               	goto	u3375
  4710  033E  0822               	movf	0+(??_doScale+2)+0,w
  4711  033F  00CD               	movwf	(_preScaleValue)
  4712  0340  0823               	movf	1+(??_doScale+2)+0,w
  4713  0341  00CE               	movwf	(_preScaleValue+1)
  4714  0342  3000               	movlw	0
  4715  0343  1BA3               	btfsc	1+(??_doScale+2)+0,7
  4716  0344  30FF               	movlw	255
  4717  0345  00CF               	movwf	(_preScaleValue+2)
  4718                           
  4719                           	line	296
  4720                           	
  4721  0346                     l3592:	
  4722                           ;blink.c: 296: calcScaleValue = preScaleSelect;
  4723  0346  0862               	movf	(_preScaleSelect),w
  4724  0347  00A0               	movwf	((??_doScale+0)+0)
  4725  0348  01A1               	clrf	((??_doScale+0)+0+1)
  4726  0349  01A2               	clrf	((??_doScale+0)+0+2)
  4727  034A  0820               	movf	0+(??_doScale+0)+0,w
  4728  034B  00F7               	movwf	(_calcScaleValue)
  4729  034C  0821               	movf	1+(??_doScale+0)+0,w
  4730  034D  00F8               	movwf	(_calcScaleValue+1)
  4731  034E  0822               	movf	2+(??_doScale+0)+0,w
  4732  034F  00F9               	movwf	(_calcScaleValue+2)
  4733                           	line	307
  4734                           	
  4735  0350                     l451:	
  4736  0350  0008               	return
  4737                           	opt stack 0
  4738                           GLOBAL	__end_of_doScale
  4739  0351                     	__end_of_doScale:
  4740 ;; =============== function _doScale ends ============
  4741                           
  4742                           	signat	_doScale,88
  4743                           	global	_initTimer2
  4744                           psect	text833,local,class=CODE,delta=2
  4745                           global __ptext833
  4746  07BA                     __ptext833:
  4747                           
  4748 ;; *************** function _initTimer2 *****************
  4749 ;; Defined at:
  4750 ;;		line 193 in file "C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;		None
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;		None
  4755 ;; Return value:  Size  Location     Type
  4756 ;;		None               void
  4757 ;; Registers used:
  4758 ;;		wreg
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4764 ;;      Params:         0       0       0       0
  4765 ;;      Locals:         0       0       0       0
  4766 ;;      Temps:          0       0       0       0
  4767 ;;      Totals:         0       0       0       0
  4768 ;;Total ram usage:        0 bytes
  4769 ;; Hardware stack levels used:    1
  4770 ;; Hardware stack levels required when called:    1
  4771 ;; This function calls:
  4772 ;;		Nothing
  4773 ;; This function is called by:
  4774 ;;		_timersON
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           psect	text833
  4778                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
  4779                           	line	193
  4780                           	global	__size_of_initTimer2
  4781  000A                     	__size_of_initTimer2	equ	__end_of_initTimer2-_initTimer2
  4782                           	
  4783  07BA                     _initTimer2:	
  4784                           	opt	stack 5
  4785                           ; Regs used in _initTimer2: [wreg]
  4786                           	line	197
  4787                           	
  4788  07BA                     l3104:	
  4789                           ;blink.c: 197: T2CON = 0b01111111;
  4790  07BA  307F               	movlw	(07Fh)
  4791  07BB  1283               	bcf	status, 5	;RP0=0, select bank0
  4792  07BC  1303               	bcf	status, 6	;RP1=0, select bank0
  4793  07BD  0092               	movwf	(18)	;volatile
  4794                           	line	199
  4795                           ;blink.c: 199: PR2 = 199;
  4796  07BE  30C7               	movlw	(0C7h)
  4797  07BF  1683               	bsf	status, 5	;RP0=1, select bank1
  4798  07C0  1303               	bcf	status, 6	;RP1=0, select bank1
  4799  07C1  0092               	movwf	(146)^080h	;volatile
  4800                           	line	200
  4801                           	
  4802  07C2                     l3106:	
  4803                           ;blink.c: 200: TMR2IE = 1;
  4804  07C2  148C               	bsf	(1121/8)^080h,(1121)&7
  4805                           	line	202
  4806                           	
  4807  07C3                     l438:	
  4808  07C3  0008               	return
  4809                           	opt stack 0
  4810                           GLOBAL	__end_of_initTimer2
  4811  07C4                     	__end_of_initTimer2:
  4812 ;; =============== function _initTimer2 ends ============
  4813                           
  4814                           	signat	_initTimer2,88
  4815                           	global	_initTimer1
  4816                           psect	text834,local,class=CODE,delta=2
  4817                           global __ptext834
  4818  07AE                     __ptext834:
  4819                           
  4820 ;; *************** function _initTimer1 *****************
  4821 ;; Defined at:
  4822 ;;		line 159 in file "C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
  4823 ;; Parameters:    Size  Location     Type
  4824 ;;		None
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;		None
  4827 ;; Return value:  Size  Location     Type
  4828 ;;		None               void
  4829 ;; Registers used:
  4830 ;;		wreg
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4836 ;;      Params:         0       0       0       0
  4837 ;;      Locals:         0       0       0       0
  4838 ;;      Temps:          0       0       0       0
  4839 ;;      Totals:         0       0       0       0
  4840 ;;Total ram usage:        0 bytes
  4841 ;; Hardware stack levels used:    1
  4842 ;; Hardware stack levels required when called:    1
  4843 ;; This function calls:
  4844 ;;		Nothing
  4845 ;; This function is called by:
  4846 ;;		_timersON
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           psect	text834
  4850                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
  4851                           	line	159
  4852                           	global	__size_of_initTimer1
  4853  000C                     	__size_of_initTimer1	equ	__end_of_initTimer1-_initTimer1
  4854                           	
  4855  07AE                     _initTimer1:	
  4856                           	opt	stack 5
  4857                           ; Regs used in _initTimer1: [wreg]
  4858                           	line	182
  4859                           	
  4860  07AE                     l3100:	
  4861                           ;blink.c: 182: T1CON = 0x31;
  4862  07AE  3031               	movlw	(031h)
  4863  07AF  1283               	bcf	status, 5	;RP0=0, select bank0
  4864  07B0  1303               	bcf	status, 6	;RP1=0, select bank0
  4865  07B1  0090               	movwf	(16)	;volatile
  4866                           	line	183
  4867                           	
  4868  07B2                     l3102:	
  4869                           ;blink.c: 183: TMR1IF = 0;
  4870  07B2  100C               	bcf	(96/8),(96)&7
  4871                           	line	186
  4872                           ;blink.c: 186: TMR1H = 0x09;
  4873  07B3  3009               	movlw	(09h)
  4874  07B4  008F               	movwf	(15)	;volatile
  4875                           	line	187
  4876                           ;blink.c: 187: TMR1L = 0xAC;
  4877  07B5  30AC               	movlw	(0ACh)
  4878  07B6  008E               	movwf	(14)	;volatile
  4879                           	line	189
  4880                           ;blink.c: 189: INTCON = 0xC0;
  4881  07B7  30C0               	movlw	(0C0h)
  4882  07B8  008B               	movwf	(11)	;volatile
  4883                           	line	190
  4884                           	
  4885  07B9                     l435:	
  4886  07B9  0008               	return
  4887                           	opt stack 0
  4888                           GLOBAL	__end_of_initTimer1
  4889  07BA                     	__end_of_initTimer1:
  4890 ;; =============== function _initTimer1 ends ============
  4891                           
  4892                           	signat	_initTimer1,88
  4893                           	global	_initTimer0
  4894                           psect	text835,local,class=CODE,delta=2
  4895                           global __ptext835
  4896  0625                     __ptext835:
  4897                           
  4898 ;; *************** function _initTimer0 *****************
  4899 ;; Defined at:
  4900 ;;		line 118 in file "C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;		None
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;		None
  4905 ;; Return value:  Size  Location     Type
  4906 ;;		None               void
  4907 ;; Registers used:
  4908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4914 ;;      Params:         0       0       0       0
  4915 ;;      Locals:         0       0       0       0
  4916 ;;      Temps:          0       4       0       0
  4917 ;;      Totals:         0       4       0       0
  4918 ;;Total ram usage:        4 bytes
  4919 ;; Hardware stack levels used:    2
  4920 ;; Hardware stack levels required when called:    1
  4921 ;; This function calls:
  4922 ;;		Nothing
  4923 ;; This function is called by:
  4924 ;;		_timersON
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           psect	text835
  4928                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
  4929                           	line	118
  4930                           	global	__size_of_initTimer0
  4931  004A                     	__size_of_initTimer0	equ	__end_of_initTimer0-_initTimer0
  4932                           	
  4933  0625                     _initTimer0:	
  4934                           	opt	stack 4
  4935                           ; Regs used in _initTimer0: [wreg-fsr0h+status,2+status,0+pclath]
  4936                           	line	119
  4937                           	
  4938  0625                     l3554:	
  4939                           ;blink.c: 119: INTCON = 0xA0;
  4940  0625  30A0               	movlw	(0A0h)
  4941  0626  008B               	movwf	(11)	;volatile
  4942                           	line	137
  4943                           ;blink.c: 137: OPTION_REG = 0b10100000;
  4944  0627  30A0               	movlw	(0A0h)
  4945  0628  1683               	bsf	status, 5	;RP0=1, select bank1
  4946  0629  1303               	bcf	status, 6	;RP1=0, select bank1
  4947  062A  0081               	movwf	(129)^080h	;volatile
  4948                           	line	138
  4949                           	
  4950  062B                     l3556:	
  4951                           ;blink.c: 138: OPTION_REG |= prescaleInternalBits[preScaleSelect];
  4952  062B  1283               	bcf	status, 5	;RP0=0, select bank0
  4953  062C  1303               	bcf	status, 6	;RP1=0, select bank0
  4954  062D  0862               	movf	(_preScaleSelect),w
  4955  062E  3E23               	addlw	low((_prescaleInternalBits-__stringbase))
  4956  062F  0084               	movwf	fsr0
  4957  0630  220A               	fcall	stringdir
  4958  0631  00A0               	movwf	(??_initTimer0+0)+0
  4959  0632  0820               	movf	(??_initTimer0+0)+0,w
  4960  0633  1683               	bsf	status, 5	;RP0=1, select bank1
  4961  0634  1303               	bcf	status, 6	;RP1=0, select bank1
  4962  0635  0481               	iorwf	(129)^080h,f	;volatile
  4963                           	line	144
  4964                           	
  4965  0636                     l3558:	
  4966                           ;blink.c: 144: preScaleValue = (1 << prescaleInternalShift[preScaleSelect] << prescaleEx
                                 ternalShift[preScaleSelect]);
  4967  0636  1283               	bcf	status, 5	;RP0=0, select bank0
  4968  0637  1303               	bcf	status, 6	;RP1=0, select bank0
  4969  0638  0862               	movf	(_preScaleSelect),w
  4970  0639  3E18               	addlw	low((_prescaleExternalShift-__stringbase))
  4971  063A  0084               	movwf	fsr0
  4972  063B  220A               	fcall	stringdir
  4973  063C  00A0               	movwf	(??_initTimer0+0)+0
  4974  063D  0AA0               	incf	(??_initTimer0+0)+0,f
  4975  063E  0862               	movf	(_preScaleSelect),w
  4976  063F  3E71               	addlw	low((_prescaleInternalShift-__stringbase))
  4977  0640  0084               	movwf	fsr0
  4978  0641  220A               	fcall	stringdir
  4979  0642  00A1               	movwf	(??_initTimer0+1)+0
  4980  0643  0AA1               	incf	(??_initTimer0+1)+0,f
  4981  0644  3001               	movlw	low(01h)
  4982  0645  00A2               	movwf	(??_initTimer0+2)+0
  4983  0646  3000               	movlw	high(01h)
  4984  0647  00A3               	movwf	(??_initTimer0+2)+0+1
  4985  0648  2E4C               	goto	u3284
  4986  0649                     u3285:
  4987  0649  1003               	clrc
  4988  064A  0DA2               	rlf	(??_initTimer0+2)+0,f
  4989  064B  0DA3               	rlf	(??_initTimer0+2)+1,f
  4990  064C                     u3284:
  4991  064C  0BA1               	decfsz	(??_initTimer0+1)+0,f
  4992  064D  2E49               	goto	u3285
  4993  064E  2E52               	goto	u3294
  4994  064F                     u3295:
  4995  064F  1003               	clrc
  4996  0650  0DA2               	rlf	(??_initTimer0+2)+0,f
  4997  0651  0DA3               	rlf	(??_initTimer0+2)+1,f
  4998  0652                     u3294:
  4999  0652  0BA0               	decfsz	(??_initTimer0+0)+0,f
  5000  0653  2E4F               	goto	u3295
  5001  0654  0822               	movf	0+(??_initTimer0+2)+0,w
  5002  0655  00CD               	movwf	(_preScaleValue)
  5003  0656  0823               	movf	1+(??_initTimer0+2)+0,w
  5004  0657  00CE               	movwf	(_preScaleValue+1)
  5005  0658  3000               	movlw	0
  5006  0659  1BA3               	btfsc	1+(??_initTimer0+2)+0,7
  5007  065A  30FF               	movlw	255
  5008  065B  00CF               	movwf	(_preScaleValue+2)
  5009                           
  5010                           	line	146
  5011                           	
  5012  065C                     l3560:	
  5013                           ;blink.c: 146: TMR0 = 0;
  5014  065C  0181               	clrf	(1)	;volatile
  5015                           	line	147
  5016                           	
  5017  065D                     l3562:	
  5018                           ;blink.c: 147: TMR0cnt = 0;
  5019  065D  3000               	movlw	0
  5020  065E  00C4               	movwf	(_TMR0cnt+3)
  5021  065F  3000               	movlw	0
  5022  0660  00C3               	movwf	(_TMR0cnt+2)
  5023  0661  3000               	movlw	0
  5024  0662  00C2               	movwf	(_TMR0cnt+1)
  5025  0663  3000               	movlw	0
  5026  0664  00C1               	movwf	(_TMR0cnt)
  5027                           
  5028                           	line	148
  5029                           	
  5030  0665                     l3564:	
  5031                           ;blink.c: 148: number = 0;
  5032  0665  3000               	movlw	0
  5033  0666  00CC               	movwf	(_number+3)
  5034  0667  3000               	movlw	0
  5035  0668  00CB               	movwf	(_number+2)
  5036  0669  3000               	movlw	0
  5037  066A  00CA               	movwf	(_number+1)
  5038  066B  3000               	movlw	0
  5039  066C  00C9               	movwf	(_number)
  5040                           
  5041                           	line	153
  5042                           	
  5043  066D                     l3566:	
  5044                           ;blink.c: 153: GIE = 1;
  5045  066D  178B               	bsf	(95/8),(95)&7
  5046                           	line	154
  5047                           	
  5048  066E                     l432:	
  5049  066E  0008               	return
  5050                           	opt stack 0
  5051                           GLOBAL	__end_of_initTimer0
  5052  066F                     	__end_of_initTimer0:
  5053 ;; =============== function _initTimer0 ends ============
  5054                           
  5055                           	signat	_initTimer0,88
  5056                           	global	_init
  5057                           psect	text836,local,class=CODE,delta=2
  5058                           global __ptext836
  5059  07C4                     __ptext836:
  5060                           
  5061 ;; *************** function _init *****************
  5062 ;; Defined at:
  5063 ;;		line 96 in file "C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;		None
  5066 ;; Auto vars:     Size  Location     Type
  5067 ;;		None
  5068 ;; Return value:  Size  Location     Type
  5069 ;;		None               void
  5070 ;; Registers used:
  5071 ;;		wreg, status,2
  5072 ;; Tracked objects:
  5073 ;;		On entry : 0/0
  5074 ;;		On exit  : 0/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5077 ;;      Params:         0       0       0       0
  5078 ;;      Locals:         0       0       0       0
  5079 ;;      Temps:          0       0       0       0
  5080 ;;      Totals:         0       0       0       0
  5081 ;;Total ram usage:        0 bytes
  5082 ;; Hardware stack levels used:    1
  5083 ;; Hardware stack levels required when called:    1
  5084 ;; This function calls:
  5085 ;;		Nothing
  5086 ;; This function is called by:
  5087 ;;		_main
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           psect	text836
  5091                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
  5092                           	line	96
  5093                           	global	__size_of_init
  5094  000A                     	__size_of_init	equ	__end_of_init-_init
  5095                           	
  5096  07C4                     _init:	
  5097                           	opt	stack 6
  5098                           ; Regs used in _init: [wreg+status,2]
  5099                           	line	103
  5100                           	
  5101  07C4                     l3082:	
  5102                           ;blink.c: 103: CMCON = 0b00000111;
  5103  07C4  3007               	movlw	(07h)
  5104  07C5  1283               	bcf	status, 5	;RP0=0, select bank0
  5105  07C6  1303               	bcf	status, 6	;RP1=0, select bank0
  5106  07C7  009F               	movwf	(31)	;volatile
  5107                           	line	108
  5108                           ;blink.c: 108: TRISA = 0x10;
  5109  07C8  3010               	movlw	(010h)
  5110  07C9  1683               	bsf	status, 5	;RP0=1, select bank1
  5111  07CA  1303               	bcf	status, 6	;RP1=0, select bank1
  5112  07CB  0085               	movwf	(133)^080h	;volatile
  5113                           	line	109
  5114                           	
  5115  07CC                     l3084:	
  5116                           ;blink.c: 109: TRISB = 0x00;
  5117  07CC  0186               	clrf	(134)^080h	;volatile
  5118                           	line	114
  5119                           	
  5120  07CD                     l429:	
  5121  07CD  0008               	return
  5122                           	opt stack 0
  5123                           GLOBAL	__end_of_init
  5124  07CE                     	__end_of_init:
  5125 ;; =============== function _init ends ============
  5126                           
  5127                           	signat	_init,88
  5128                           	global	_ISR
  5129                           psect	text837,local,class=CODE,delta=2
  5130                           global __ptext837
  5131  06B6                     __ptext837:
  5132                           
  5133 ;; *************** function _ISR *****************
  5134 ;; Defined at:
  5135 ;;		line 205 in file "C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;		None
  5138 ;; Auto vars:     Size  Location     Type
  5139 ;;		None
  5140 ;; Return value:  Size  Location     Type
  5141 ;;		None               void
  5142 ;; Registers used:
  5143 ;;		wreg
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5149 ;;      Params:         0       0       0       0
  5150 ;;      Locals:         0       0       0       0
  5151 ;;      Temps:          4       0       0       0
  5152 ;;      Totals:         4       0       0       0
  5153 ;;Total ram usage:        4 bytes
  5154 ;; Hardware stack levels used:    1
  5155 ;; This function calls:
  5156 ;;		Nothing
  5157 ;; This function is called by:
  5158 ;;		Interrupt level 1
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           psect	text837
  5162                           	file	"C:\Users\davidq\Documents\GitHub\electronics\FrequencyMeter - 16F628A\blink.c"
  5163                           	line	205
  5164                           	global	__size_of_ISR
  5165  0041                     	__size_of_ISR	equ	__end_of_ISR-_ISR
  5166                           	
  5167  06B6                     _ISR:	
  5168                           	opt	stack 3
  5169                           ; Regs used in _ISR: [wreg]
  5170                           psect	intentry,class=CODE,delta=2
  5171                           global __pintentry
  5172  0004                     __pintentry:
  5173                           global interrupt_function
  5174  0004                     interrupt_function:
  5175                           	global saved_w
  5176  007E                     	saved_w	set	btemp+0
  5177  0004  00FE               	movwf	saved_w
  5178  0005  0E03               	swapf	status,w
  5179  0006  00F0               	movwf	(??_ISR+0)
  5180  0007  0804               	movf	fsr0,w
  5181  0008  00F1               	movwf	(??_ISR+1)
  5182  0009  080A               	movf	pclath,w
  5183  000A  00F2               	movwf	(??_ISR+2)
  5184  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  5185  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  5186  000D  087F               	movf	btemp+1,w
  5187  000E  00F3               	movwf	(??_ISR+3)
  5188  000F  2EB6               	ljmp	_ISR
  5189                           psect	text837
  5190                           	line	210
  5191                           	
  5192  06B6                     i1l3108:	
  5193                           ;blink.c: 210: if (TMR0IF)
  5194  06B6  1D0B               	btfss	(90/8),(90)&7
  5195  06B7  2EB9               	goto	u261_21
  5196  06B8  2EBA               	goto	u261_20
  5197  06B9                     u261_21:
  5198  06B9  2ECC               	goto	i1l3114
  5199  06BA                     u261_20:
  5200                           	line	212
  5201                           	
  5202  06BA                     i1l3110:	
  5203                           ;blink.c: 211: {
  5204                           ;blink.c: 212: TMR0IF = 0;
  5205  06BA  110B               	bcf	(90/8),(90)&7
  5206                           	line	224
  5207                           	
  5208  06BB                     i1l3112:	
  5209                           ;blink.c: 224: TMR0cnt++;
  5210  06BB  3001               	movlw	01h
  5211  06BC  07C1               	addwf	(_TMR0cnt),f
  5212  06BD  3000               	movlw	0
  5213  06BE  1803               	skipnc
  5214  06BF  3001               movlw 1
  5215  06C0  07C2               	addwf	(_TMR0cnt+1),f
  5216  06C1  3000               	movlw	0
  5217  06C2  1803               	skipnc
  5218  06C3  3001               movlw 1
  5219  06C4  07C3               	addwf	(_TMR0cnt+2),f
  5220  06C5  3000               	movlw	0
  5221  06C6  1803               	skipnc
  5222  06C7  3001               movlw 1
  5223  06C8  07C4               	addwf	(_TMR0cnt+3),f
  5224                           	line	227
  5225                           ;blink.c: 227: RB4 = !RB4;
  5226  06C9  3010               	movlw	1<<((52)&7)
  5227  06CA  0686               	xorwf	((52)/8),f
  5228  06CB  2ECC               	goto	i1l3114
  5229                           	line	228
  5230                           	
  5231  06CC                     i1l441:	
  5232                           	line	234
  5233                           	
  5234  06CC                     i1l3114:	
  5235                           ;blink.c: 228: }
  5236                           ;blink.c: 234: if (TMR1IF)
  5237  06CC  1C0C               	btfss	(96/8),(96)&7
  5238  06CD  2ECF               	goto	u262_21
  5239  06CE  2ED0               	goto	u262_20
  5240  06CF                     u262_21:
  5241  06CF  2ED8               	goto	i1l3120
  5242  06D0                     u262_20:
  5243                           	line	250
  5244                           	
  5245  06D0                     i1l3116:	
  5246                           ;blink.c: 235: {
  5247                           ;blink.c: 250: TMR1H = 0x0B;
  5248  06D0  300B               	movlw	(0Bh)
  5249  06D1  008F               	movwf	(15)	;volatile
  5250                           	line	251
  5251                           ;blink.c: 251: TMR1L = 0xDC;
  5252  06D2  30DC               	movlw	(0DCh)
  5253  06D3  008E               	movwf	(14)	;volatile
  5254                           	line	253
  5255                           	
  5256  06D4                     i1l3118:	
  5257                           ;blink.c: 253: TMR1IF = 0;
  5258  06D4  100C               	bcf	(96/8),(96)&7
  5259                           	line	256
  5260                           ;blink.c: 256: RB5 = ~RB5;
  5261  06D5  3020               	movlw	1<<((53)&7)
  5262  06D6  0686               	xorwf	((53)/8),f
  5263  06D7  2ED8               	goto	i1l3120
  5264                           	line	257
  5265                           	
  5266  06D8                     i1l442:	
  5267                           	line	259
  5268                           	
  5269  06D8                     i1l3120:	
  5270                           ;blink.c: 257: }
  5271                           ;blink.c: 259: if (TMR2IF)
  5272  06D8  1C8C               	btfss	(97/8),(97)&7
  5273  06D9  2EDB               	goto	u263_21
  5274  06DA  2EDC               	goto	u263_20
  5275  06DB                     u263_21:
  5276  06DB  2EEC               	goto	i1l444
  5277  06DC                     u263_20:
  5278                           	line	261
  5279                           	
  5280  06DC                     i1l3122:	
  5281                           ;blink.c: 260: {
  5282                           ;blink.c: 261: TMR2IF = 0;
  5283  06DC  108C               	bcf	(97/8),(97)&7
  5284                           	line	263
  5285                           	
  5286  06DD                     i1l3124:	
  5287                           ;blink.c: 263: TMR1cnt++;
  5288  06DD  3001               	movlw	low(01h)
  5289  06DE  07D0               	addwf	(_TMR1cnt),f
  5290  06DF  1803               	skipnc
  5291  06E0  0AD1               	incf	(_TMR1cnt+1),f
  5292  06E1  3000               	movlw	high(01h)
  5293  06E2  07D1               	addwf	(_TMR1cnt+1),f
  5294                           	line	264
  5295                           ;blink.c: 264: PR2 = 244;
  5296  06E3  30F4               	movlw	(0F4h)
  5297  06E4  1683               	bsf	status, 5	;RP0=1, select bank1
  5298  06E5  1303               	bcf	status, 6	;RP1=0, select bank1
  5299  06E6  0092               	movwf	(146)^080h	;volatile
  5300                           	line	265
  5301                           ;blink.c: 265: RB6 = !RB6;
  5302  06E7  3040               	movlw	1<<((54)&7)
  5303  06E8  1283               	bcf	status, 5	;RP0=0, select bank0
  5304  06E9  1303               	bcf	status, 6	;RP1=0, select bank0
  5305  06EA  0686               	xorwf	((54)/8),f
  5306  06EB  2EEC               	goto	i1l444
  5307                           	line	266
  5308                           	
  5309  06EC                     i1l443:	
  5310                           	line	267
  5311                           	
  5312  06EC                     i1l444:	
  5313  06EC  0873               	movf	(??_ISR+3),w
  5314  06ED  00FF               	movwf	btemp+1
  5315  06EE  0872               	movf	(??_ISR+2),w
  5316  06EF  008A               	movwf	pclath
  5317  06F0  0871               	movf	(??_ISR+1),w
  5318  06F1  0084               	movwf	fsr0
  5319  06F2  0E70               	swapf	(??_ISR+0)^0FFFFFF80h,w
  5320  06F3  0083               	movwf	status
  5321  06F4  0EFE               	swapf	saved_w,f
  5322  06F5  0E7E               	swapf	saved_w,w
  5323  06F6  0009               	retfie
  5324                           	opt stack 0
  5325                           GLOBAL	__end_of_ISR
  5326  06F7                     	__end_of_ISR:
  5327 ;; =============== function _ISR ends ============
  5328                           
  5329                           	signat	_ISR,88
  5330                           psect	text838,local,class=CODE,delta=2
  5331                           global __ptext838
  5332  0000                     __ptext838:
  5333                           	global	btemp
  5334  007E                     	btemp set 07Eh
  5335                           
  5336                           	DABS	1,126,2	;btemp
  5337                           	global	wtemp0
  5338  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Tue Sep 22 21:10:05 2015

                     pc 0002                      _RD 04E0                      _HZ 0210                      _WR 04E1  
                    fsr 0004           ?_lcd_putdigit 0070                     l432 066E                     l450 0322  
                   l435 07B9                     l451 0350                     l429 07CD                     l438 07C3  
                   l462 078A                     l454 013E                     l470 05A3                     l447 02DF  
                   l455 0146                     l471 05B4                     l448 0317                     l456 015B  
                   l472 05CB                     l449 02F3                     l465 0520                     l457 0195  
                   l473 05D5                     l458 016F                     l474 05D7                     l459 01F7  
                   l475 05D8                     l900 00D1                     l476 05D8                     l468 05A2  
                   l901 011F                     l469 05A4                     l870 0757                     l873 07AD  
                   l867 06B5                     l876 076B                     l885 07E5                     l877 075C  
                   l893 0033                     l878 0776                     l894 010A                     l879 0776  
                   l895 00A9                     l888 07DD                     l897 0071                     l898 00A8  
                   l899 00D9                     _GIE 005F                     _RA0 0028                     _RA1 0029  
                   _RA3 002B                     _RB4 0034                     _RB5 0035                     _RB6 0036  
                   _RB7 0037                     _PR2 0092                     _ISR 06B6                     _sig 0054  
                   fsr0 0004                     indf 0000  lcd_putnumber@displayHZ 0033            ___awmod@sign 0076  
           lcd_goto@pos 0020                    ?_ISR 0070                    l1310 038D                    l1311 03CB  
                  l1400 0624                    l1312 03E1                    l1313 03E1                    l3100 07AE  
                  l1500 0447                    l1308 035D                    l1501 0451                    l1309 0386  
                  l3102 07B2                    l3104 07BA                    l3200 057E                    l3106 07C2  
                  l1530 0462                    l1531 046C                    l1540 04B9                    l1532 04A8  
                  l1533 0482                    l1534 0476                    l1535 0487                    l1480 0564  
                  l1536 0488                    l1481 0574                    l1537 0499                    l3082 07C4  
                  l1482 057E                    l1538 04A7                    l1650 072D                    l1475 0575  
                  l1539 04B2                    l1651 0734                    l3084 07CC                    l1476 053D  
                  l1397 05E4                    l1477 052F                    l1398 0600                    l1478 0542  
                  l3190 0543                    l3182 0521                    l1494 0448                    l1399 061B  
                  l1479 0543                    l1495 0406                    l3192 0555                    l3184 052B  
                  l1496 03F8                    l1648 06FE                    l1497 040B                    l1649 0715  
                  l3610 05D9                    l3194 0564                    l3186 052F                    l1498 040C  
                  l1499 0437                    l3620 061B                    l3612 05E4                    l3196 056D  
                  l3188 053D                    l3700 0379                    l3622 0624                    l3614 05E8  
                  l3198 0575                    l3630 0406                    l3710 03A5                    l3702 037D  
                  l3560 065C                    l3616 0600                    l3640 0437                    l3632 040C  
                  l3624 03E2                    l3720 03D8                    l3712 03C1                    l3704 0386  
                  l3800 0032                    l3562 065D                    l3554 0625                    l3570 02CE  
                  l3618 0609                    l3642 0440                    l3634 0415                    l3626 03F4  
                  l3650 0459                    l3714 03C7                    l3706 038A                    l3730 0780  
                  l3722 0777                    l3810 0073                    l3802 0033                    l3564 0665  
                  l3556 062B                    l3580 02F2                    l3572 02D6                    l3636 0427  
                  l3628 03F8                    l3644 0448                    l3660 0476                    l3652 0462  
                  l3716 03CF                    l3708 038D                    l3732 0781                    l3724 077A  
                  l3740 04BA                    l3812 0079                    l3820 00A9                    l3804 0067  
                  l3900 018A                    l3566 066D                    l3558 0636                    l3590 0322  
                  l3582 02F3                    l3574 02D7                    l3646 0451                    l3638 0435  
                  l3670 0499                    l3662 047D                    l3654 0466                    l3718 03D6  
                  l3734 0785                    l3726 077E                    l3750 04C3                    l3742 04BD  
                  l3830 00FC                    l3822 00C5                    l3814 0095                    l3806 006C  
                  l3910 01A4                    l3902 018E                    l3592 0346                    l3584 0310  
                  l3576 02DE                    l3568 02B3                    l3680 04B9                    l3672 04A0  
                  l3664 0482                    l3656 046C                    l3648 0452                    l3736 0788  
                  l3728 077F                    l3752 0517                    l3744 04BE                    l3760 074D  
                  l3824 00CC                    l3816 009C                    l3808 0071                    l3832 010A  
                  l3840 0672                    l3920 01CE                    l3912 01AB                    l3904 0195  
                  l3586 0317                    l3578 02DF                    l3666 0488                    l3658 0472  
                  l3674 04A8                    l3690 071D                    l3682 06F7                    l3738 0789  
                  l3746 04BF                    l3762 074E                    l3754 0736                    l3770 07E2  
                  l3834 0113                    l3818 00A1                    l3826 00D9                    l3850 0690  
                  l3842 067F                    l3922 01F2                    l3914 01B2                    l3906 0199  
                  l3930 0589                    l3588 031D                    l3676 04AC                    l3668 0492  
                  l3692 072D                    l3684 06FE                    l3748 04C0                    l3764 0755  
                  l3756 073B                    l3772 0758                    l3780 079D                    l3836 0118  
                  l3828 00F6                    l3860 069F                    l3852 0693                    l3844 0685  
                  l3916 01C1                    l3908 019D                    l3940 05B4                    l3932 058B  
                  l3924 057F                    l3678 04B2                    l3694 0734                    l3686 0704  
                  l3766 0756                    l3758 074C                    l3774 075C                    l3782 07A0  
                  l3790 0011                    l3870 06B2                    l3862 06AC                    l3854 0694  
                  l3846 0686                    l3838 066F                    l3918 01C8                    l3950 05CC  
                  l3942 05B5                    l3934 0592                    l3926 0581                    l3688 0715  
                  l3696 0354                    l3768 07E1                    l3776 0762                    l3784 07A2  
                  l3792 0019                    l3872 06B3                    l3864 06AD                    l3856 069B  
                  l3848 0687                    l3880 0134                    l3952 05D5                    l3944 05C1  
                  l3936 05A0                    l3928 0582                    l3698 035D                    l3778 076B  
                  l3786 07D9                    l3794 0021                    l3866 06AE                    l3858 069E  
                  l3890 0153                    l3882 013E                    l3874 0120                    l3946 05C2  
                  l3938 05A4                    l3788 07DA                    l3796 0022                    l3868 06B0  
                  l3892 015A                    l3884 0146                    l3876 0128                    l3948 05CB  
                  l3798 0024                    l3894 015B                    l3886 0148                    l3878 012A  
                  l3896 016E                    l3888 0152                    l3898 016F                    STR_1 02A8  
                  STR_2 02AB                    STR_3 02A5                    STR_4 02AE                    STR_5 0299  
                  STR_6 02A2                    STR_7 029F                    STR_8 029C                    STR_9 0296  
                  _T0IE 005D                    _FREQ 023D                    u3300 02C3                    u3310 02DD  
                  u3311 02DC                    u3320 02F1                    u3321 02F0                    u3305 02BE  
                  u3401 05F1                    u3330 0301                    u3402 05F8                    u3403 05FF  
                  u3340 0316                    u3500 0446                    u3341 0315                    u3325 02ED  
                  u3501 0445                    u3350 031D                    u3430 061A                    u3510 0459  
                  u3351 031C                    u3335 02FC                    u3431 0619                    u3415 0602  
                  u3511 0458                    u2800 0541                    u3440 03F4                    u3520 0466  
                  u3600 0704                    u3425 060A                    u2801 0540                    u3441 03F3  
                  u3521 0465                    u3601 0703                    u2810 0555                    u3530 0472  
                  u2811 0554                    u3531 0471                    u3611 070D                    u3284 064C  
                  u3364 0336                    u3460 040A                    u3612 0714                    u3285 0649  
                  u3365 0333                    u3461 0409                    u3294 0652                    u3374 033C  
                  u3390 05E8                    u2830 0573                    u3550 0486                    u3710 0775  
                  u3295 064F                    u3375 0339                    u3391 05E7                    u2831 0572  
                  u2815 0551                    u3455 03FA                    u3551 0485                    u3711 0774  
                  u3480 0427                    u3560 0492                    u3640 072C                    u3720 0031  
                  u3800 0134                    u2825 0565                    u3481 0426                    u3561 0491  
                  u3545 0477                    u3641 072B                    u3625 0716                    u3705 0743  
                  u3721 0030                    u3801 0133                    u3650 0385                    u3730 006C  
                  u3810 0159                    u3475 040E                    u3635 071E                    u3651 0384  
                  u3731 006B                    u3811 0158                    u2780 052B                    u3580 04A6  
                  u3660 03C7                    u3740 0070                    u3820 016D                    u2781 052A  
                  u3485 0423                    u3581 04A5                    u3565 048E                    u3661 03C6  
                  u3725 002D                    u3821 016C                    u3590 04AC                    u3670 03E0  
                  u3750 0095                    u3830 0194                    u3495 0438                    u3575 049A  
                  u3671 03DF                    u3751 0094                    u3831 0193                    u3680 04E8  
                  u3760 009C                    u3761 009B                    u3825 0169                    u3690 0504  
                  u3770 00C5                    u2795 0531                    u3691 0505                    u3771 00C4  
                  u3907 068B                    u3692 050A                    u3780 00CC                    u3844 01E2  
                  u3860 05B3                    u3693 050B                    u3685 04E4                    u3781 00CB  
                  u3917 0696                    u3845 01DF                    u3861 05B2                    u3790 0109  
                  u3854 01E8                    u3870 05C1                    u3791 0108                    u3927 06A1  
                  u3855 01E5                    u3871 05C0                    u3937 07A8                    u3865 05AF  
                  u3947 0738                    u3795 0105                    u3957 051B                    u3887 059A  
                  u3897 0678                    _TMR0 0001                    _WREN 04E2          ?_lcd_putnumber 002D  
                  _band 0052                    _main 057F                    _init 07C4                    btemp 007E  
                  start 0010                   ??_ISR 0070          ??_lcd_putdigit 0077                   ?_main 0070  
  __size_of_doFrequency 00D8                   ?_init 0070                   _EEADR 009B                   STR_10 02B1  
                 STR_11 028F                   STR_12 028B                   STR_13 028D                   STR_14 028D  
                 STR_15 0293         __end_of___awmod 04BA                   _CARRY 0018                   _CMCON 001F  
       __end_of___lldiv 0452                   _T1CON 0010         __end_of___llmod 057F                   _T2CON 0012  
                 i1l441 06CC                   i1l442 06D8                   i1l443 06EC                   i1l444 06EC  
                 _SCALE 023E                   _TMR1H 000F                   _TMR1L 000E                   _PORTB 0006  
                 _TRISA 0085                   _TRISB 0086         __end_of_doScale 0351     ___lmul@multiplicand 0024  
                 _bands 0261                   _divBy 0045                   _digit 0053                   _ultoa 0351  
                 pclath 000A                   status 0003                   wtemp0 007E          _preScaleSelect 0062  
          __end_of_main 05D9            __end_of_init 07CE                  ??_main 003E                  ??_init 0074  
      ___llmod@dividend 0024                  _EEDATA 009A                  _EECON1 009C                  _EECON2 009D  
       ??_lcd_putnumber 0031                  ?_ultoa 002D                  i1l3110 06BA                  i1l3120 06D8  
                i1l3112 06BB                  i1l3122 06DC                  i1l3114 06CC                  i1l3124 06DD  
                i1l3116 06D0                  i1l3108 06B6                  i1l3118 06D4                  _INTCON 000B  
                u261_20 06BA                  u261_21 06B9                  u262_20 06D0                  u262_21 06CF  
                u263_20 06DC                  u263_21 06DB                  _TMR0IF 005A                  _TMR1IE 0460  
                _TMR1IF 0060                  _TMR2IE 0461                  _TMR2IF 0061        __end_of_lcd_init 06B6  
      __end_of_lcd_goto 07E6        __end_of_lcd_puts 0777                  ___lmul 05D9                  ___tmul 06F7  
             ??___awmod 0074               ??___lldiv 0074               ??___llmod 0074                  _buffer 0055  
             ??_doScale 0020         ___awmod@divisor 0020                  _qbytes 0271                  _number 0049  
       ___awmod@counter 0075                  clrloop 07CF           lcd_putdigit@c 0020                  saved_w 007E  
      __end_of_timersON 078B                  ultoa@c 0037                  ultoa@v 0033    __end_of_lcd_putdigit 07DE  
        __pcstackCOMMON 0070            __pidataBANK0 07E6           __end_of_ultoa 03E2      __size_of_lcd_clear 0011  
    __size_of_lcd_write 0023                 ??_ultoa 0076              __pbssBANK0 0041              __pmaintext 057F  
               ?___lmul 0020                 ?___tmul 0020              __pintentry 0004          ___lmul@product 0028  
    __size_of_timersOFF 0067                 _TMR0cnt 0041                 _TMR1cnt 0050               ?_lcd_init 0070  
             ?_lcd_goto 0070               ?_lcd_puts 0020       __end_of_lcd_clear 07AE               ?_timersON 0070  
            _initTimer0 0625              _initTimer1 07AE              _initTimer2 07BA         __size_of___lmul 004C  
               ___awmod 0452       __end_of_lcd_write 0758         __size_of___tmul 003E           ??_doFrequency 0039  
               ___lldiv 03E2                 ___llmod 0521                 _doScale 02B3    _prescaleInternalBits 0232  
          __size_of_ISR 0041        ___awmod@dividend 0022                 _noinput 023F                 _version 0250  
 __size_of_lcd_putdigit 0008              ??_lcd_init 0022              ??_lcd_goto 0077              ??_lcd_puts 0077  
  end_of_initialization 079B    _prescaleExternalBits 021C         ___lldiv@divisor 0020       __end_of_timersOFF 0521  
       ___lldiv@counter 002C              ??_timersON 0074            _lcd_putdigit 07D6     __end_of_doFrequency 01F8  
     doFrequency@pBands 003D   __end_of_lcd_putnumber 0120              lcd_write@c 0076             ?_initTimer0 0070  
           ?_initTimer1 0070             ?_initTimer2 0070          __end_of___lmul 0625          __end_of___tmul 0735  
         _preScaleValue 004D     start_initialization 078B             __end_of_ISR 06F7          _calcScaleValue 0077  
       ___llmod@divisor 0020         ___llmod@counter 0075                ??___lmul 0074                ??___tmul 0074  
           __pdataBANK0 005F             _doFrequency 0120          ___tmul@product 0074             __pbssCOMMON 0077  
         __pcstackBANK0 0020     lcd_putnumber@number 002D     __size_of_initTimer0 004A     __size_of_initTimer1 000C  
   __size_of_initTimer2 000A       __size_of_lcd_init 0047       __size_of_lcd_goto 0008       __size_of_lcd_puts 001F  
              ?___awmod 0020               __ptext820 079D               __ptext821 0758               __ptext830 0521  
             __ptext822 07DE               __ptext831 05D9               __ptext823 0735               __ptext832 02B3  
             __ptext824 04BA               __ptext816 0120               __ptext833 07BA               __ptext825 0777  
             __ptext817 066F               __ptext834 07AE               __ptext826 0351               __ptext818 0011  
             __ptext835 0625               __ptext827 06F7               __ptext819 07D6               __ptext836 07C4  
             __ptext828 0452               __ptext837 06B6               __ptext829 03E2               __ptext838 0000  
              ?___lldiv 0020                ?___llmod 0020               _findScale 0061                ?_doScale 0070  
             _lcd_clear 079D       __size_of_timersON 0014               __pstrings 0200               _lcd_write 0735  
        __size_of_ultoa 0091       interrupt_function 0004               _timersOFF 04BA              ?_lcd_clear 0070  
           __stringbase 020F              ?_lcd_write 0070               lcd_puts@s 0020     ___tmul@multiplicand 0023  
     ___lmul@multiplier 0020            ??_initTimer0 0020            ??_initTimer1 0074            ??_initTimer2 0074  
            ?_timersOFF 0070        __size_of___awmod 0068        __size_of___lldiv 0070        __size_of___llmod 005E  
      __size_of_doScale 009E   _prescaleInternalShift 0280                _lcd_init 066F                _lcd_goto 07DE  
              _lcd_puts 0758      __end_of_initTimer0 066F      __end_of_initTimer1 07BA      __end_of_initTimer2 07C4  
         __size_of_main 005A           __size_of_init 000A                clear_ram 07CE                _timersON 0777  
          ?_doFrequency 0070             ??_lcd_clear 0020             ??_lcd_write 0074  __size_of_lcd_putnumber 010F  
     lcd_putnumber@F612 005F   _prescaleExternalShift 0227               ultoa@base 0031       lcd_putnumber@loop 0035  
              intlevel1 0000        ___lldiv@dividend 0024               stringcode 020A             ??_timersOFF 002C  
     ___tmul@multiplier 0020                ultoa@buf 0038                ultoa@val 002D              _OPTION_REG 0081  
      ___lldiv@quotient 0028                stringdir 020A                stringtab 0200           _lcd_putnumber 0011  
