

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Sun Sep 20 17:40:42 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F628A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 79 "C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 79 "C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
    45  2007  FF22               	dw 0xFFEE & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFB & 0xFF7F & 0xFFFF & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_lcd_init
    48                           	FNCALL	_main,_timersON
    49                           	FNCALL	_main,_lcd_puts
    50                           	FNCALL	_main,_lcd_goto
    51                           	FNCALL	_main,_lcd_clear
    52                           	FNCALL	_main,_timersOFF
    53                           	FNCALL	_main,_doScale
    54                           	FNCALL	_main,_doFrequency
    55                           	FNCALL	_doFrequency,_lcd_goto
    56                           	FNCALL	_doFrequency,_lcd_putnumber
    57                           	FNCALL	_doFrequency,_lcd_puts
    58                           	FNCALL	_doFrequency,___lmul
    59                           	FNCALL	_doFrequency,_ultoa
    60                           	FNCALL	_lcd_init,_lcd_write
    61                           	FNCALL	_lcd_init,_lcd_clear
    62                           	FNCALL	_lcd_putnumber,___lldiv
    63                           	FNCALL	_lcd_putnumber,___llmod
    64                           	FNCALL	_lcd_putnumber,_lcd_putdigit
    65                           	FNCALL	_lcd_putnumber,___awmod
    66                           	FNCALL	_lcd_putnumber,_lcd_puts
    67                           	FNCALL	_lcd_putdigit,_lcd_write
    68                           	FNCALL	_lcd_clear,_lcd_write
    69                           	FNCALL	_lcd_puts,_lcd_write
    70                           	FNCALL	_lcd_goto,_lcd_write
    71                           	FNCALL	_timersOFF,___tmul
    72                           	FNCALL	_timersOFF,___lmul
    73                           	FNCALL	_timersON,_initTimer0
    74                           	FNCALL	_timersON,_initTimer1
    75                           	FNCALL	_ultoa,___lldiv
    76                           	FNCALL	_ultoa,___llmod
    77                           	FNROOT	_main
    78                           	FNCALL	intlevel1,_ISR
    79                           	global	intlevel1
    80                           	FNROOT	intlevel1
    81                           	global	lcd_putnumber@F612
    82                           	global	_findScale
    83                           	global	_preScaleSelect
    84                           psect	idataBANK0,class=CODE,space=0,delta=2
    85                           global __pidataBANK0
    86  07EC                     __pidataBANK0:
    87                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
    88                           	line	154
    89                           
    90                           ;initializer for lcd_putnumber@F612
    91  07EC  342E               	retlw	02Eh
    92  07ED  3400               	retlw	0
    93                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
    94                           	line	92
    95                           
    96                           ;initializer for _findScale
    97  07EE  3401               	retlw	01h
    98                           	line	50
    99                           
   100                           ;initializer for _preScaleSelect
   101  07EF  3407               	retlw	07h
   102                           	global	_HZ
   103                           psect	strings,class=STRING,delta=2
   104                           global __pstrings
   105  0200                     __pstrings:
   106                           ;	global	stringdir,stringtab,__stringbase
   107  0200                     stringtab:
   108                           ;	String table - string pointers are 1 byte each
   109  0200  1BFF               	btfsc	(btemp+1),7
   110  0201  2A0A               	ljmp	stringcode
   111  0202  1383               	bcf	status,7
   112  0203  187F               	btfsc	(btemp+1),0
   113  0204  1783               	bsf	status,7
   114  0205  0800               	movf	indf,w
   115  0206  0A84               	incf fsr
   116  0207  1903               skipnz
   117  0208  0AFF               incf btemp+1
   118  0209  0008               	return
   119  020A                     stringcode:stringdir:
      + 020A                     stringdir:	
   120  020A  3002               movlw high(stringdir)
   121  020B  008A               movwf pclath
   122  020C  0804               movf fsr,w
   123  020D  0A84               incf fsr
   124  020E  0782               	addwf pc
   125  020F                     __stringbase:
   126  020F  3400               	retlw	0
   127                           psect	strings
   128                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
   129                           	line	49
   130  0210                     _HZ:
   131  0210  3420               	retlw	020h
   132  0211  3420               	retlw	020h
   133  0212  3420               	retlw	020h
   134  0213  3420               	retlw	020h
   135  0214  344B               	retlw	04Bh
   136  0215  344B               	retlw	04Bh
   137  0216  344B               	retlw	04Bh
   138  0217  344D               	retlw	04Dh
   139  0218  344D               	retlw	04Dh
   140  0219  344D               	retlw	04Dh
   141  021A  3447               	retlw	047h
   142  021B  3400               	retlw	0
   143                           	global	_prescaleExternalBits
   144                           psect	strings
   145                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
   146                           	line	64
   147  021C                     _prescaleExternalBits:
   148  021C  3400               	retlw	0
   149  021D  3400               	retlw	0
   150  021E  3400               	retlw	0
   151  021F  3400               	retlw	0
   152  0220  3400               	retlw	0
   153  0221  3400               	retlw	0
   154  0222  3400               	retlw	0
   155  0223  3400               	retlw	0
   156  0224  3401               	retlw	01h
   157  0225  3402               	retlw	02h
   158  0226  3403               	retlw	03h
   159                           	global	_prescaleExternalShift
   160                           psect	strings
   161                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
   162                           	line	65
   163  0227                     _prescaleExternalShift:
   164  0227  3400               	retlw	0
   165  0228  3400               	retlw	0
   166  0229  3400               	retlw	0
   167  022A  3400               	retlw	0
   168  022B  3400               	retlw	0
   169  022C  3400               	retlw	0
   170  022D  3400               	retlw	0
   171  022E  3400               	retlw	0
   172  022F  3406               	retlw	06h
   173  0230  3407               	retlw	07h
   174  0231  3408               	retlw	08h
   175                           	global	_prescaleInternalBits
   176                           psect	strings
   177                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
   178                           	line	62
   179  0232                     _prescaleInternalBits:
   180  0232  3400               	retlw	0
   181  0233  3401               	retlw	01h
   182  0234  3402               	retlw	02h
   183  0235  3403               	retlw	03h
   184  0236  3404               	retlw	04h
   185  0237  3405               	retlw	05h
   186  0238  3406               	retlw	06h
   187  0239  3407               	retlw	07h
   188  023A  3402               	retlw	02h
   189  023B  3402               	retlw	02h
   190  023C  3402               	retlw	02h
   191                           	global	_FREQ
   192                           psect	strings
   193                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
   194                           	line	90
   195  023D                     _FREQ:
   196  023D  340A               	retlw	0Ah
   197                           	global	_SCALE
   198                           psect	strings
   199                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
   200                           	line	91
   201  023E                     _SCALE:
   202  023E  3401               	retlw	01h
   203                           	global	_noinput
   204                           psect	strings
   205                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
   206                           	line	43
   207  023F                     _noinput:
   208  023F  342D               	retlw	02Dh
   209  0240  342D               	retlw	02Dh
   210  0241  342D               	retlw	02Dh
   211  0242  343E               	retlw	03Eh
   212  0243  344E               	retlw	04Eh
   213  0244  346F               	retlw	06Fh
   214  0245  3420               	retlw	020h
   215  0246  3469               	retlw	069h
   216  0247  346E               	retlw	06Eh
   217  0248  3470               	retlw	070h
   218  0249  3475               	retlw	075h
   219  024A  3474               	retlw	074h
   220  024B  343C               	retlw	03Ch
   221  024C  342D               	retlw	02Dh
   222  024D  342D               	retlw	02Dh
   223  024E  342D               	retlw	02Dh
   224  024F  3400               	retlw	0
   225                           	global	_version
   226                           psect	strings
   227                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
   228                           	line	42
   229  0250                     _version:
   230  0250  3448               	retlw	048h
   231  0251  347A               	retlw	07Ah
   232  0252  3420               	retlw	020h
   233  0253  3443               	retlw	043h
   234  0254  346F               	retlw	06Fh
   235  0255  3475               	retlw	075h
   236  0256  346E               	retlw	06Eh
   237  0257  3474               	retlw	074h
   238  0258  3465               	retlw	065h
   239  0259  3472               	retlw	072h
   240  025A  3420               	retlw	020h
   241  025B  3476               	retlw	076h
   242  025C  3431               	retlw	031h
   243  025D  342E               	retlw	02Eh
   244  025E  3431               	retlw	031h
   245  025F  3468               	retlw	068h
   246  0260  3400               	retlw	0
   247                           	global	_bands
   248                           psect	strings
   249                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
   250                           	line	67
   251  0261                     _bands:
   252  0261  34A0               	retlw	(STR_1-__stringbase)&0ffh
   253  0262  34A3               	retlw	(STR_2-__stringbase)&0ffh
   254  0263  349D               	retlw	(STR_3-__stringbase)&0ffh
   255  0264  34A6               	retlw	(STR_4-__stringbase)&0ffh
   256  0265  3491               	retlw	(STR_5-__stringbase)&0ffh
   257  0266  349A               	retlw	(STR_6-__stringbase)&0ffh
   258  0267  3497               	retlw	(STR_7-__stringbase)&0ffh
   259  0268  3494               	retlw	(STR_8-__stringbase)&0ffh
   260  0269  348E               	retlw	(STR_9-__stringbase)&0ffh
   261  026A  3400               	retlw	0
   262  026B  3400               	retlw	0
   263  026C  3400               	retlw	0
   264  026D  3400               	retlw	0
   265  026E  3400               	retlw	0
   266  026F  3400               	retlw	0
   267  0270  3400               	retlw	0
   268                           	global	_qbytes
   269                           psect	strings
   270                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
   271                           	line	41
   272  0271                     _qbytes:
   273  0271  3451               	retlw	051h
   274  0272  342D               	retlw	02Dh
   275  0273  3442               	retlw	042h
   276  0274  3479               	retlw	079h
   277  0275  3474               	retlw	074h
   278  0276  3465               	retlw	065h
   279  0277  3473               	retlw	073h
   280  0278  3420               	retlw	020h
   281  0279  3457               	retlw	057h
   282  027A  346F               	retlw	06Fh
   283  027B  3472               	retlw	072h
   284  027C  346C               	retlw	06Ch
   285  027D  3464               	retlw	064h
   286  027E  342E               	retlw	02Eh
   287  027F  3400               	retlw	0
   288                           	global	_prescaleInternalShift
   289                           psect	strings
   290                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
   291                           	line	63
   292  0280                     _prescaleInternalShift:
   293  0280  3401               	retlw	01h
   294  0281  3402               	retlw	02h
   295  0282  3403               	retlw	03h
   296  0283  3404               	retlw	04h
   297  0284  3405               	retlw	05h
   298  0285  3406               	retlw	06h
   299  0286  3407               	retlw	07h
   300  0287  3408               	retlw	08h
   301  0288  3403               	retlw	03h
   302  0289  3403               	retlw	03h
   303  028A  3403               	retlw	03h
   304                           	global	_HZ
   305                           	global	_prescaleExternalBits
   306                           	global	_prescaleExternalShift
   307                           	global	_prescaleInternalBits
   308                           	global	_FREQ
   309                           	global	_SCALE
   310                           	global	_noinput
   311                           	global	_version
   312                           	global	_bands
   313                           	global	_qbytes
   314                           	global	_prescaleInternalShift
   315                           	global	_TMR0cnt
   316                           	global	_divBy
   317                           	global	_number
   318                           	global	_preScaleValue
   319                           	global	_TMR1cnt
   320                           	global	_band
   321                           	global	_digit
   322                           	global	_sig
   323                           	global	_calcScaleValue
   324                           	global	_buffer
   325                           	global	_CMCON
   326  001F                     _CMCON	set	31
   327                           	global	_INTCON
   328  000B                     _INTCON	set	11
   329                           	global	_T1CON
   330  0010                     _T1CON	set	16
   331                           	global	_TMR0
   332  0001                     _TMR0	set	1
   333                           	global	_TMR1H
   334  000F                     _TMR1H	set	15
   335                           	global	_TMR1L
   336  000E                     _TMR1L	set	14
   337                           	global	_CARRY
   338  0018                     _CARRY	set	24
   339                           	global	_GIE
   340  005F                     _GIE	set	95
   341                           	global	_RA0
   342  0028                     _RA0	set	40
   343                           	global	_RA1
   344  0029                     _RA1	set	41
   345                           	global	_RA3
   346  002B                     _RA3	set	43
   347                           	global	_RB4
   348  0034                     _RB4	set	52
   349                           	global	_RB5
   350  0035                     _RB5	set	53
   351                           	global	_RB7
   352  0037                     _RB7	set	55
   353                           	global	_T0IE
   354  005D                     _T0IE	set	93
   355                           	global	_TMR0IF
   356  005A                     _TMR0IF	set	90
   357                           	global	_TMR1IF
   358  0060                     _TMR1IF	set	96
   359                           	global	_EEADR
   360  009B                     _EEADR	set	155
   361                           	global	_EECON1
   362  009C                     _EECON1	set	156
   363                           	global	_EECON2
   364  009D                     _EECON2	set	157
   365                           	global	_EEDATA
   366  009A                     _EEDATA	set	154
   367                           	global	_OPTION_REG
   368  0081                     _OPTION_REG	set	129
   369                           	global	_TRISA
   370  0085                     _TRISA	set	133
   371                           	global	_TRISB
   372  0086                     _TRISB	set	134
   373                           	global	_RD
   374  04E0                     _RD	set	1248
   375                           	global	_TMR1IE
   376  0460                     _TMR1IE	set	1120
   377                           	global	_WR
   378  04E1                     _WR	set	1249
   379                           	global	_WREN
   380  04E2                     _WREN	set	1250
   381                           	global	_PORTB
   382  0006                     _PORTB	set	6
   383                           	
   384  028B                     STR_10:	
   385  028B  346D               	retlw	109	;'m'
   386  028C  3457               	retlw	87	;'W'
   387  028D  342F               	retlw	47	;'/'
   388  028E  3464               	retlw	100	;'d'
   389  028F  3442               	retlw	66	;'B'
   390  0290  3420               	retlw	32	;' '
   391  0291  3400               	retlw	0
   392                           psect	strings
   393                           	
   394  0292                     STR_13:	
   395  0292  3420               	retlw	32	;' '
   396  0293  3420               	retlw	32	;' '
   397  0294  3420               	retlw	32	;' '
   398  0295  3400               	retlw	0
   399                           psect	strings
   400                           	
   401  0296                     STR_12:	
   402  0296  3420               	retlw	32	;' '
   403  0297  3431               	retlw	49	;'1'
   404  0298  342F               	retlw	47	;'/'
   405  0299  3400               	retlw	0
   406                           psect	strings
   407                           	
   408  029A                     STR_16:	
   409  029A  3448               	retlw	72	;'H'
   410  029B  347A               	retlw	122	;'z'
   411  029C  3400               	retlw	0
   412                           psect	strings
   413                           	
   414  029D                     STR_9:	
   415  029D  343F               	retlw	63	;'?'
   416  029E  343F               	retlw	63	;'?'
   417  029F  3400               	retlw	0
   418                           psect	strings
   419                           	
   420  02A0                     STR_5:	
   421  02A0  3420               	retlw	32	;' '
   422  02A1  3448               	retlw	72	;'H'
   423  02A2  3400               	retlw	0
   424                           psect	strings
   425                           	
   426  02A3                     STR_8:	
   427  02A3  3453               	retlw	83	;'S'
   428  02A4  3448               	retlw	72	;'H'
   429  02A5  3400               	retlw	0
   430                           psect	strings
   431                           	
   432  02A6                     STR_7:	
   433  02A6  3455               	retlw	85	;'U'
   434  02A7  3448               	retlw	72	;'H'
   435  02A8  3400               	retlw	0
   436                           psect	strings
   437                           	
   438  02A9                     STR_6:	
   439  02A9  3456               	retlw	86	;'V'
   440  02AA  3448               	retlw	72	;'H'
   441  02AB  3400               	retlw	0
   442                           psect	strings
   443                           	
   444  02AC                     STR_3:	
   445  02AC  3420               	retlw	32	;' '
   446  02AD  344C               	retlw	76	;'L'
   447  02AE  3400               	retlw	0
   448                           psect	strings
   449                           	
   450  02AF                     STR_1:	
   451  02AF  3445               	retlw	69	;'E'
   452  02B0  344C               	retlw	76	;'L'
   453  02B1  3400               	retlw	0
   454                           psect	strings
   455                           	
   456  02B2                     STR_2:	
   457  02B2  3456               	retlw	86	;'V'
   458  02B3  344C               	retlw	76	;'L'
   459  02B4  3400               	retlw	0
   460                           psect	strings
   461                           	
   462  02B5                     STR_4:	
   463  02B5  3420               	retlw	32	;' '
   464  02B6  344D               	retlw	77	;'M'
   465  02B7  3400               	retlw	0
   466                           psect	strings
   467                           	
   468  02B8                     STR_11:	
   469  02B8  3446               	retlw	70	;'F'
   470  02B9  3400               	retlw	0
   471                           psect	strings
   472  0294                     STR_14	equ	STR_13+2
   473  0294                     STR_15	equ	STR_13+2
   474                           	file	"C:\Users\davidq\AppData\Local\Temp\scl0."
   475                           	line	#
   476                           psect cinit,class=CODE,delta=2
   477                           global start_initialization
   478  0789                     start_initialization:
   479                           
   480                           psect	bssCOMMON,class=COMMON,space=1
   481                           global __pbssCOMMON
   482  0077                     __pbssCOMMON:
   483  0077                     _calcScaleValue:
   484  0077                            ds      3
   485                           
   486                           psect	bssBANK0,class=BANK0,space=1
   487                           global __pbssBANK0
   488  0041                     __pbssBANK0:
   489  0041                     _TMR0cnt:
   490  0041                            ds      4
   491                           
   492  0045                     _divBy:
   493  0045                            ds      4
   494                           
   495  0049                     _number:
   496  0049                            ds      4
   497                           
   498  004D                     _preScaleValue:
   499  004D                            ds      3
   500                           
   501  0050                     _TMR1cnt:
   502  0050                            ds      2
   503                           
   504  0052                     _band:
   505  0052                            ds      1
   506                           
   507  0053                     _digit:
   508  0053                            ds      1
   509                           
   510  0054                     _sig:
   511  0054                            ds      1
   512                           
   513  0055                     _buffer:
   514  0055                            ds      10
   515                           
   516                           psect	dataBANK0,class=BANK0,space=1
   517                           global __pdataBANK0
   518  005F                     __pdataBANK0:
   519                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
   520                           	line	154
   521  005F                     lcd_putnumber@F612:
   522  005F                            ds      2
   523                           
   524                           psect	dataBANK0
   525                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
   526                           	line	92
   527  0061                     _findScale:
   528  0061                            ds      1
   529                           
   530                           psect	dataBANK0
   531                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
   532                           	line	50
   533  0062                     _preScaleSelect:
   534  0062                            ds      1
   535                           
   536                           psect clrtext,class=CODE,delta=2
   537                           global clear_ram
   538                           ;	Called with FSR containing the base address, and
   539                           ;	W with the last address+1
   540  07D4                     clear_ram:
   541  07D4  0064               	clrwdt			;clear the watchdog before getting into this loop
   542  07D5                     clrloop:
   543  07D5  0180               	clrf	indf		;clear RAM location pointed to by FSR
   544  07D6  0A84               	incf	fsr,f		;increment pointer
   545  07D7  0604               	xorwf	fsr,w		;XOR with final address
   546  07D8  1903               	btfsc	status,2	;have we reached the end yet?
   547  07D9  3400               	retlw	0		;all done for this memory range, return
   548  07DA  0604               	xorwf	fsr,w		;XOR again to restore value
   549  07DB  2FD5               	goto	clrloop		;do the next byte
   550                           
   551                           ; Clear objects allocated to COMMON
   552                           psect cinit,class=CODE,delta=2
   553  0789  01F7               	clrf	((__pbssCOMMON)+0)&07Fh
   554  078A  01F8               	clrf	((__pbssCOMMON)+1)&07Fh
   555  078B  01F9               	clrf	((__pbssCOMMON)+2)&07Fh
   556                           ; Clear objects allocated to BANK0
   557                           psect cinit,class=CODE,delta=2
   558  078C  1383               	bcf	status, 7	;select IRP bank0
   559  078D  3041               	movlw	low(__pbssBANK0)
   560  078E  0084               	movwf	fsr
   561  078F  305F               	movlw	low((__pbssBANK0)+01Eh)
   562  0790  27D4               	fcall	clear_ram
   563                           ; Initialize objects allocated to BANK0
   564                           	global __pidataBANK0
   565                           psect cinit,class=CODE,delta=2
   566  0791  27EC               	fcall	__pidataBANK0+0		;fetch initializer
   567  0792  00DF               	movwf	__pdataBANK0+0&07fh		
   568  0793  27ED               	fcall	__pidataBANK0+1		;fetch initializer
   569  0794  00E0               	movwf	__pdataBANK0+1&07fh		
   570  0795  27EE               	fcall	__pidataBANK0+2		;fetch initializer
   571  0796  00E1               	movwf	__pdataBANK0+2&07fh		
   572  0797  27EF               	fcall	__pidataBANK0+3		;fetch initializer
   573  0798  00E2               	movwf	__pdataBANK0+3&07fh		
   574                           psect cinit,class=CODE,delta=2
   575                           global end_of_initialization
   576                           
   577                           ;End of C runtime variable initialization code
   578                           
   579  0799                     end_of_initialization:
   580  0799  0183               clrf status
   581  079A  2DED               ljmp _main	;jump to C main() function
   582                           psect	cstackCOMMON,class=COMMON,space=1
   583                           global __pcstackCOMMON
   584  0070                     __pcstackCOMMON:
   585                           	global	?_lcd_goto
   586  0070                     ?_lcd_goto:	; 0 bytes @ 0x0
   587                           	global	?_lcd_init
   588  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   589                           	global	?_lcd_clear
   590  0070                     ?_lcd_clear:	; 0 bytes @ 0x0
   591                           	global	?_lcd_write
   592  0070                     ?_lcd_write:	; 0 bytes @ 0x0
   593                           	global	?_init
   594  0070                     ?_init:	; 0 bytes @ 0x0
   595                           	global	?_initTimer0
   596  0070                     ?_initTimer0:	; 0 bytes @ 0x0
   597                           	global	?_initTimer1
   598  0070                     ?_initTimer1:	; 0 bytes @ 0x0
   599                           	global	?_ISR
   600  0070                     ?_ISR:	; 0 bytes @ 0x0
   601                           	global	??_ISR
   602  0070                     ??_ISR:	; 0 bytes @ 0x0
   603                           	global	?_doScale
   604  0070                     ?_doScale:	; 0 bytes @ 0x0
   605                           	global	?_doFrequency
   606  0070                     ?_doFrequency:	; 0 bytes @ 0x0
   607                           	global	?_timersON
   608  0070                     ?_timersON:	; 0 bytes @ 0x0
   609                           	global	?_timersOFF
   610  0070                     ?_timersOFF:	; 0 bytes @ 0x0
   611                           	global	?_main
   612  0070                     ?_main:	; 0 bytes @ 0x0
   613                           	global	?_lcd_putdigit
   614  0070                     ?_lcd_putdigit:	; 0 bytes @ 0x0
   615  0070                     	ds	4
   616                           	global	??_lcd_write
   617  0074                     ??_lcd_write:	; 0 bytes @ 0x4
   618                           	global	??_init
   619  0074                     ??_init:	; 0 bytes @ 0x4
   620                           	global	??_initTimer1
   621  0074                     ??_initTimer1:	; 0 bytes @ 0x4
   622                           	global	??_timersON
   623  0074                     ??_timersON:	; 0 bytes @ 0x4
   624                           	global	??___lmul
   625  0074                     ??___lmul:	; 0 bytes @ 0x4
   626                           	global	??___llmod
   627  0074                     ??___llmod:	; 0 bytes @ 0x4
   628                           	global	??___lldiv
   629  0074                     ??___lldiv:	; 0 bytes @ 0x4
   630                           	global	??___awmod
   631  0074                     ??___awmod:	; 0 bytes @ 0x4
   632                           	global	??___tmul
   633  0074                     ??___tmul:	; 0 bytes @ 0x4
   634                           	global	___tmul@product
   635  0074                     ___tmul@product:	; 3 bytes @ 0x4
   636  0074                     	ds	1
   637                           	global	___llmod@counter
   638  0075                     ___llmod@counter:	; 1 bytes @ 0x5
   639                           	global	___awmod@counter
   640  0075                     ___awmod@counter:	; 1 bytes @ 0x5
   641  0075                     	ds	1
   642                           	global	??_ultoa
   643  0076                     ??_ultoa:	; 0 bytes @ 0x6
   644                           	global	lcd_write@c
   645  0076                     lcd_write@c:	; 1 bytes @ 0x6
   646                           	global	___awmod@sign
   647  0076                     ___awmod@sign:	; 1 bytes @ 0x6
   648  0076                     	ds	1
   649                           	global	??_lcd_goto
   650  0077                     ??_lcd_goto:	; 0 bytes @ 0x7
   651                           	global	??_lcd_puts
   652  0077                     ??_lcd_puts:	; 0 bytes @ 0x7
   653                           	global	??_lcd_putdigit
   654  0077                     ??_lcd_putdigit:	; 0 bytes @ 0x7
   655                           psect	cstackBANK0,class=BANK0,space=1
   656                           global __pcstackBANK0
   657  0020                     __pcstackBANK0:
   658                           	global	?_lcd_puts
   659  0020                     ?_lcd_puts:	; 0 bytes @ 0x0
   660                           	global	??_lcd_clear
   661  0020                     ??_lcd_clear:	; 0 bytes @ 0x0
   662                           	global	??_initTimer0
   663  0020                     ??_initTimer0:	; 0 bytes @ 0x0
   664                           	global	??_doScale
   665  0020                     ??_doScale:	; 0 bytes @ 0x0
   666                           	global	?___awmod
   667  0020                     ?___awmod:	; 2 bytes @ 0x0
   668                           	global	?___tmul
   669  0020                     ?___tmul:	; 3 bytes @ 0x0
   670                           	global	?___lmul
   671  0020                     ?___lmul:	; 4 bytes @ 0x0
   672                           	global	?___llmod
   673  0020                     ?___llmod:	; 4 bytes @ 0x0
   674                           	global	?___lldiv
   675  0020                     ?___lldiv:	; 4 bytes @ 0x0
   676                           	global	lcd_goto@pos
   677  0020                     lcd_goto@pos:	; 1 bytes @ 0x0
   678                           	global	lcd_putdigit@c
   679  0020                     lcd_putdigit@c:	; 1 bytes @ 0x0
   680                           	global	lcd_puts@s
   681  0020                     lcd_puts@s:	; 2 bytes @ 0x0
   682                           	global	___awmod@divisor
   683  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
   684                           	global	___tmul@multiplier
   685  0020                     ___tmul@multiplier:	; 3 bytes @ 0x0
   686                           	global	___lmul@multiplier
   687  0020                     ___lmul@multiplier:	; 4 bytes @ 0x0
   688                           	global	___llmod@divisor
   689  0020                     ___llmod@divisor:	; 4 bytes @ 0x0
   690                           	global	___lldiv@divisor
   691  0020                     ___lldiv@divisor:	; 4 bytes @ 0x0
   692  0020                     	ds	2
   693                           	global	??_lcd_init
   694  0022                     ??_lcd_init:	; 0 bytes @ 0x2
   695                           	global	___awmod@dividend
   696  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
   697  0022                     	ds	1
   698                           	global	___tmul@multiplicand
   699  0023                     ___tmul@multiplicand:	; 3 bytes @ 0x3
   700  0023                     	ds	1
   701                           	global	___lmul@multiplicand
   702  0024                     ___lmul@multiplicand:	; 4 bytes @ 0x4
   703                           	global	___llmod@dividend
   704  0024                     ___llmod@dividend:	; 4 bytes @ 0x4
   705                           	global	___lldiv@dividend
   706  0024                     ___lldiv@dividend:	; 4 bytes @ 0x4
   707  0024                     	ds	4
   708                           	global	___lmul@product
   709  0028                     ___lmul@product:	; 4 bytes @ 0x8
   710                           	global	___lldiv@quotient
   711  0028                     ___lldiv@quotient:	; 4 bytes @ 0x8
   712  0028                     	ds	4
   713                           	global	??_timersOFF
   714  002C                     ??_timersOFF:	; 0 bytes @ 0xC
   715                           	global	___lldiv@counter
   716  002C                     ___lldiv@counter:	; 1 bytes @ 0xC
   717  002C                     	ds	1
   718                           	global	?_lcd_putnumber
   719  002D                     ?_lcd_putnumber:	; 0 bytes @ 0xD
   720                           	global	?_ultoa
   721  002D                     ?_ultoa:	; 1 bytes @ 0xD
   722                           	global	lcd_putnumber@number
   723  002D                     lcd_putnumber@number:	; 4 bytes @ 0xD
   724                           	global	ultoa@val
   725  002D                     ultoa@val:	; 4 bytes @ 0xD
   726  002D                     	ds	4
   727                           	global	??_lcd_putnumber
   728  0031                     ??_lcd_putnumber:	; 0 bytes @ 0x11
   729                           	global	ultoa@base
   730  0031                     ultoa@base:	; 2 bytes @ 0x11
   731  0031                     	ds	2
   732                           	global	lcd_putnumber@displayHZ
   733  0033                     lcd_putnumber@displayHZ:	; 2 bytes @ 0x13
   734                           	global	ultoa@v
   735  0033                     ultoa@v:	; 4 bytes @ 0x13
   736  0033                     	ds	2
   737                           	global	lcd_putnumber@loop
   738  0035                     lcd_putnumber@loop:	; 2 bytes @ 0x15
   739  0035                     	ds	2
   740                           	global	ultoa@c
   741  0037                     ultoa@c:	; 1 bytes @ 0x17
   742  0037                     	ds	1
   743                           	global	ultoa@buf
   744  0038                     ultoa@buf:	; 1 bytes @ 0x18
   745  0038                     	ds	1
   746                           	global	??_doFrequency
   747  0039                     ??_doFrequency:	; 0 bytes @ 0x19
   748  0039                     	ds	4
   749                           	global	doFrequency@pBands
   750  003D                     doFrequency@pBands:	; 1 bytes @ 0x1D
   751  003D                     	ds	1
   752                           	global	??_main
   753  003E                     ??_main:	; 0 bytes @ 0x1E
   754  003E                     	ds	3
   755 ;;Data sizes: Strings 47, constant 123, data 4, bss 33, persistent 0 stack 0
   756 ;;Auto spaces:   Size  Autos    Used
   757 ;; COMMON          14      7      10
   758 ;; BANK0           80     33      67
   759 ;; BANK1           80      0       0
   760 ;; BANK2           48      0       0
   761                           
   762 ;;
   763 ;; Pointer list with targets:
   764                           
   765 ;; ?___awmod	int  size(1) Largest target is 0
   766 ;;
   767 ;; ?___llmod	unsigned long  size(1) Largest target is 11
   768 ;;		 -> prescaleInternalShift(CODE[11]), 
   769 ;;
   770 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   771 ;;
   772 ;; ?___tmul	unsigned um size(1) Largest target is 0
   773 ;;
   774 ;; ?_ultoa	PTR unsigned char  size(1) Largest target is 10
   775 ;;		 -> buffer(BANK0[10]), 
   776 ;;
   777 ;; ?___lmul	unsigned long  size(1) Largest target is 0
   778 ;;
   779 ;; ultoa@buf	PTR unsigned char  size(1) Largest target is 10
   780 ;;		 -> buffer(BANK0[10]), 
   781 ;;
   782 ;; sp__ltoa	PTR unsigned char  size(1) Largest target is 0
   783 ;;
   784 ;; lcd_puts@s	PTR const unsigned char  size(2) Largest target is 17
   785 ;;		 -> STR_16(CODE[3]), STR_15(CODE[2]), STR_14(CODE[2]), lcd_putnumber@displayHZ(BANK0[2]), 
   786 ;;		 -> version(CODE[17]), qbytes(CODE[15]), STR_13(CODE[4]), buffer(BANK0[10]), 
   787 ;;		 -> STR_12(CODE[4]), STR_11(CODE[2]), STR_10(CODE[7]), noinput(CODE[17]), 
   788 ;;		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 
   789 ;;		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
   790 ;;		 -> STR_1(CODE[3]), 
   791 ;;
   792 ;; sp__ultoa	PTR unsigned char  size(1) Largest target is 10
   793 ;;		 -> buffer(BANK0[10]), 
   794 ;;
   795 ;; doFrequency@pBands	PTR PTR unsigned char  size(1) Largest target is 16
   796 ;;		 -> bands(CODE[16]), 
   797 ;;
   798 ;; bands	const PTR const unsigned char [2][8] size(1) Largest target is 3
   799 ;;		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 
   800 ;;		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
   801 ;;		 -> STR_1(CODE[3]), 
   802 ;;
   803                           
   804                           
   805 ;;
   806 ;; Critical Paths under _main in COMMON
   807 ;;
   808 ;;   _doFrequency->_ultoa
   809 ;;   _lcd_init->_lcd_write
   810 ;;   _lcd_putnumber->___awmod
   811 ;;   _lcd_putdigit->_lcd_write
   812 ;;   _lcd_clear->_lcd_write
   813 ;;   _lcd_puts->_lcd_write
   814 ;;   _lcd_goto->_lcd_write
   815 ;;   _timersOFF->___tmul
   816 ;;   _ultoa->___llmod
   817 ;;
   818 ;; Critical Paths under _ISR in COMMON
   819 ;;
   820 ;;   None.
   821 ;;
   822 ;; Critical Paths under _main in BANK0
   823 ;;
   824 ;;   _main->_doFrequency
   825 ;;   _doFrequency->_ultoa
   826 ;;   _lcd_init->_lcd_clear
   827 ;;   _lcd_putnumber->___lldiv
   828 ;;   _timersOFF->___lmul
   829 ;;   _timersON->_initTimer0
   830 ;;   _ultoa->___lldiv
   831 ;;
   832 ;; Critical Paths under _ISR in BANK0
   833 ;;
   834 ;;   None.
   835 ;;
   836 ;; Critical Paths under _main in BANK1
   837 ;;
   838 ;;   None.
   839 ;;
   840 ;; Critical Paths under _ISR in BANK1
   841 ;;
   842 ;;   None.
   843 ;;
   844 ;; Critical Paths under _main in BANK2
   845 ;;
   846 ;;   None.
   847 ;;
   848 ;; Critical Paths under _ISR in BANK2
   849 ;;
   850 ;;   None.
   851                           
   852 ;;
   853 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   854 ;;
   855                           
   856 ;;
   857 ;;Call Graph Tables:
   858 ;;
   859 ;; ---------------------------------------------------------------------------------
   860 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   861 ;; ---------------------------------------------------------------------------------
   862 ;; (0) _main                                                 3     3      0    3295
   863 ;;                                             30 BANK0      3     3      0
   864 ;;                               _init
   865 ;;                           _lcd_init
   866 ;;                           _timersON
   867 ;;                           _lcd_puts
   868 ;;                           _lcd_goto
   869 ;;                          _lcd_clear
   870 ;;                          _timersOFF
   871 ;;                            _doScale
   872 ;;                        _doFrequency
   873 ;; ---------------------------------------------------------------------------------
   874 ;; (1) _doFrequency                                          5     5      0    2617
   875 ;;                                             25 BANK0      5     5      0
   876 ;;                           _lcd_goto
   877 ;;                      _lcd_putnumber
   878 ;;                           _lcd_puts
   879 ;;                             ___lmul
   880 ;;                              _ultoa
   881 ;; ---------------------------------------------------------------------------------
   882 ;; (1) _lcd_init                                             3     3      0     124
   883 ;;                                              2 BANK0      3     3      0
   884 ;;                          _lcd_write
   885 ;;                          _lcd_clear
   886 ;; ---------------------------------------------------------------------------------
   887 ;; (2) _lcd_putnumber                                       10     6      4    1387
   888 ;;                                             13 BANK0     10     6      4
   889 ;;                            ___lldiv
   890 ;;                            ___llmod
   891 ;;                       _lcd_putdigit
   892 ;;                            ___awmod
   893 ;;                           _lcd_puts
   894 ;; ---------------------------------------------------------------------------------
   895 ;; (3) _lcd_putdigit                                         1     1      0      93
   896 ;;                                              0 BANK0      1     1      0
   897 ;;                          _lcd_write
   898 ;; ---------------------------------------------------------------------------------
   899 ;; (1) _lcd_clear                                            2     2      0      62
   900 ;;                                              0 BANK0      2     2      0
   901 ;;                          _lcd_write
   902 ;; ---------------------------------------------------------------------------------
   903 ;; (2) _lcd_puts                                             2     0      2     127
   904 ;;                                              0 BANK0      2     0      2
   905 ;;                          _lcd_write
   906 ;; ---------------------------------------------------------------------------------
   907 ;; (2) _lcd_goto                                             1     1      0      93
   908 ;;                                              0 BANK0      1     1      0
   909 ;;                          _lcd_write
   910 ;; ---------------------------------------------------------------------------------
   911 ;; (3) _lcd_write                                            3     3      0      62
   912 ;;                                              4 COMMON     3     3      0
   913 ;; ---------------------------------------------------------------------------------
   914 ;; (1) _timersOFF                                           10    10      0     272
   915 ;;                                             12 BANK0     10    10      0
   916 ;;                             ___tmul
   917 ;;                             ___lmul
   918 ;; ---------------------------------------------------------------------------------
   919 ;; (1) _timersON                                             0     0      0       0
   920 ;;                         _initTimer0
   921 ;;                         _initTimer1
   922 ;; ---------------------------------------------------------------------------------
   923 ;; (2) _ultoa                                               13     7      6     837
   924 ;;                                              6 COMMON     1     1      0
   925 ;;                                             13 BANK0     12     6      6
   926 ;;                            ___lldiv
   927 ;;                            ___llmod
   928 ;; ---------------------------------------------------------------------------------
   929 ;; (2) ___tmul                                               9     3      6     136
   930 ;;                                              4 COMMON     3     3      0
   931 ;;                                              0 BANK0      6     0      6
   932 ;; ---------------------------------------------------------------------------------
   933 ;; (3) ___awmod                                              7     3      4     433
   934 ;;                                              4 COMMON     3     3      0
   935 ;;                                              0 BANK0      4     0      4
   936 ;; ---------------------------------------------------------------------------------
   937 ;; (3) ___lldiv                                             14     6      8     241
   938 ;;                                              4 COMMON     1     1      0
   939 ;;                                              0 BANK0     13     5      8
   940 ;; ---------------------------------------------------------------------------------
   941 ;; (3) ___llmod                                             10     2      8     159
   942 ;;                                              4 COMMON     2     2      0
   943 ;;                                              0 BANK0      8     0      8
   944 ;; ---------------------------------------------------------------------------------
   945 ;; (2) ___lmul                                              13     5      8     136
   946 ;;                                              4 COMMON     1     1      0
   947 ;;                                              0 BANK0     12     4      8
   948 ;; ---------------------------------------------------------------------------------
   949 ;; (2) _doScale                                              4     4      0       0
   950 ;;                                              0 BANK0      4     4      0
   951 ;; ---------------------------------------------------------------------------------
   952 ;; (2) _initTimer1                                           0     0      0       0
   953 ;; ---------------------------------------------------------------------------------
   954 ;; (3) _initTimer0                                           4     4      0       0
   955 ;;                                              0 BANK0      4     4      0
   956 ;; ---------------------------------------------------------------------------------
   957 ;; (1) _init                                                 0     0      0       0
   958 ;; ---------------------------------------------------------------------------------
   959 ;; Estimated maximum stack depth 3
   960 ;; ---------------------------------------------------------------------------------
   961 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   962 ;; ---------------------------------------------------------------------------------
   963 ;; (5) _ISR                                                  4     4      0       0
   964 ;;                                              0 COMMON     4     4      0
   965 ;; ---------------------------------------------------------------------------------
   966 ;; Estimated maximum stack depth 5
   967 ;; ---------------------------------------------------------------------------------
   968                           
   969 ;; Call Graph Graphs:
   970                           
   971 ;; _main (ROOT)
   972 ;;   _init
   973 ;;   _lcd_init
   974 ;;     _lcd_write
   975 ;;     _lcd_clear
   976 ;;       _lcd_write
   977 ;;   _timersON
   978 ;;     _initTimer0
   979 ;;     _initTimer1
   980 ;;   _lcd_puts
   981 ;;     _lcd_write
   982 ;;   _lcd_goto
   983 ;;     _lcd_write
   984 ;;   _lcd_clear
   985 ;;     _lcd_write
   986 ;;   _timersOFF
   987 ;;     ___tmul
   988 ;;     ___lmul
   989 ;;   _doScale
   990 ;;   _doFrequency
   991 ;;     _lcd_goto
   992 ;;       _lcd_write
   993 ;;     _lcd_putnumber
   994 ;;       ___lldiv
   995 ;;       ___llmod
   996 ;;       _lcd_putdigit
   997 ;;         _lcd_write
   998 ;;       ___awmod
   999 ;;       _lcd_puts
  1000 ;;         _lcd_write
  1001 ;;     _lcd_puts
  1002 ;;       _lcd_write
  1003 ;;     ___lmul
  1004 ;;     _ultoa
  1005 ;;       ___lldiv
  1006 ;;       ___llmod
  1007 ;;
  1008 ;; _ISR (ROOT)
  1009 ;;
  1010                           
  1011 ;; Address spaces:
  1012                           
  1013 ;;Name               Size   Autos  Total    Cost      Usage
  1014 ;;SFR3                 0      0       0       4        0.0%
  1015 ;;BITSFR3              0      0       0       4        0.0%
  1016 ;;BANK2               30      0       0       9        0.0%
  1017 ;;BITBANK2            30      0       0       8        0.0%
  1018 ;;SFR2                 0      0       0       5        0.0%
  1019 ;;BITSFR2              0      0       0       5        0.0%
  1020 ;;SFR1                 0      0       0       2        0.0%
  1021 ;;BITSFR1              0      0       0       2        0.0%
  1022 ;;BANK1               50      0       0       7        0.0%
  1023 ;;BITBANK1            50      0       0       6        0.0%
  1024 ;;CODE                 0      0       0       0        0.0%
  1025 ;;DATA                 0      0      51      10        0.0%
  1026 ;;ABS                  0      0      4D       4        0.0%
  1027 ;;NULL                 0      0       0       0        0.0%
  1028 ;;STACK                0      0       4       2        0.0%
  1029 ;;BANK0               50     21      43       3       83.8%
  1030 ;;BITBANK0            50      0       0       5        0.0%
  1031 ;;SFR0                 0      0       0       1        0.0%
  1032 ;;BITSFR0              0      0       0       1        0.0%
  1033 ;;COMMON               E      7       A       1       71.4%
  1034 ;;BITCOMMON            E      0       0       0        0.0%
  1035 ;;EEDATA              80      0       0       0        0.0%
  1036                           
  1037                           	global	_main
  1038                           psect	maintext,global,class=CODE,delta=2
  1039                           global __pmaintext
  1040  05ED                     __pmaintext:
  1041                           
  1042 ;; *************** function _main *****************
  1043 ;; Defined at:
  1044 ;;		line 410 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;		None               void
  1051 ;; Registers used:
  1052 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 17F/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1058 ;;      Params:         0       0       0       0
  1059 ;;      Locals:         0       0       0       0
  1060 ;;      Temps:          0       3       0       0
  1061 ;;      Totals:         0       3       0       0
  1062 ;;Total ram usage:        3 bytes
  1063 ;; Hardware stack levels required when called:    5
  1064 ;; This function calls:
  1065 ;;		_init
  1066 ;;		_lcd_init
  1067 ;;		_timersON
  1068 ;;		_lcd_puts
  1069 ;;		_lcd_goto
  1070 ;;		_lcd_clear
  1071 ;;		_timersOFF
  1072 ;;		_doScale
  1073 ;;		_doFrequency
  1074 ;; This function is called by:
  1075 ;;		Startup code after reset
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           psect	maintext
  1079                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  1080                           	line	410
  1081                           	global	__size_of_main
  1082  005A                     	__size_of_main	equ	__end_of_main-_main
  1083                           	
  1084  05ED                     _main:	
  1085                           	opt	stack 3
  1086                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1087                           	line	413
  1088                           	
  1089  05ED                     l3900:	
  1090                           ;blink.c: 413: init();
  1091  05ED  27CA               	fcall	_init
  1092                           	line	414
  1093                           ;blink.c: 414: lcd_init();
  1094  05EE  2693               	fcall	_lcd_init
  1095                           	line	416
  1096                           	
  1097  05EF                     l3902:	
  1098                           ;blink.c: 416: timersON();
  1099  05EF  279B               	fcall	_timersON
  1100                           	line	418
  1101                           	
  1102  05F0                     l3904:	
  1103                           ;blink.c: 418: lcd_puts(&qbytes);
  1104  05F0  3062               	movlw	low((_qbytes-__stringbase))
  1105  05F1  1283               	bcf	status, 5	;RP0=0, select bank0
  1106  05F2  1303               	bcf	status, 6	;RP1=0, select bank0
  1107  05F3  00A0               	movwf	(?_lcd_puts)
  1108  05F4  3080               	movlw	80h
  1109  05F5  00A1               	movwf	(?_lcd_puts+1)
  1110  05F6  276A               	fcall	_lcd_puts
  1111                           	line	420
  1112                           	
  1113  05F7                     l3906:	
  1114                           ;blink.c: 420: lcd_goto(0x40);
  1115  05F7  3040               	movlw	(040h)
  1116  05F8  27E4               	fcall	_lcd_goto
  1117                           	line	421
  1118                           	
  1119  05F9                     l3908:	
  1120                           ;blink.c: 421: lcd_puts(&version);
  1121  05F9  3041               	movlw	low((_version-__stringbase))
  1122  05FA  1283               	bcf	status, 5	;RP0=0, select bank0
  1123  05FB  1303               	bcf	status, 6	;RP1=0, select bank0
  1124  05FC  00A0               	movwf	(?_lcd_puts)
  1125  05FD  3080               	movlw	80h
  1126  05FE  00A1               	movwf	(?_lcd_puts+1)
  1127  05FF  276A               	fcall	_lcd_puts
  1128                           	line	423
  1129                           	
  1130  0600                     l3910:	
  1131                           ;blink.c: 423: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1132                           	opt asmopt_off
  1133  0600  3033               movlw  51
  1134  0601  1283               	bcf	status, 5	;RP0=0, select bank0
  1135  0602  1303               	bcf	status, 6	;RP1=0, select bank0
  1136  0603  00C0               movwf	((??_main+0)+0+2),f
  1137  0604  30BC               movlw	188
  1138  0605  00BF               movwf	((??_main+0)+0+1),f
  1139  0606  3010               	movlw	16
  1140  0607  00BE               movwf	((??_main+0)+0),f
  1141  0608                     u3987:
  1142  0608  0BBE               	decfsz	((??_main+0)+0),f
  1143  0609  2E08               	goto	u3987
  1144  060A  0BBF               	decfsz	((??_main+0)+0+1),f
  1145  060B  2E08               	goto	u3987
  1146  060C  0BC0               	decfsz	((??_main+0)+0+2),f
  1147  060D  2E08               	goto	u3987
  1148                           opt asmopt_on
  1149                           
  1150                           	line	425
  1151                           	
  1152  060E                     l3912:	
  1153                           ;blink.c: 425: lcd_clear();
  1154  060E  27AD               	fcall	_lcd_clear
  1155  060F  2E12               	goto	l3914
  1156                           	line	428
  1157                           ;blink.c: 428: while(1)
  1158                           	
  1159  0610                     l464:	
  1160                           	line	430
  1161                           ;blink.c: 429: {
  1162                           ;blink.c: 430: while (TMR1cnt < findScale) {}
  1163  0610  2E12               	goto	l3914
  1164                           	
  1165  0611                     l466:	
  1166  0611  2E12               	goto	l3914
  1167                           	
  1168  0612                     l465:	
  1169                           	
  1170  0612                     l3914:	
  1171  0612  1283               	bcf	status, 5	;RP0=0, select bank0
  1172  0613  1303               	bcf	status, 6	;RP1=0, select bank0
  1173  0614  0851               	movf	(_TMR1cnt+1),w
  1174  0615  3A80               	xorlw	80h
  1175  0616  00BE               	movwf	(??_main+0)+0
  1176  0617  3080               	movlw	80h
  1177  0618  023E               	subwf	(??_main+0)+0,w
  1178  0619  1D03               	skipz
  1179  061A  2E1D               	goto	u3965
  1180  061B  0861               	movf	(_findScale),w
  1181  061C  0250               	subwf	(_TMR1cnt),w
  1182  061D                     u3965:
  1183                           
  1184  061D  1C03               	skipc
  1185  061E  2E20               	goto	u3961
  1186  061F  2E21               	goto	u3960
  1187  0620                     u3961:
  1188  0620  2E12               	goto	l3914
  1189  0621                     u3960:
  1190  0621  2E22               	goto	l3916
  1191                           	
  1192  0622                     l467:	
  1193                           	line	432
  1194                           	
  1195  0622                     l3916:	
  1196                           ;blink.c: 431: {
  1197                           ;blink.c: 432: timersOFF();
  1198  0622  2529               	fcall	_timersOFF
  1199                           	line	434
  1200                           	
  1201  0623                     l3918:	
  1202                           ;blink.c: 434: if (findScale == SCALE)
  1203  0623  302F               	movlw	(_SCALE-__stringbase)
  1204  0624  0084               	movwf	fsr0
  1205  0625  220A               	fcall	stringdir
  1206  0626  1283               	bcf	status, 5	;RP0=0, select bank0
  1207  0627  1303               	bcf	status, 6	;RP1=0, select bank0
  1208  0628  00BE               	movwf	(??_main+0)+0
  1209  0629  0861               	movf	(_findScale),w
  1210  062A  063E               	xorwf	(??_main+0)+0,w
  1211  062B  1D03               	skipz
  1212  062C  2E2E               	goto	u3971
  1213  062D  2E2F               	goto	u3970
  1214  062E                     u3971:
  1215  062E  2E39               	goto	l3924
  1216  062F                     u3970:
  1217                           	line	436
  1218                           	
  1219  062F                     l3920:	
  1220                           ;blink.c: 435: {
  1221                           ;blink.c: 436: doScale();
  1222  062F  22BA               	fcall	_doScale
  1223                           	line	437
  1224                           	
  1225  0630                     l3922:	
  1226                           ;blink.c: 437: findScale=FREQ;
  1227  0630  302E               	movlw	(_FREQ-__stringbase)
  1228  0631  0084               	movwf	fsr0
  1229  0632  220A               	fcall	stringdir
  1230  0633  1283               	bcf	status, 5	;RP0=0, select bank0
  1231  0634  1303               	bcf	status, 6	;RP1=0, select bank0
  1232  0635  00BE               	movwf	(??_main+0)+0
  1233  0636  083E               	movf	(??_main+0)+0,w
  1234  0637  00E1               	movwf	(_findScale)
  1235                           	line	438
  1236                           ;blink.c: 438: }
  1237  0638  2E43               	goto	l3928
  1238                           	line	439
  1239                           	
  1240  0639                     l468:	
  1241                           	line	441
  1242                           	
  1243  0639                     l3924:	
  1244                           ;blink.c: 439: else
  1245                           ;blink.c: 440: {
  1246                           ;blink.c: 441: doFrequency();
  1247  0639  2120               	fcall	_doFrequency
  1248                           	line	442
  1249                           	
  1250  063A                     l3926:	
  1251                           ;blink.c: 442: findScale=SCALE;
  1252  063A  302F               	movlw	(_SCALE-__stringbase)
  1253  063B  0084               	movwf	fsr0
  1254  063C  220A               	fcall	stringdir
  1255  063D  1283               	bcf	status, 5	;RP0=0, select bank0
  1256  063E  1303               	bcf	status, 6	;RP1=0, select bank0
  1257  063F  00BE               	movwf	(??_main+0)+0
  1258  0640  083E               	movf	(??_main+0)+0,w
  1259  0641  00E1               	movwf	(_findScale)
  1260  0642  2E43               	goto	l3928
  1261                           	line	446
  1262                           	
  1263  0643                     l469:	
  1264                           	line	448
  1265                           	
  1266  0643                     l3928:	
  1267                           ;blink.c: 446: }
  1268                           ;blink.c: 448: timersON();
  1269  0643  279B               	fcall	_timersON
  1270  0644  2E12               	goto	l3914
  1271                           	line	450
  1272                           	
  1273  0645                     l470:	
  1274                           	line	428
  1275  0645  2E12               	goto	l3914
  1276                           	
  1277  0646                     l471:	
  1278                           	line	451
  1279                           	
  1280  0646                     l472:	
  1281                           	global	start
  1282  0646  2810               	ljmp	start
  1283                           	opt stack 0
  1284                           GLOBAL	__end_of_main
  1285  0647                     	__end_of_main:
  1286 ;; =============== function _main ends ============
  1287                           
  1288                           	signat	_main,88
  1289                           	global	_doFrequency
  1290                           psect	text782,local,class=CODE,delta=2
  1291                           global __ptext782
  1292  0120                     __ptext782:
  1293                           
  1294 ;; *************** function _doFrequency *****************
  1295 ;; Defined at:
  1296 ;;		line 309 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;		None
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  pBands          1   29[BANK0 ] PTR PTR unsigned char 
  1301 ;;		 -> bands(16), 
  1302 ;; Return value:  Size  Location     Type
  1303 ;;		None               void
  1304 ;; Registers used:
  1305 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1311 ;;      Params:         0       0       0       0
  1312 ;;      Locals:         0       1       0       0
  1313 ;;      Temps:          0       4       0       0
  1314 ;;      Totals:         0       5       0       0
  1315 ;;Total ram usage:        5 bytes
  1316 ;; Hardware stack levels used:    1
  1317 ;; Hardware stack levels required when called:    4
  1318 ;; This function calls:
  1319 ;;		_lcd_goto
  1320 ;;		_lcd_putnumber
  1321 ;;		_lcd_puts
  1322 ;;		___lmul
  1323 ;;		_ultoa
  1324 ;; This function is called by:
  1325 ;;		_main
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           psect	text782
  1329                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  1330                           	line	309
  1331                           	global	__size_of_doFrequency
  1332  00DF                     	__size_of_doFrequency	equ	__end_of_doFrequency-_doFrequency
  1333                           	
  1334  0120                     _doFrequency:	
  1335                           	opt	stack 3
  1336                           ; Regs used in _doFrequency: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1337                           	line	310
  1338                           	
  1339  0120                     l3848:	
  1340                           ;blink.c: 310: TMR1cnt = TMR0cnt;
  1341  0120  1283               	bcf	status, 5	;RP0=0, select bank0
  1342  0121  1303               	bcf	status, 6	;RP1=0, select bank0
  1343  0122  0842               	movf	(_TMR0cnt+1),w
  1344  0123  01D1               	clrf	(_TMR1cnt+1)
  1345  0124  07D1               	addwf	(_TMR1cnt+1)
  1346  0125  0841               	movf	(_TMR0cnt),w
  1347  0126  01D0               	clrf	(_TMR1cnt)
  1348  0127  07D0               	addwf	(_TMR1cnt)
  1349                           
  1350                           	line	312
  1351                           	
  1352  0128                     l3850:	
  1353                           ;blink.c: 312: lcd_goto(0);
  1354  0128  3000               	movlw	(0)
  1355  0129  27E4               	fcall	_lcd_goto
  1356                           	line	314
  1357                           	
  1358  012A                     l3852:	
  1359                           ;blink.c: 314: if (number != 0)
  1360  012A  1283               	bcf	status, 5	;RP0=0, select bank0
  1361  012B  1303               	bcf	status, 6	;RP1=0, select bank0
  1362  012C  084C               	movf	(_number+3),w
  1363  012D  044B               	iorwf	(_number+2),w
  1364  012E  044A               	iorwf	(_number+1),w
  1365  012F  0449               	iorwf	(_number),w
  1366  0130  1903               	skipnz
  1367  0131  2933               	goto	u3901
  1368  0132  2934               	goto	u3900
  1369  0133                     u3901:
  1370  0133  293E               	goto	l3856
  1371  0134                     u3900:
  1372                           	line	316
  1373                           	
  1374  0134                     l3854:	
  1375                           ;blink.c: 315: {
  1376                           ;blink.c: 316: lcd_putnumber(number);
  1377  0134  084C               	movf	(_number+3),w
  1378  0135  00B0               	movwf	(?_lcd_putnumber+3)
  1379  0136  084B               	movf	(_number+2),w
  1380  0137  00AF               	movwf	(?_lcd_putnumber+2)
  1381  0138  084A               	movf	(_number+1),w
  1382  0139  00AE               	movwf	(?_lcd_putnumber+1)
  1383  013A  0849               	movf	(_number),w
  1384  013B  00AD               	movwf	(?_lcd_putnumber)
  1385                           
  1386  013C  2011               	fcall	_lcd_putnumber
  1387                           	line	317
  1388                           ;blink.c: 317: }
  1389  013D  2946               	goto	l3858
  1390                           	line	318
  1391                           	
  1392  013E                     l450:	
  1393                           	line	320
  1394                           	
  1395  013E                     l3856:	
  1396                           ;blink.c: 318: else
  1397                           ;blink.c: 319: {
  1398                           ;blink.c: 320: lcd_puts(&noinput);
  1399  013E  3030               	movlw	low((_noinput-__stringbase))
  1400  013F  1283               	bcf	status, 5	;RP0=0, select bank0
  1401  0140  1303               	bcf	status, 6	;RP1=0, select bank0
  1402  0141  00A0               	movwf	(?_lcd_puts)
  1403  0142  3080               	movlw	80h
  1404  0143  00A1               	movwf	(?_lcd_puts+1)
  1405  0144  276A               	fcall	_lcd_puts
  1406  0145  2946               	goto	l3858
  1407                           	line	321
  1408                           	
  1409  0146                     l451:	
  1410                           	line	324
  1411                           	
  1412  0146                     l3858:	
  1413                           ;blink.c: 321: }
  1414                           ;blink.c: 324: lcd_goto(0x40);
  1415  0146  3040               	movlw	(040h)
  1416  0147  27E4               	fcall	_lcd_goto
  1417                           	line	328
  1418                           	
  1419  0148                     l3860:	
  1420                           ;blink.c: 328: TMR0cnt = 3000;
  1421  0148  3000               	movlw	0
  1422  0149  1283               	bcf	status, 5	;RP0=0, select bank0
  1423  014A  1303               	bcf	status, 6	;RP1=0, select bank0
  1424  014B  00C4               	movwf	(_TMR0cnt+3)
  1425  014C  3000               	movlw	0
  1426  014D  00C3               	movwf	(_TMR0cnt+2)
  1427  014E  300B               	movlw	0Bh
  1428  014F  00C2               	movwf	(_TMR0cnt+1)
  1429  0150  30B8               	movlw	0B8h
  1430  0151  00C1               	movwf	(_TMR0cnt)
  1431                           
  1432                           	line	329
  1433                           	
  1434  0152                     l3862:	
  1435                           ;blink.c: 329: for (band = 0;band <= 7; band ++)
  1436  0152  01D2               	clrf	(_band)
  1437                           	
  1438  0153                     l3864:	
  1439  0153  3008               	movlw	(08h)
  1440  0154  0252               	subwf	(_band),w
  1441  0155  1C03               	skipc
  1442  0156  2958               	goto	u3911
  1443  0157  2959               	goto	u3910
  1444  0158                     u3911:
  1445  0158  295B               	goto	l3868
  1446  0159                     u3910:
  1447  0159  2995               	goto	l3878
  1448                           	
  1449  015A                     l3866:	
  1450  015A  2995               	goto	l3878
  1451                           	line	330
  1452                           	
  1453  015B                     l452:	
  1454                           	line	331
  1455                           	
  1456  015B                     l3868:	
  1457                           ;blink.c: 330: {
  1458                           ;blink.c: 331: if (number < TMR0cnt)
  1459  015B  0844               	movf	(_TMR0cnt+3),w
  1460  015C  024C               	subwf	(_number+3),w
  1461  015D  1D03               	skipz
  1462  015E  2969               	goto	u3925
  1463  015F  0843               	movf	(_TMR0cnt+2),w
  1464  0160  024B               	subwf	(_number+2),w
  1465  0161  1D03               	skipz
  1466  0162  2969               	goto	u3925
  1467  0163  0842               	movf	(_TMR0cnt+1),w
  1468  0164  024A               	subwf	(_number+1),w
  1469  0165  1D03               	skipz
  1470  0166  2969               	goto	u3925
  1471  0167  0841               	movf	(_TMR0cnt),w
  1472  0168  0249               	subwf	(_number),w
  1473  0169                     u3925:
  1474  0169  1803               	skipnc
  1475  016A  296C               	goto	u3921
  1476  016B  296D               	goto	u3920
  1477  016C                     u3921:
  1478  016C  296F               	goto	l3872
  1479  016D                     u3920:
  1480  016D  2995               	goto	l3878
  1481                           	line	333
  1482                           	
  1483  016E                     l3870:	
  1484                           ;blink.c: 332: {
  1485                           ;blink.c: 333: break;
  1486  016E  2995               	goto	l3878
  1487                           	line	334
  1488                           	
  1489  016F                     l454:	
  1490                           	line	335
  1491                           	
  1492  016F                     l3872:	
  1493                           ;blink.c: 334: }
  1494                           ;blink.c: 335: TMR0cnt *=10;
  1495  016F  3000               	movlw	0
  1496  0170  00A3               	movwf	(?___lmul+3)
  1497  0171  3000               	movlw	0
  1498  0172  00A2               	movwf	(?___lmul+2)
  1499  0173  3000               	movlw	0
  1500  0174  00A1               	movwf	(?___lmul+1)
  1501  0175  300A               	movlw	0Ah
  1502  0176  00A0               	movwf	(?___lmul)
  1503                           
  1504  0177  0844               	movf	(_TMR0cnt+3),w
  1505  0178  00A7               	movwf	3+(?___lmul)+04h
  1506  0179  0843               	movf	(_TMR0cnt+2),w
  1507  017A  00A6               	movwf	2+(?___lmul)+04h
  1508  017B  0842               	movf	(_TMR0cnt+1),w
  1509  017C  00A5               	movwf	1+(?___lmul)+04h
  1510  017D  0841               	movf	(_TMR0cnt),w
  1511  017E  00A4               	movwf	0+(?___lmul)+04h
  1512                           
  1513  017F  2647               	fcall	___lmul
  1514  0180  1283               	bcf	status, 5	;RP0=0, select bank0
  1515  0181  1303               	bcf	status, 6	;RP1=0, select bank0
  1516  0182  0823               	movf	(3+(?___lmul)),w
  1517  0183  00C4               	movwf	(_TMR0cnt+3)
  1518  0184  0822               	movf	(2+(?___lmul)),w
  1519  0185  00C3               	movwf	(_TMR0cnt+2)
  1520  0186  0821               	movf	(1+(?___lmul)),w
  1521  0187  00C2               	movwf	(_TMR0cnt+1)
  1522  0188  0820               	movf	(0+(?___lmul)),w
  1523  0189  00C1               	movwf	(_TMR0cnt)
  1524                           
  1525                           	line	329
  1526                           	
  1527  018A                     l3874:	
  1528  018A  3001               	movlw	(01h)
  1529  018B  00B9               	movwf	(??_doFrequency+0)+0
  1530  018C  0839               	movf	(??_doFrequency+0)+0,w
  1531  018D  07D2               	addwf	(_band),f
  1532                           	
  1533  018E                     l3876:	
  1534  018E  3008               	movlw	(08h)
  1535  018F  0252               	subwf	(_band),w
  1536  0190  1C03               	skipc
  1537  0191  2993               	goto	u3931
  1538  0192  2994               	goto	u3930
  1539  0193                     u3931:
  1540  0193  295B               	goto	l3868
  1541  0194                     u3930:
  1542  0194  2995               	goto	l3878
  1543                           	
  1544  0195                     l453:	
  1545                           	line	341
  1546                           	
  1547  0195                     l3878:	
  1548                           ;blink.c: 336: }
  1549                           ;blink.c: 341: lcd_puts("mW/dB ");
  1550  0195  307C               	movlw	low((STR_10-__stringbase))
  1551  0196  00A0               	movwf	(?_lcd_puts)
  1552  0197  3080               	movlw	80h
  1553  0198  00A1               	movwf	(?_lcd_puts+1)
  1554  0199  276A               	fcall	_lcd_puts
  1555                           	line	344
  1556                           	
  1557  019A                     l3880:	
  1558                           ;blink.c: 344: char** pBands = bands;
  1559  019A  3052               	movlw	((_bands-__stringbase))&0ffh
  1560  019B  1283               	bcf	status, 5	;RP0=0, select bank0
  1561  019C  1303               	bcf	status, 6	;RP1=0, select bank0
  1562  019D  00B9               	movwf	(??_doFrequency+0)+0
  1563  019E  0839               	movf	(??_doFrequency+0)+0,w
  1564  019F  00BD               	movwf	(doFrequency@pBands)
  1565                           	line	345
  1566                           	
  1567  01A0                     l3882:	
  1568                           ;blink.c: 345: pBands += band;
  1569  01A0  0852               	movf	(_band),w
  1570  01A1  00B9               	movwf	(??_doFrequency+0)+0
  1571  01A2  0839               	movf	(??_doFrequency+0)+0,w
  1572  01A3  07BD               	addwf	(doFrequency@pBands),f
  1573                           	line	346
  1574                           	
  1575  01A4                     l3884:	
  1576                           ;blink.c: 346: lcd_puts(*pBands);
  1577  01A4  083D               	movf	(doFrequency@pBands),w
  1578  01A5  0084               	movwf	fsr0
  1579  01A6  220A               	fcall	stringdir
  1580  01A7  00A0               	movwf	(?_lcd_puts)
  1581  01A8  220A               	fcall	stringdir
  1582  01A9  00A1               	movwf	(?_lcd_puts+1)
  1583  01AA  276A               	fcall	_lcd_puts
  1584                           	line	347
  1585                           	
  1586  01AB                     l3886:	
  1587                           ;blink.c: 347: lcd_puts("F");
  1588  01AB  30A9               	movlw	low((STR_11-__stringbase))
  1589  01AC  1283               	bcf	status, 5	;RP0=0, select bank0
  1590  01AD  1303               	bcf	status, 6	;RP1=0, select bank0
  1591  01AE  00A0               	movwf	(?_lcd_puts)
  1592  01AF  3080               	movlw	80h
  1593  01B0  00A1               	movwf	(?_lcd_puts+1)
  1594  01B1  276A               	fcall	_lcd_puts
  1595                           	line	350
  1596                           	
  1597  01B2                     l3888:	
  1598                           ;blink.c: 350: lcd_puts(" 1/");
  1599  01B2  3087               	movlw	low((STR_12-__stringbase))
  1600  01B3  1283               	bcf	status, 5	;RP0=0, select bank0
  1601  01B4  1303               	bcf	status, 6	;RP1=0, select bank0
  1602  01B5  00A0               	movwf	(?_lcd_puts)
  1603  01B6  3080               	movlw	80h
  1604  01B7  00A1               	movwf	(?_lcd_puts+1)
  1605  01B8  276A               	fcall	_lcd_puts
  1606                           	line	351
  1607                           	
  1608  01B9                     l3890:	
  1609                           ;blink.c: 351: ultoa(buffer,preScaleValue,10);
  1610  01B9  1283               	bcf	status, 5	;RP0=0, select bank0
  1611  01BA  1303               	bcf	status, 6	;RP1=0, select bank0
  1612  01BB  084D               	movf	(_preScaleValue),w
  1613  01BC  00AD               	movwf	(?_ultoa)
  1614  01BD  084E               	movf	(_preScaleValue+1),w
  1615  01BE  00AE               	movwf	((?_ultoa))+1
  1616  01BF  084F               	movf	(_preScaleValue+2),w
  1617  01C0  00AF               	movwf	((?_ultoa))+2
  1618  01C1  01B0               	clrf	((?_ultoa))+3
  1619  01C2  300A               	movlw	low(0Ah)
  1620  01C3  00B1               	movwf	0+(?_ultoa)+04h
  1621  01C4  3000               	movlw	high(0Ah)
  1622  01C5  00B2               	movwf	(0+(?_ultoa)+04h)+1
  1623  01C6  3055               	movlw	(_buffer)&0ffh
  1624  01C7  2358               	fcall	_ultoa
  1625                           	line	352
  1626                           	
  1627  01C8                     l3892:	
  1628                           ;blink.c: 352: lcd_puts(buffer);
  1629  01C8  3055               	movlw	(_buffer&0ffh)
  1630  01C9  1283               	bcf	status, 5	;RP0=0, select bank0
  1631  01CA  1303               	bcf	status, 6	;RP1=0, select bank0
  1632  01CB  00A0               	movwf	(?_lcd_puts)
  1633  01CC  3000               	movlw	(0x0/2)
  1634  01CD  00A1               	movwf	(?_lcd_puts+1)
  1635  01CE  276A               	fcall	_lcd_puts
  1636                           	line	355
  1637                           	
  1638  01CF                     l3894:	
  1639                           ;blink.c: 355: preScaleSelect = 7;
  1640  01CF  3007               	movlw	(07h)
  1641  01D0  1283               	bcf	status, 5	;RP0=0, select bank0
  1642  01D1  1303               	bcf	status, 6	;RP1=0, select bank0
  1643  01D2  00B9               	movwf	(??_doFrequency+0)+0
  1644  01D3  0839               	movf	(??_doFrequency+0)+0,w
  1645  01D4  00E2               	movwf	(_preScaleSelect)
  1646                           	line	356
  1647                           	
  1648  01D5                     l3896:	
  1649                           ;blink.c: 356: preScaleValue = (1 << prescaleInternalShift[preScaleSelect] << prescaleEx
                                 ternalShift[preScaleSelect]);
  1650  01D5  0862               	movf	(_preScaleSelect),w
  1651  01D6  3E18               	addlw	low((_prescaleExternalShift-__stringbase))
  1652  01D7  0084               	movwf	fsr0
  1653  01D8  220A               	fcall	stringdir
  1654  01D9  00B9               	movwf	(??_doFrequency+0)+0
  1655  01DA  0AB9               	incf	(??_doFrequency+0)+0,f
  1656  01DB  0862               	movf	(_preScaleSelect),w
  1657  01DC  3E71               	addlw	low((_prescaleInternalShift-__stringbase))
  1658  01DD  0084               	movwf	fsr0
  1659  01DE  220A               	fcall	stringdir
  1660  01DF  00BA               	movwf	(??_doFrequency+1)+0
  1661  01E0  0ABA               	incf	(??_doFrequency+1)+0,f
  1662  01E1  3001               	movlw	low(01h)
  1663  01E2  00BB               	movwf	(??_doFrequency+2)+0
  1664  01E3  3000               	movlw	high(01h)
  1665  01E4  00BC               	movwf	(??_doFrequency+2)+0+1
  1666  01E5  29E9               	goto	u3944
  1667  01E6                     u3945:
  1668  01E6  1003               	clrc
  1669  01E7  0DBB               	rlf	(??_doFrequency+2)+0,f
  1670  01E8  0DBC               	rlf	(??_doFrequency+2)+1,f
  1671  01E9                     u3944:
  1672  01E9  0BBA               	decfsz	(??_doFrequency+1)+0,f
  1673  01EA  29E6               	goto	u3945
  1674  01EB  29EF               	goto	u3954
  1675  01EC                     u3955:
  1676  01EC  1003               	clrc
  1677  01ED  0DBB               	rlf	(??_doFrequency+2)+0,f
  1678  01EE  0DBC               	rlf	(??_doFrequency+2)+1,f
  1679  01EF                     u3954:
  1680  01EF  0BB9               	decfsz	(??_doFrequency+0)+0,f
  1681  01F0  29EC               	goto	u3955
  1682  01F1  083B               	movf	0+(??_doFrequency+2)+0,w
  1683  01F2  00CD               	movwf	(_preScaleValue)
  1684  01F3  083C               	movf	1+(??_doFrequency+2)+0,w
  1685  01F4  00CE               	movwf	(_preScaleValue+1)
  1686  01F5  3000               	movlw	0
  1687  01F6  1BBC               	btfsc	1+(??_doFrequency+2)+0,7
  1688  01F7  30FF               	movlw	255
  1689  01F8  00CF               	movwf	(_preScaleValue+2)
  1690                           
  1691                           	line	372
  1692                           	
  1693  01F9                     l3898:	
  1694                           ;blink.c: 372: lcd_puts("   ");
  1695  01F9  3083               	movlw	low((STR_13-__stringbase))
  1696  01FA  00A0               	movwf	(?_lcd_puts)
  1697  01FB  3080               	movlw	80h
  1698  01FC  00A1               	movwf	(?_lcd_puts+1)
  1699  01FD  276A               	fcall	_lcd_puts
  1700                           	line	373
  1701                           	
  1702  01FE                     l455:	
  1703  01FE  0008               	return
  1704                           	opt stack 0
  1705                           GLOBAL	__end_of_doFrequency
  1706  01FF                     	__end_of_doFrequency:
  1707 ;; =============== function _doFrequency ends ============
  1708                           
  1709                           	signat	_doFrequency,88
  1710                           	global	_lcd_init
  1711                           psect	text783,local,class=CODE,delta=2
  1712                           global __ptext783
  1713  0693                     __ptext783:
  1714                           
  1715 ;; *************** function _lcd_init *****************
  1716 ;; Defined at:
  1717 ;;		line 58 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;		None
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;		None
  1722 ;; Return value:  Size  Location     Type
  1723 ;;		None               void
  1724 ;; Registers used:
  1725 ;;		wreg, status,2, status,0, pclath, cstack
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1731 ;;      Params:         0       0       0       0
  1732 ;;      Locals:         0       0       0       0
  1733 ;;      Temps:          0       3       0       0
  1734 ;;      Totals:         0       3       0       0
  1735 ;;Total ram usage:        3 bytes
  1736 ;; Hardware stack levels used:    1
  1737 ;; Hardware stack levels required when called:    3
  1738 ;; This function calls:
  1739 ;;		_lcd_write
  1740 ;;		_lcd_clear
  1741 ;; This function is called by:
  1742 ;;		_main
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           psect	text783
  1746                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  1747                           	line	58
  1748                           	global	__size_of_lcd_init
  1749  0047                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  1750                           	
  1751  0693                     _lcd_init:	
  1752                           	opt	stack 4
  1753                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1754                           	line	70
  1755                           	
  1756  0693                     l3812:	
  1757                           ;lcd.c: 70: RB7 = 1;
  1758  0693  1283               	bcf	status, 5	;RP0=0, select bank0
  1759  0694  1303               	bcf	status, 6	;RP1=0, select bank0
  1760  0695  1786               	bsf	(55/8),(55)&7
  1761                           	line	72
  1762                           	
  1763  0696                     l3814:	
  1764                           ;lcd.c: 72: _delay((unsigned long)((150)*(20000000/4000.0)));
  1765                           	opt asmopt_off
  1766  0696  3004               movlw  4
  1767  0697  00A4               movwf	((??_lcd_init+0)+0+2),f
  1768  0698  30CF               movlw	207
  1769  0699  00A3               movwf	((??_lcd_init+0)+0+1),f
  1770  069A  3003               	movlw	3
  1771  069B  00A2               movwf	((??_lcd_init+0)+0),f
  1772  069C                     u3997:
  1773  069C  0BA2               	decfsz	((??_lcd_init+0)+0),f
  1774  069D  2E9C               	goto	u3997
  1775  069E  0BA3               	decfsz	((??_lcd_init+0)+0+1),f
  1776  069F  2E9C               	goto	u3997
  1777  06A0  0BA4               	decfsz	((??_lcd_init+0)+0+2),f
  1778  06A1  2E9C               	goto	u3997
  1779  06A2  2EA3               	nop2
  1780                           opt asmopt_on
  1781                           
  1782                           	line	74
  1783                           	
  1784  06A3                     l3816:	
  1785                           ;lcd.c: 74: PORTB = 0x3 | (PORTB & 0xF0);
  1786  06A3  1283               	bcf	status, 5	;RP0=0, select bank0
  1787  06A4  1303               	bcf	status, 6	;RP1=0, select bank0
  1788  06A5  0806               	movf	(6),w
  1789  06A6  39F0               	andlw	0F0h
  1790  06A7  3803               	iorlw	03h
  1791  06A8  0086               	movwf	(6)	;volatile
  1792                           	line	75
  1793                           	
  1794  06A9                     l3818:	
  1795                           ;lcd.c: 75: ((RA1 = 1), (RA1=0));
  1796  06A9  1485               	bsf	(41/8),(41)&7
  1797                           	
  1798  06AA                     l3820:	
  1799  06AA  1085               	bcf	(41/8),(41)&7
  1800                           	line	76
  1801                           	
  1802  06AB                     l3822:	
  1803                           ;lcd.c: 76: _delay((unsigned long)((5)*(20000000/4000.0)));
  1804                           	opt asmopt_off
  1805  06AB  3021               movlw	33
  1806  06AC  00A3               movwf	((??_lcd_init+0)+0+1),f
  1807  06AD  3076               	movlw	118
  1808  06AE  00A2               movwf	((??_lcd_init+0)+0),f
  1809  06AF                     u4007:
  1810  06AF  0BA2               	decfsz	((??_lcd_init+0)+0),f
  1811  06B0  2EAF               	goto	u4007
  1812  06B1  0BA3               	decfsz	((??_lcd_init+0)+0+1),f
  1813  06B2  2EAF               	goto	u4007
  1814  06B3  0064               	clrwdt
  1815                           opt asmopt_on
  1816                           
  1817                           	line	77
  1818                           	
  1819  06B4                     l3824:	
  1820                           ;lcd.c: 77: ((RA1 = 1), (RA1=0));
  1821  06B4  1283               	bcf	status, 5	;RP0=0, select bank0
  1822  06B5  1303               	bcf	status, 6	;RP1=0, select bank0
  1823  06B6  1485               	bsf	(41/8),(41)&7
  1824                           	
  1825  06B7                     l3826:	
  1826  06B7  1085               	bcf	(41/8),(41)&7
  1827                           	line	78
  1828                           	
  1829  06B8                     l3828:	
  1830                           ;lcd.c: 78: _delay((unsigned long)((200)*(20000000/4000000.0)));
  1831                           	opt asmopt_off
  1832  06B8  30F9               movlw	249
  1833  06B9  00A2               movwf	(??_lcd_init+0)+0,f
  1834  06BA                     u4017:
  1835  06BA  0064               	clrwdt
  1836  06BB  0BA2               decfsz	(??_lcd_init+0)+0,f
  1837  06BC  2EBA               	goto	u4017
  1838  06BD  2EBE               	nop2	;nop
  1839  06BE  0064               	clrwdt
  1840                           opt asmopt_on
  1841                           
  1842                           	line	79
  1843                           	
  1844  06BF                     l3830:	
  1845                           ;lcd.c: 79: ((RA1 = 1), (RA1=0));
  1846  06BF  1283               	bcf	status, 5	;RP0=0, select bank0
  1847  06C0  1303               	bcf	status, 6	;RP1=0, select bank0
  1848  06C1  1485               	bsf	(41/8),(41)&7
  1849                           	
  1850  06C2                     l3832:	
  1851  06C2  1085               	bcf	(41/8),(41)&7
  1852                           	line	80
  1853                           	
  1854  06C3                     l3834:	
  1855                           ;lcd.c: 80: _delay((unsigned long)((200)*(20000000/4000000.0)));
  1856                           	opt asmopt_off
  1857  06C3  30F9               movlw	249
  1858  06C4  00A2               movwf	(??_lcd_init+0)+0,f
  1859  06C5                     u4027:
  1860  06C5  0064               	clrwdt
  1861  06C6  0BA2               decfsz	(??_lcd_init+0)+0,f
  1862  06C7  2EC5               	goto	u4027
  1863  06C8  2EC9               	nop2	;nop
  1864  06C9  0064               	clrwdt
  1865                           opt asmopt_on
  1866                           
  1867                           	line	81
  1868                           ;lcd.c: 81: PORTB = 2 | (PORTB & 0xF0);;
  1869  06CA  1283               	bcf	status, 5	;RP0=0, select bank0
  1870  06CB  1303               	bcf	status, 6	;RP1=0, select bank0
  1871  06CC  0806               	movf	(6),w
  1872  06CD  39F0               	andlw	0F0h
  1873  06CE  3802               	iorlw	02h
  1874  06CF  0086               	movwf	(6)	;volatile
  1875                           	line	82
  1876                           	
  1877  06D0                     l3836:	
  1878                           ;lcd.c: 82: ((RA1 = 1), (RA1=0));
  1879  06D0  1485               	bsf	(41/8),(41)&7
  1880                           	
  1881  06D1                     l3838:	
  1882  06D1  1085               	bcf	(41/8),(41)&7
  1883                           	line	84
  1884                           	
  1885  06D2                     l3840:	
  1886                           ;lcd.c: 84: lcd_write(0x28);
  1887  06D2  3028               	movlw	(028h)
  1888  06D3  2747               	fcall	_lcd_write
  1889                           	line	86
  1890                           	
  1891  06D4                     l3842:	
  1892                           ;lcd.c: 86: lcd_write(0b1100);
  1893  06D4  300C               	movlw	(0Ch)
  1894  06D5  2747               	fcall	_lcd_write
  1895                           	line	87
  1896                           	
  1897  06D6                     l3844:	
  1898                           ;lcd.c: 87: lcd_clear();
  1899  06D6  27AD               	fcall	_lcd_clear
  1900                           	line	88
  1901                           	
  1902  06D7                     l3846:	
  1903                           ;lcd.c: 88: lcd_write(0x6);
  1904  06D7  3006               	movlw	(06h)
  1905  06D8  2747               	fcall	_lcd_write
  1906                           	line	89
  1907                           	
  1908  06D9                     l863:	
  1909  06D9  0008               	return
  1910                           	opt stack 0
  1911                           GLOBAL	__end_of_lcd_init
  1912  06DA                     	__end_of_lcd_init:
  1913 ;; =============== function _lcd_init ends ============
  1914                           
  1915                           	signat	_lcd_init,88
  1916                           	global	_lcd_putnumber
  1917                           psect	text784,local,class=CODE,delta=2
  1918                           global __ptext784
  1919  0011                     __ptext784:
  1920                           
  1921 ;; *************** function _lcd_putnumber *****************
  1922 ;; Defined at:
  1923 ;;		line 153 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  number          4   13[BANK0 ] unsigned long 
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;  loop            2   21[BANK0 ] int 
  1928 ;;  displayHZ       2   19[BANK0 ] unsigned char [2]
  1929 ;; Return value:  Size  Location     Type
  1930 ;;		None               void
  1931 ;; Registers used:
  1932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1938 ;;      Params:         0       4       0       0
  1939 ;;      Locals:         0       4       0       0
  1940 ;;      Temps:          0       2       0       0
  1941 ;;      Totals:         0      10       0       0
  1942 ;;Total ram usage:       10 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:    3
  1945 ;; This function calls:
  1946 ;;		___lldiv
  1947 ;;		___llmod
  1948 ;;		_lcd_putdigit
  1949 ;;		___awmod
  1950 ;;		_lcd_puts
  1951 ;; This function is called by:
  1952 ;;		_doFrequency
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           psect	text784
  1956                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  1957                           	line	153
  1958                           	global	__size_of_lcd_putnumber
  1959  010F                     	__size_of_lcd_putnumber	equ	__end_of_lcd_putnumber-_lcd_putnumber
  1960                           	
  1961  0011                     _lcd_putnumber:	
  1962                           	opt	stack 3
  1963                           ; Regs used in _lcd_putnumber: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1964                           	line	154
  1965                           	
  1966  0011                     l3764:	
  1967                           ;lcd.c: 154: char displayHZ[] = {'.', '\0'};
  1968  0011  1283               	bcf	status, 5	;RP0=0, select bank0
  1969  0012  1303               	bcf	status, 6	;RP1=0, select bank0
  1970  0013  0860               	movf	(lcd_putnumber@F612+1),w
  1971  0014  01B4               	clrf	(lcd_putnumber@displayHZ+1)
  1972  0015  07B4               	addwf	(lcd_putnumber@displayHZ+1)
  1973  0016  085F               	movf	(lcd_putnumber@F612),w
  1974  0017  01B3               	clrf	(lcd_putnumber@displayHZ)
  1975  0018  07B3               	addwf	(lcd_putnumber@displayHZ)
  1976                           
  1977                           	line	156
  1978                           	
  1979  0019                     l3766:	
  1980                           ;lcd.c: 156: divBy = 1000000000;
  1981  0019  303B               	movlw	03Bh
  1982  001A  00C8               	movwf	(_divBy+3)
  1983  001B  309A               	movlw	09Ah
  1984  001C  00C7               	movwf	(_divBy+2)
  1985  001D  30CA               	movlw	0CAh
  1986  001E  00C6               	movwf	(_divBy+1)
  1987  001F  3000               	movlw	0
  1988  0020  00C5               	movwf	(_divBy)
  1989                           
  1990                           	line	157
  1991                           	
  1992  0021                     l3768:	
  1993                           ;lcd.c: 157: sig = 0;
  1994  0021  01D4               	clrf	(_sig)
  1995                           	line	160
  1996                           	
  1997  0022                     l3770:	
  1998                           ;lcd.c: 160: for (int loop=0; loop < 10; loop++)
  1999  0022  01B5               	clrf	(lcd_putnumber@loop)
  2000  0023  01B6               	clrf	(lcd_putnumber@loop+1)
  2001                           	
  2002  0024                     l3772:	
  2003  0024  0836               	movf	(lcd_putnumber@loop+1),w
  2004  0025  3A80               	xorlw	80h
  2005  0026  00FF               	movwf	btemp+1
  2006  0027  3080               	movlw	(high(0Ah))^80h
  2007  0028  027F               	subwf	btemp+1,w
  2008  0029  1D03               	skipz
  2009  002A  282D               	goto	u3825
  2010  002B  300A               	movlw	low(0Ah)
  2011  002C  0235               	subwf	(lcd_putnumber@loop),w
  2012  002D                     u3825:
  2013                           
  2014  002D  1C03               	skipc
  2015  002E  2830               	goto	u3821
  2016  002F  2831               	goto	u3820
  2017  0030                     u3821:
  2018  0030  2833               	goto	l3776
  2019  0031                     u3820:
  2020  0031  290A               	goto	l3806
  2021                           	
  2022  0032                     l3774:	
  2023  0032  290A               	goto	l3806
  2024                           	line	161
  2025                           	
  2026  0033                     l889:	
  2027                           	line	162
  2028                           	
  2029  0033                     l3776:	
  2030                           ;lcd.c: 161: {
  2031                           ;lcd.c: 162: digit = number / divBy;
  2032  0033  1283               	bcf	status, 5	;RP0=0, select bank0
  2033  0034  1303               	bcf	status, 6	;RP1=0, select bank0
  2034  0035  0848               	movf	(_divBy+3),w
  2035  0036  00A3               	movwf	(?___lldiv+3)
  2036  0037  0847               	movf	(_divBy+2),w
  2037  0038  00A2               	movwf	(?___lldiv+2)
  2038  0039  0846               	movf	(_divBy+1),w
  2039  003A  00A1               	movwf	(?___lldiv+1)
  2040  003B  0845               	movf	(_divBy),w
  2041  003C  00A0               	movwf	(?___lldiv)
  2042                           
  2043  003D  0830               	movf	(lcd_putnumber@number+3),w
  2044  003E  00A7               	movwf	3+(?___lldiv)+04h
  2045  003F  082F               	movf	(lcd_putnumber@number+2),w
  2046  0040  00A6               	movwf	2+(?___lldiv)+04h
  2047  0041  082E               	movf	(lcd_putnumber@number+1),w
  2048  0042  00A5               	movwf	1+(?___lldiv)+04h
  2049  0043  082D               	movf	(lcd_putnumber@number),w
  2050  0044  00A4               	movwf	0+(?___lldiv)+04h
  2051                           
  2052  0045  23E9               	fcall	___lldiv
  2053  0046  1283               	bcf	status, 5	;RP0=0, select bank0
  2054  0047  1303               	bcf	status, 6	;RP1=0, select bank0
  2055  0048  0820               	movf	0+(((0+(?___lldiv)))),w
  2056  0049  00B1               	movwf	(??_lcd_putnumber+0)+0
  2057  004A  0831               	movf	(??_lcd_putnumber+0)+0,w
  2058  004B  00D3               	movwf	(_digit)
  2059                           	line	163
  2060                           ;lcd.c: 163: number = number % divBy;
  2061  004C  0848               	movf	(_divBy+3),w
  2062  004D  00A3               	movwf	(?___llmod+3)
  2063  004E  0847               	movf	(_divBy+2),w
  2064  004F  00A2               	movwf	(?___llmod+2)
  2065  0050  0846               	movf	(_divBy+1),w
  2066  0051  00A1               	movwf	(?___llmod+1)
  2067  0052  0845               	movf	(_divBy),w
  2068  0053  00A0               	movwf	(?___llmod)
  2069                           
  2070  0054  0830               	movf	(lcd_putnumber@number+3),w
  2071  0055  00A7               	movwf	3+(?___llmod)+04h
  2072  0056  082F               	movf	(lcd_putnumber@number+2),w
  2073  0057  00A6               	movwf	2+(?___llmod)+04h
  2074  0058  082E               	movf	(lcd_putnumber@number+1),w
  2075  0059  00A5               	movwf	1+(?___llmod)+04h
  2076  005A  082D               	movf	(lcd_putnumber@number),w
  2077  005B  00A4               	movwf	0+(?___llmod)+04h
  2078                           
  2079  005C  258F               	fcall	___llmod
  2080  005D  1283               	bcf	status, 5	;RP0=0, select bank0
  2081  005E  1303               	bcf	status, 6	;RP1=0, select bank0
  2082  005F  0823               	movf	(3+(?___llmod)),w
  2083  0060  00B0               	movwf	(lcd_putnumber@number+3)
  2084  0061  0822               	movf	(2+(?___llmod)),w
  2085  0062  00AF               	movwf	(lcd_putnumber@number+2)
  2086  0063  0821               	movf	(1+(?___llmod)),w
  2087  0064  00AE               	movwf	(lcd_putnumber@number+1)
  2088  0065  0820               	movf	(0+(?___llmod)),w
  2089  0066  00AD               	movwf	(lcd_putnumber@number)
  2090                           
  2091                           	line	164
  2092                           	
  2093  0067                     l3778:	
  2094                           ;lcd.c: 164: if (digit > 0 || sig != 0)
  2095  0067  08D3               	movf	(_digit),f
  2096  0068  1D03               	skipz
  2097  0069  286B               	goto	u3831
  2098  006A  286C               	goto	u3830
  2099  006B                     u3831:
  2100  006B  2871               	goto	l3782
  2101  006C                     u3830:
  2102                           	
  2103  006C                     l3780:	
  2104  006C  0854               	movf	(_sig),w
  2105  006D  1D03               	skipz
  2106  006E  2870               	goto	u3840
  2107  006F  28A9               	goto	l3794
  2108  0070                     u3840:
  2109  0070  2871               	goto	l3782
  2110                           	
  2111  0071                     l893:	
  2112                           	line	167
  2113                           	
  2114  0071                     l3782:	
  2115                           ;lcd.c: 165: {
  2116                           ;lcd.c: 167: lcd_putdigit(digit);
  2117  0071  0853               	movf	(_digit),w
  2118  0072  27DC               	fcall	_lcd_putdigit
  2119                           	line	168
  2120                           	
  2121  0073                     l3784:	
  2122                           ;lcd.c: 168: sig++;
  2123  0073  3001               	movlw	(01h)
  2124  0074  1283               	bcf	status, 5	;RP0=0, select bank0
  2125  0075  1303               	bcf	status, 6	;RP1=0, select bank0
  2126  0076  00B1               	movwf	(??_lcd_putnumber+0)+0
  2127  0077  0831               	movf	(??_lcd_putnumber+0)+0,w
  2128  0078  07D4               	addwf	(_sig),f
  2129                           	line	169
  2130                           	
  2131  0079                     l3786:	
  2132                           ;lcd.c: 169: if ( ((9 - loop)%3 == 0) && loop != 9)
  2133  0079  3003               	movlw	low(03h)
  2134  007A  00A0               	movwf	(?___awmod)
  2135  007B  3000               	movlw	high(03h)
  2136  007C  00A1               	movwf	((?___awmod))+1
  2137  007D  0935               	comf	(lcd_putnumber@loop),w
  2138  007E  00B1               	movwf	(??_lcd_putnumber+0)+0
  2139  007F  0936               	comf	(lcd_putnumber@loop+1),w
  2140  0080  00B2               	movwf	((??_lcd_putnumber+0)+0+1)
  2141  0081  0AB1               	incf	(??_lcd_putnumber+0)+0,f
  2142  0082  1903               	skipnz
  2143  0083  0AB2               	incf	((??_lcd_putnumber+0)+0+1),f
  2144  0084  0831               	movf	0+(??_lcd_putnumber+0)+0,w
  2145  0085  3E09               	addlw	low(09h)
  2146  0086  00A2               	movwf	0+(?___awmod)+02h
  2147  0087  0832               	movf	1+(??_lcd_putnumber+0)+0,w
  2148  0088  1803               	skipnc
  2149  0089  3E01               	addlw	1
  2150  008A  3E00               	addlw	high(09h)
  2151  008B  00A3               	movwf	1+0+(?___awmod)+02h
  2152  008C  2459               	fcall	___awmod
  2153  008D  1283               	bcf	status, 5	;RP0=0, select bank0
  2154  008E  1303               	bcf	status, 6	;RP1=0, select bank0
  2155  008F  0821               	movf	((1+(?___awmod))),w
  2156  0090  0420               	iorwf	((0+(?___awmod))),w
  2157  0091  1D03               	skipz
  2158  0092  2894               	goto	u3851
  2159  0093  2895               	goto	u3850
  2160  0094                     u3851:
  2161  0094  28D9               	goto	l3800
  2162  0095                     u3850:
  2163                           	
  2164  0095                     l3788:	
  2165  0095  3009               	movlw	09h
  2166  0096  0635               	xorwf	(lcd_putnumber@loop),w
  2167  0097  0436               	iorwf	(lcd_putnumber@loop+1),w
  2168  0098  1903               	skipnz
  2169  0099  289B               	goto	u3861
  2170  009A  289C               	goto	u3860
  2171  009B                     u3861:
  2172  009B  28D9               	goto	l3800
  2173  009C                     u3860:
  2174                           	line	171
  2175                           	
  2176  009C                     l3790:	
  2177                           ;lcd.c: 170: {
  2178                           ;lcd.c: 171: lcd_puts(displayHZ);
  2179  009C  3033               	movlw	(lcd_putnumber@displayHZ&0ffh)
  2180  009D  00A0               	movwf	(?_lcd_puts)
  2181  009E  3000               	movlw	(0x0/2)
  2182  009F  00A1               	movwf	(?_lcd_puts+1)
  2183  00A0  276A               	fcall	_lcd_puts
  2184                           	line	172
  2185                           	
  2186  00A1                     l3792:	
  2187                           ;lcd.c: 172: displayHZ[0] = ',';
  2188  00A1  302C               	movlw	(02Ch)
  2189  00A2  1283               	bcf	status, 5	;RP0=0, select bank0
  2190  00A3  1303               	bcf	status, 6	;RP1=0, select bank0
  2191  00A4  00B1               	movwf	(??_lcd_putnumber+0)+0
  2192  00A5  0831               	movf	(??_lcd_putnumber+0)+0,w
  2193  00A6  00B3               	movwf	(lcd_putnumber@displayHZ)
  2194  00A7  28D9               	goto	l3800
  2195                           	line	173
  2196                           	
  2197  00A8                     l894:	
  2198                           	line	174
  2199                           ;lcd.c: 173: }
  2200                           ;lcd.c: 174: }
  2201  00A8  28D9               	goto	l3800
  2202                           	line	175
  2203                           	
  2204  00A9                     l891:	
  2205                           	line	179
  2206                           	
  2207  00A9                     l3794:	
  2208                           ;lcd.c: 175: else
  2209                           ;lcd.c: 176: {
  2210                           ;lcd.c: 179: if ( ((9 - loop)%3 == 0) && loop != 9)
  2211  00A9  3003               	movlw	low(03h)
  2212  00AA  00A0               	movwf	(?___awmod)
  2213  00AB  3000               	movlw	high(03h)
  2214  00AC  00A1               	movwf	((?___awmod))+1
  2215  00AD  0935               	comf	(lcd_putnumber@loop),w
  2216  00AE  00B1               	movwf	(??_lcd_putnumber+0)+0
  2217  00AF  0936               	comf	(lcd_putnumber@loop+1),w
  2218  00B0  00B2               	movwf	((??_lcd_putnumber+0)+0+1)
  2219  00B1  0AB1               	incf	(??_lcd_putnumber+0)+0,f
  2220  00B2  1903               	skipnz
  2221  00B3  0AB2               	incf	((??_lcd_putnumber+0)+0+1),f
  2222  00B4  0831               	movf	0+(??_lcd_putnumber+0)+0,w
  2223  00B5  3E09               	addlw	low(09h)
  2224  00B6  00A2               	movwf	0+(?___awmod)+02h
  2225  00B7  0832               	movf	1+(??_lcd_putnumber+0)+0,w
  2226  00B8  1803               	skipnc
  2227  00B9  3E01               	addlw	1
  2228  00BA  3E00               	addlw	high(09h)
  2229  00BB  00A3               	movwf	1+0+(?___awmod)+02h
  2230  00BC  2459               	fcall	___awmod
  2231  00BD  1283               	bcf	status, 5	;RP0=0, select bank0
  2232  00BE  1303               	bcf	status, 6	;RP1=0, select bank0
  2233  00BF  0821               	movf	((1+(?___awmod))),w
  2234  00C0  0420               	iorwf	((0+(?___awmod))),w
  2235  00C1  1D03               	skipz
  2236  00C2  28C4               	goto	u3871
  2237  00C3  28C5               	goto	u3870
  2238  00C4                     u3871:
  2239  00C4  28D1               	goto	l896
  2240  00C5                     u3870:
  2241                           	
  2242  00C5                     l3796:	
  2243  00C5  3009               	movlw	09h
  2244  00C6  0635               	xorwf	(lcd_putnumber@loop),w
  2245  00C7  0436               	iorwf	(lcd_putnumber@loop+1),w
  2246  00C8  1903               	skipnz
  2247  00C9  28CB               	goto	u3881
  2248  00CA  28CC               	goto	u3880
  2249  00CB                     u3881:
  2250  00CB  28D1               	goto	l896
  2251  00CC                     u3880:
  2252                           	line	181
  2253                           	
  2254  00CC                     l3798:	
  2255                           ;lcd.c: 180: {
  2256                           ;lcd.c: 181: lcd_puts(" ");
  2257  00CC  3085               	movlw	low((STR_14-__stringbase))
  2258  00CD  00A0               	movwf	(?_lcd_puts)
  2259  00CE  3080               	movlw	80h
  2260  00CF  00A1               	movwf	(?_lcd_puts+1)
  2261  00D0  276A               	fcall	_lcd_puts
  2262                           	line	182
  2263                           	
  2264  00D1                     l896:	
  2265                           	line	183
  2266                           ;lcd.c: 182: }
  2267                           ;lcd.c: 183: lcd_puts(" ");
  2268  00D1  3085               	movlw	low((STR_15-__stringbase))
  2269  00D2  1283               	bcf	status, 5	;RP0=0, select bank0
  2270  00D3  1303               	bcf	status, 6	;RP1=0, select bank0
  2271  00D4  00A0               	movwf	(?_lcd_puts)
  2272  00D5  3080               	movlw	80h
  2273  00D6  00A1               	movwf	(?_lcd_puts+1)
  2274  00D7  276A               	fcall	_lcd_puts
  2275  00D8  28D9               	goto	l3800
  2276                           	line	184
  2277                           	
  2278  00D9                     l895:	
  2279                           	line	185
  2280                           	
  2281  00D9                     l3800:	
  2282                           ;lcd.c: 184: }
  2283                           ;lcd.c: 185: divBy = divBy / 10;
  2284  00D9  3000               	movlw	0
  2285  00DA  1283               	bcf	status, 5	;RP0=0, select bank0
  2286  00DB  1303               	bcf	status, 6	;RP1=0, select bank0
  2287  00DC  00A3               	movwf	(?___lldiv+3)
  2288  00DD  3000               	movlw	0
  2289  00DE  00A2               	movwf	(?___lldiv+2)
  2290  00DF  3000               	movlw	0
  2291  00E0  00A1               	movwf	(?___lldiv+1)
  2292  00E1  300A               	movlw	0Ah
  2293  00E2  00A0               	movwf	(?___lldiv)
  2294                           
  2295  00E3  0848               	movf	(_divBy+3),w
  2296  00E4  00A7               	movwf	3+(?___lldiv)+04h
  2297  00E5  0847               	movf	(_divBy+2),w
  2298  00E6  00A6               	movwf	2+(?___lldiv)+04h
  2299  00E7  0846               	movf	(_divBy+1),w
  2300  00E8  00A5               	movwf	1+(?___lldiv)+04h
  2301  00E9  0845               	movf	(_divBy),w
  2302  00EA  00A4               	movwf	0+(?___lldiv)+04h
  2303                           
  2304  00EB  23E9               	fcall	___lldiv
  2305  00EC  1283               	bcf	status, 5	;RP0=0, select bank0
  2306  00ED  1303               	bcf	status, 6	;RP1=0, select bank0
  2307  00EE  0823               	movf	(3+(?___lldiv)),w
  2308  00EF  00C8               	movwf	(_divBy+3)
  2309  00F0  0822               	movf	(2+(?___lldiv)),w
  2310  00F1  00C7               	movwf	(_divBy+2)
  2311  00F2  0821               	movf	(1+(?___lldiv)),w
  2312  00F3  00C6               	movwf	(_divBy+1)
  2313  00F4  0820               	movf	(0+(?___lldiv)),w
  2314  00F5  00C5               	movwf	(_divBy)
  2315                           
  2316                           	line	160
  2317                           	
  2318  00F6                     l3802:	
  2319  00F6  3001               	movlw	low(01h)
  2320  00F7  07B5               	addwf	(lcd_putnumber@loop),f
  2321  00F8  1803               	skipnc
  2322  00F9  0AB6               	incf	(lcd_putnumber@loop+1),f
  2323  00FA  3000               	movlw	high(01h)
  2324  00FB  07B6               	addwf	(lcd_putnumber@loop+1),f
  2325                           	
  2326  00FC                     l3804:	
  2327  00FC  0836               	movf	(lcd_putnumber@loop+1),w
  2328  00FD  3A80               	xorlw	80h
  2329  00FE  00FF               	movwf	btemp+1
  2330  00FF  3080               	movlw	(high(0Ah))^80h
  2331  0100  027F               	subwf	btemp+1,w
  2332  0101  1D03               	skipz
  2333  0102  2905               	goto	u3895
  2334  0103  300A               	movlw	low(0Ah)
  2335  0104  0235               	subwf	(lcd_putnumber@loop),w
  2336  0105                     u3895:
  2337                           
  2338  0105  1C03               	skipc
  2339  0106  2908               	goto	u3891
  2340  0107  2909               	goto	u3890
  2341  0108                     u3891:
  2342  0108  2833               	goto	l3776
  2343  0109                     u3890:
  2344  0109  290A               	goto	l3806
  2345                           	
  2346  010A                     l890:	
  2347                           	line	188
  2348                           	
  2349  010A                     l3806:	
  2350                           ;lcd.c: 186: }
  2351                           ;lcd.c: 188: displayHZ[0] = HZ[sig];
  2352  010A  1283               	bcf	status, 5	;RP0=0, select bank0
  2353  010B  1303               	bcf	status, 6	;RP1=0, select bank0
  2354  010C  0854               	movf	(_sig),w
  2355  010D  3E01               	addlw	low((_HZ-__stringbase))
  2356  010E  0084               	movwf	fsr0
  2357  010F  220A               	fcall	stringdir
  2358  0110  00B1               	movwf	(??_lcd_putnumber+0)+0
  2359  0111  0831               	movf	(??_lcd_putnumber+0)+0,w
  2360  0112  00B3               	movwf	(lcd_putnumber@displayHZ)
  2361                           	line	189
  2362                           	
  2363  0113                     l3808:	
  2364                           ;lcd.c: 189: lcd_puts(&displayHZ[0]);
  2365  0113  3033               	movlw	(lcd_putnumber@displayHZ&0ffh)
  2366  0114  00A0               	movwf	(?_lcd_puts)
  2367  0115  3000               	movlw	(0x0/2)
  2368  0116  00A1               	movwf	(?_lcd_puts+1)
  2369  0117  276A               	fcall	_lcd_puts
  2370                           	line	190
  2371                           	
  2372  0118                     l3810:	
  2373                           ;lcd.c: 190: lcd_puts("Hz");
  2374  0118  308B               	movlw	low((STR_16-__stringbase))
  2375  0119  1283               	bcf	status, 5	;RP0=0, select bank0
  2376  011A  1303               	bcf	status, 6	;RP1=0, select bank0
  2377  011B  00A0               	movwf	(?_lcd_puts)
  2378  011C  3080               	movlw	80h
  2379  011D  00A1               	movwf	(?_lcd_puts+1)
  2380  011E  276A               	fcall	_lcd_puts
  2381                           	line	191
  2382                           	
  2383  011F                     l897:	
  2384  011F  0008               	return
  2385                           	opt stack 0
  2386                           GLOBAL	__end_of_lcd_putnumber
  2387  0120                     	__end_of_lcd_putnumber:
  2388 ;; =============== function _lcd_putnumber ends ============
  2389                           
  2390                           	signat	_lcd_putnumber,4216
  2391                           	global	_lcd_putdigit
  2392                           psect	text785,local,class=CODE,delta=2
  2393                           global __ptext785
  2394  07DC                     __ptext785:
  2395                           
  2396 ;; *************** function _lcd_putdigit *****************
  2397 ;; Defined at:
  2398 ;;		line 146 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;  c               1    wreg     unsigned char 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  c               1    0[BANK0 ] unsigned char 
  2403 ;; Return value:  Size  Location     Type
  2404 ;;		None               void
  2405 ;; Registers used:
  2406 ;;		wreg, status,2, status,0, pclath, cstack
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2412 ;;      Params:         0       0       0       0
  2413 ;;      Locals:         0       1       0       0
  2414 ;;      Temps:          0       0       0       0
  2415 ;;      Totals:         0       1       0       0
  2416 ;;Total ram usage:        1 bytes
  2417 ;; Hardware stack levels used:    1
  2418 ;; Hardware stack levels required when called:    2
  2419 ;; This function calls:
  2420 ;;		_lcd_write
  2421 ;; This function is called by:
  2422 ;;		_lcd_putnumber
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           psect	text785
  2426                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  2427                           	line	146
  2428                           	global	__size_of_lcd_putdigit
  2429  0008                     	__size_of_lcd_putdigit	equ	__end_of_lcd_putdigit-_lcd_putdigit
  2430                           	
  2431  07DC                     _lcd_putdigit:	
  2432                           	opt	stack 3
  2433                           ; Regs used in _lcd_putdigit: [wreg+status,2+status,0+pclath+cstack]
  2434                           ;lcd_putdigit@c stored from wreg
  2435  07DC  1283               	bcf	status, 5	;RP0=0, select bank0
  2436  07DD  1303               	bcf	status, 6	;RP1=0, select bank0
  2437  07DE  00A0               	movwf	(lcd_putdigit@c)
  2438                           	line	147
  2439                           	
  2440  07DF                     l3760:	
  2441                           ;lcd.c: 147: RA3 = 1;
  2442  07DF  1585               	bsf	(43/8),(43)&7
  2443                           	line	148
  2444                           	
  2445  07E0                     l3762:	
  2446                           ;lcd.c: 148: lcd_write( 0x30 + c );
  2447  07E0  0820               	movf	(lcd_putdigit@c),w
  2448  07E1  3E30               	addlw	030h
  2449  07E2  2747               	fcall	_lcd_write
  2450                           	line	149
  2451                           	
  2452  07E3                     l884:	
  2453  07E3  0008               	return
  2454                           	opt stack 0
  2455                           GLOBAL	__end_of_lcd_putdigit
  2456  07E4                     	__end_of_lcd_putdigit:
  2457 ;; =============== function _lcd_putdigit ends ============
  2458                           
  2459                           	signat	_lcd_putdigit,4216
  2460                           	global	_lcd_clear
  2461                           psect	text786,local,class=CODE,delta=2
  2462                           global __ptext786
  2463  07AD                     __ptext786:
  2464                           
  2465 ;; *************** function _lcd_clear *****************
  2466 ;; Defined at:
  2467 ;;		line 108 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;		None
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;		None
  2472 ;; Return value:  Size  Location     Type
  2473 ;;		None               void
  2474 ;; Registers used:
  2475 ;;		wreg, status,2, status,0, pclath, cstack
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2481 ;;      Params:         0       0       0       0
  2482 ;;      Locals:         0       0       0       0
  2483 ;;      Temps:          0       2       0       0
  2484 ;;      Totals:         0       2       0       0
  2485 ;;Total ram usage:        2 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; Hardware stack levels required when called:    2
  2488 ;; This function calls:
  2489 ;;		_lcd_write
  2490 ;; This function is called by:
  2491 ;;		_main
  2492 ;;		_lcd_init
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           psect	text786
  2496                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  2497                           	line	108
  2498                           	global	__size_of_lcd_clear
  2499  0011                     	__size_of_lcd_clear	equ	__end_of_lcd_clear-_lcd_clear
  2500                           	
  2501  07AD                     _lcd_clear:	
  2502                           	opt	stack 5
  2503                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2504                           	line	109
  2505                           	
  2506  07AD                     l3754:	
  2507                           ;lcd.c: 109: RA3 = 0;
  2508  07AD  1283               	bcf	status, 5	;RP0=0, select bank0
  2509  07AE  1303               	bcf	status, 6	;RP1=0, select bank0
  2510  07AF  1185               	bcf	(43/8),(43)&7
  2511                           	line	110
  2512                           	
  2513  07B0                     l3756:	
  2514                           ;lcd.c: 110: lcd_write(0x1);
  2515  07B0  3001               	movlw	(01h)
  2516  07B1  2747               	fcall	_lcd_write
  2517                           	line	111
  2518                           	
  2519  07B2                     l3758:	
  2520                           ;lcd.c: 111: _delay((unsigned long)((2)*(20000000/4000.0)));
  2521                           	opt asmopt_off
  2522  07B2  300D               movlw	13
  2523  07B3  1283               	bcf	status, 5	;RP0=0, select bank0
  2524  07B4  1303               	bcf	status, 6	;RP1=0, select bank0
  2525  07B5  00A1               movwf	((??_lcd_clear+0)+0+1),f
  2526  07B6  30FB               	movlw	251
  2527  07B7  00A0               movwf	((??_lcd_clear+0)+0),f
  2528  07B8                     u4037:
  2529  07B8  0BA0               	decfsz	((??_lcd_clear+0)+0),f
  2530  07B9  2FB8               	goto	u4037
  2531  07BA  0BA1               	decfsz	((??_lcd_clear+0)+0+1),f
  2532  07BB  2FB8               	goto	u4037
  2533  07BC  2FBD               	nop2
  2534                           opt asmopt_on
  2535                           
  2536                           	line	112
  2537                           	
  2538  07BD                     l869:	
  2539  07BD  0008               	return
  2540                           	opt stack 0
  2541                           GLOBAL	__end_of_lcd_clear
  2542  07BE                     	__end_of_lcd_clear:
  2543 ;; =============== function _lcd_clear ends ============
  2544                           
  2545                           	signat	_lcd_clear,88
  2546                           	global	_lcd_puts
  2547                           psect	text787,local,class=CODE,delta=2
  2548                           global __ptext787
  2549  076A                     __ptext787:
  2550                           
  2551 ;; *************** function _lcd_puts *****************
  2552 ;; Defined at:
  2553 ;;		line 117 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  2556 ;;		 -> STR_16(3), STR_15(2), STR_14(2), lcd_putnumber@displayHZ(2), 
  2557 ;;		 -> version(17), qbytes(15), STR_13(4), buffer(10), 
  2558 ;;		 -> STR_12(4), STR_11(2), STR_10(7), noinput(17), 
  2559 ;;		 -> STR_9(3), STR_8(3), STR_7(3), STR_6(3), 
  2560 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  2561 ;;		 -> STR_1(3), 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;		None
  2564 ;; Return value:  Size  Location     Type
  2565 ;;		None               void
  2566 ;; Registers used:
  2567 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2573 ;;      Params:         0       2       0       0
  2574 ;;      Locals:         0       0       0       0
  2575 ;;      Temps:          0       0       0       0
  2576 ;;      Totals:         0       2       0       0
  2577 ;;Total ram usage:        2 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:    2
  2580 ;; This function calls:
  2581 ;;		_lcd_write
  2582 ;; This function is called by:
  2583 ;;		_doFrequency
  2584 ;;		_main
  2585 ;;		_lcd_putnumber
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           psect	text787
  2589                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  2590                           	line	117
  2591                           	global	__size_of_lcd_puts
  2592  001F                     	__size_of_lcd_puts	equ	__end_of_lcd_puts-_lcd_puts
  2593                           	
  2594  076A                     _lcd_puts:	
  2595                           	opt	stack 4
  2596                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2597                           	line	118
  2598                           	
  2599  076A                     l3746:	
  2600                           ;lcd.c: 118: RA3 = 1;
  2601  076A  1283               	bcf	status, 5	;RP0=0, select bank0
  2602  076B  1303               	bcf	status, 6	;RP1=0, select bank0
  2603  076C  1585               	bsf	(43/8),(43)&7
  2604                           	line	119
  2605                           ;lcd.c: 119: while(*s)
  2606  076D  2F7D               	goto	l3752
  2607                           	
  2608  076E                     l873:	
  2609                           	line	120
  2610                           	
  2611  076E                     l3748:	
  2612                           ;lcd.c: 120: lcd_write(*s++);
  2613  076E  0821               	movf	(lcd_puts@s+1),w
  2614  076F  00FF               	movwf	btemp+1
  2615  0770  0820               	movf	(lcd_puts@s),w
  2616  0771  0084               	movwf	fsr0
  2617  0772  2200               	fcall	stringtab
  2618  0773  2747               	fcall	_lcd_write
  2619                           	
  2620  0774                     l3750:	
  2621  0774  3001               	movlw	low(01h)
  2622  0775  1283               	bcf	status, 5	;RP0=0, select bank0
  2623  0776  1303               	bcf	status, 6	;RP1=0, select bank0
  2624  0777  07A0               	addwf	(lcd_puts@s),f
  2625  0778  1803               	skipnc
  2626  0779  0AA1               	incf	(lcd_puts@s+1),f
  2627  077A  3000               	movlw	high(01h)
  2628  077B  07A1               	addwf	(lcd_puts@s+1),f
  2629  077C  2F7D               	goto	l3752
  2630                           	
  2631  077D                     l872:	
  2632                           	line	119
  2633                           	
  2634  077D                     l3752:	
  2635  077D  0821               	movf	(lcd_puts@s+1),w
  2636  077E  00FF               	movwf	btemp+1
  2637  077F  0820               	movf	(lcd_puts@s),w
  2638  0780  0084               	movwf	fsr0
  2639  0781  2200               	fcall	stringtab
  2640  0782  3800               	iorlw	0
  2641  0783  1D03               	skipz
  2642  0784  2F86               	goto	u3811
  2643  0785  2F87               	goto	u3810
  2644  0786                     u3811:
  2645  0786  2F6E               	goto	l3748
  2646  0787                     u3810:
  2647  0787  2F88               	goto	l875
  2648                           	
  2649  0788                     l874:	
  2650                           	line	121
  2651                           	
  2652  0788                     l875:	
  2653  0788  0008               	return
  2654                           	opt stack 0
  2655                           GLOBAL	__end_of_lcd_puts
  2656  0789                     	__end_of_lcd_puts:
  2657 ;; =============== function _lcd_puts ends ============
  2658                           
  2659                           	signat	_lcd_puts,4216
  2660                           	global	_lcd_goto
  2661                           psect	text788,local,class=CODE,delta=2
  2662                           global __ptext788
  2663  07E4                     __ptext788:
  2664                           
  2665 ;; *************** function _lcd_goto *****************
  2666 ;; Defined at:
  2667 ;;		line 137 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  pos             1    wreg     unsigned char 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  pos             1    0[BANK0 ] unsigned char 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;		None               void
  2674 ;; Registers used:
  2675 ;;		wreg, status,2, status,0, pclath, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2681 ;;      Params:         0       0       0       0
  2682 ;;      Locals:         0       1       0       0
  2683 ;;      Temps:          0       0       0       0
  2684 ;;      Totals:         0       1       0       0
  2685 ;;Total ram usage:        1 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    2
  2688 ;; This function calls:
  2689 ;;		_lcd_write
  2690 ;; This function is called by:
  2691 ;;		_doFrequency
  2692 ;;		_main
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           psect	text788
  2696                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  2697                           	line	137
  2698                           	global	__size_of_lcd_goto
  2699  0008                     	__size_of_lcd_goto	equ	__end_of_lcd_goto-_lcd_goto
  2700                           	
  2701  07E4                     _lcd_goto:	
  2702                           	opt	stack 4
  2703                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  2704                           ;lcd_goto@pos stored from wreg
  2705  07E4  1283               	bcf	status, 5	;RP0=0, select bank0
  2706  07E5  1303               	bcf	status, 6	;RP1=0, select bank0
  2707  07E6  00A0               	movwf	(lcd_goto@pos)
  2708                           	line	138
  2709                           	
  2710  07E7                     l3742:	
  2711                           ;lcd.c: 138: RA3 = 0;
  2712  07E7  1185               	bcf	(43/8),(43)&7
  2713                           	line	139
  2714                           	
  2715  07E8                     l3744:	
  2716                           ;lcd.c: 139: lcd_write(0x80+pos);
  2717  07E8  0820               	movf	(lcd_goto@pos),w
  2718  07E9  3E80               	addlw	080h
  2719  07EA  2747               	fcall	_lcd_write
  2720                           	line	140
  2721                           	
  2722  07EB                     l881:	
  2723  07EB  0008               	return
  2724                           	opt stack 0
  2725                           GLOBAL	__end_of_lcd_goto
  2726  07EC                     	__end_of_lcd_goto:
  2727 ;; =============== function _lcd_goto ends ============
  2728                           
  2729                           	signat	_lcd_goto,4216
  2730                           	global	_lcd_write
  2731                           psect	text789,local,class=CODE,delta=2
  2732                           global __ptext789
  2733  0747                     __ptext789:
  2734                           
  2735 ;; *************** function _lcd_write *****************
  2736 ;; Defined at:
  2737 ;;		line 95 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  c               1    wreg     unsigned char 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  c               1    6[COMMON] unsigned char 
  2742 ;; Return value:  Size  Location     Type
  2743 ;;		None               void
  2744 ;; Registers used:
  2745 ;;		wreg, status,2, status,0
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2751 ;;      Params:         0       0       0       0
  2752 ;;      Locals:         1       0       0       0
  2753 ;;      Temps:          2       0       0       0
  2754 ;;      Totals:         3       0       0       0
  2755 ;;Total ram usage:        3 bytes
  2756 ;; Hardware stack levels used:    1
  2757 ;; Hardware stack levels required when called:    1
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_lcd_init
  2762 ;;		_lcd_clear
  2763 ;;		_lcd_puts
  2764 ;;		_lcd_goto
  2765 ;;		_lcd_putdigit
  2766 ;;		_lcd_putch
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           psect	text789
  2770                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\lcd.c"
  2771                           	line	95
  2772                           	global	__size_of_lcd_write
  2773  0023                     	__size_of_lcd_write	equ	__end_of_lcd_write-_lcd_write
  2774                           	
  2775  0747                     _lcd_write:	
  2776                           	opt	stack 4
  2777                           ; Regs used in _lcd_write: [wreg+status,2+status,0]
  2778                           ;lcd_write@c stored from wreg
  2779  0747  00F6               	movwf	(lcd_write@c)
  2780                           	line	96
  2781                           	
  2782  0748                     l3728:	
  2783                           ;lcd.c: 96: _delay((unsigned long)((40)*(20000000/4000000.0)));
  2784                           	opt asmopt_off
  2785  0748  3042               movlw	66
  2786  0749  00F4               movwf	(??_lcd_write+0)+0,f
  2787  074A                     u4047:
  2788  074A  0BF4               decfsz	(??_lcd_write+0)+0,f
  2789  074B  2F4A               	goto	u4047
  2790  074C  0064               	clrwdt
  2791                           opt asmopt_on
  2792                           
  2793                           	line	97
  2794                           	
  2795  074D                     l3730:	
  2796                           ;lcd.c: 97: PORTB = ( (( c >> 4 ) & 0x0F ) | (PORTB & 0xF0) );
  2797  074D  30F0               	movlw	(0F0h)
  2798  074E  1283               	bcf	status, 5	;RP0=0, select bank0
  2799  074F  1303               	bcf	status, 6	;RP1=0, select bank0
  2800  0750  0506               	andwf	(6),w
  2801  0751  00F4               	movwf	(??_lcd_write+0)+0
  2802  0752  0876               	movf	(lcd_write@c),w
  2803  0753  00F5               	movwf	(??_lcd_write+1)+0
  2804  0754  3004               	movlw	04h
  2805  0755                     u3805:
  2806  0755  1003               	clrc
  2807  0756  0CF5               	rrf	(??_lcd_write+1)+0,f
  2808  0757  3EFF               	addlw	-1
  2809  0758  1D03               	skipz
  2810  0759  2F55               	goto	u3805
  2811  075A  0875               	movf	0+(??_lcd_write+1)+0,w
  2812  075B  390F               	andlw	0Fh
  2813  075C  0474               	iorwf	0+(??_lcd_write+0)+0,w
  2814  075D  0086               	movwf	(6)	;volatile
  2815                           	line	98
  2816                           	
  2817  075E                     l3732:	
  2818                           ;lcd.c: 98: ((RA1 = 1), (RA1=0));
  2819  075E  1485               	bsf	(41/8),(41)&7
  2820                           	
  2821  075F                     l3734:	
  2822  075F  1085               	bcf	(41/8),(41)&7
  2823                           	line	99
  2824                           	
  2825  0760                     l3736:	
  2826                           ;lcd.c: 99: PORTB = ( ( c & 0x0F ) | (PORTB & 0xF0) );
  2827  0760  30F0               	movlw	(0F0h)
  2828  0761  0506               	andwf	(6),w
  2829  0762  00F4               	movwf	(??_lcd_write+0)+0
  2830  0763  0876               	movf	(lcd_write@c),w
  2831  0764  390F               	andlw	0Fh
  2832  0765  0474               	iorwf	0+(??_lcd_write+0)+0,w
  2833  0766  0086               	movwf	(6)	;volatile
  2834                           	line	100
  2835                           	
  2836  0767                     l3738:	
  2837                           ;lcd.c: 100: ((RA1 = 1), (RA1=0));
  2838  0767  1485               	bsf	(41/8),(41)&7
  2839                           	
  2840  0768                     l3740:	
  2841  0768  1085               	bcf	(41/8),(41)&7
  2842                           	line	101
  2843                           	
  2844  0769                     l866:	
  2845  0769  0008               	return
  2846                           	opt stack 0
  2847                           GLOBAL	__end_of_lcd_write
  2848  076A                     	__end_of_lcd_write:
  2849 ;; =============== function _lcd_write ends ============
  2850                           
  2851                           	signat	_lcd_write,4216
  2852                           	global	_timersOFF
  2853                           psect	text790,local,class=CODE,delta=2
  2854                           global __ptext790
  2855  0529                     __ptext790:
  2856                           
  2857 ;; *************** function _timersOFF *****************
  2858 ;; Defined at:
  2859 ;;		line 394 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;		None
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;		None
  2864 ;; Return value:  Size  Location     Type
  2865 ;;		None               void
  2866 ;; Registers used:
  2867 ;;		wreg, status,2, status,0, pclath, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2873 ;;      Params:         0       0       0       0
  2874 ;;      Locals:         0       0       0       0
  2875 ;;      Temps:          0      10       0       0
  2876 ;;      Totals:         0      10       0       0
  2877 ;;Total ram usage:       10 bytes
  2878 ;; Hardware stack levels used:    1
  2879 ;; Hardware stack levels required when called:    2
  2880 ;; This function calls:
  2881 ;;		___tmul
  2882 ;;		___lmul
  2883 ;; This function is called by:
  2884 ;;		_main
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           psect	text790
  2888                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  2889                           	line	394
  2890                           	global	__size_of_timersOFF
  2891  0066                     	__size_of_timersOFF	equ	__end_of_timersOFF-_timersOFF
  2892                           	
  2893  0529                     _timersOFF:	
  2894                           	opt	stack 5
  2895                           ; Regs used in _timersOFF: [wreg+status,2+status,0+pclath+cstack]
  2896                           	line	396
  2897                           	
  2898  0529                     l3716:	
  2899                           ;blink.c: 396: TRISA = 0x00;
  2900  0529  1683               	bsf	status, 5	;RP0=1, select bank1
  2901  052A  1303               	bcf	status, 6	;RP1=0, select bank1
  2902  052B  0185               	clrf	(133)^080h	;volatile
  2903                           	line	397
  2904                           	
  2905  052C                     l3718:	
  2906                           ;blink.c: 397: T0IE = 0;
  2907  052C  128B               	bcf	(93/8),(93)&7
  2908                           	line	398
  2909                           	
  2910  052D                     l3720:	
  2911                           ;blink.c: 398: TMR1IE = 0;
  2912  052D  100C               	bcf	(1120/8)^080h,(1120)&7
  2913                           	line	400
  2914                           	
  2915  052E                     l3722:	
  2916                           ;blink.c: 400: RA0 = 1;
  2917  052E  1283               	bcf	status, 5	;RP0=0, select bank0
  2918  052F  1303               	bcf	status, 6	;RP1=0, select bank0
  2919  0530  1405               	bsf	(40/8),(40)&7
  2920                           	line	402
  2921                           	
  2922  0531                     l3724:	
  2923                           ;blink.c: 402: number = (preScaleValue * 256 * TMR0cnt) + (preScaleValue * TMR0);
  2924  0531  0801               	movf	(1),w	;volatile
  2925  0532  00AC               	movwf	((??_timersOFF+0)+0)
  2926  0533  01AD               	clrf	((??_timersOFF+0)+0+1)
  2927  0534  01AE               	clrf	((??_timersOFF+0)+0+2)
  2928  0535  082C               	movf	0+(??_timersOFF+0)+0,w
  2929  0536  00A0               	movwf	(?___tmul)
  2930  0537  082D               	movf	1+(??_timersOFF+0)+0,w
  2931  0538  00A1               	movwf	(?___tmul+1)
  2932  0539  082E               	movf	2+(??_timersOFF+0)+0,w
  2933  053A  00A2               	movwf	(?___tmul+2)
  2934  053B  084D               	movf	(_preScaleValue),w
  2935  053C  00A3               	movwf	0+(?___tmul)+03h
  2936  053D  084E               	movf	(_preScaleValue+1),w
  2937  053E  00A4               	movwf	1+(?___tmul)+03h
  2938  053F  084F               	movf	(_preScaleValue+2),w
  2939  0540  00A5               	movwf	2+(?___tmul)+03h
  2940  0541  26DA               	fcall	___tmul
  2941  0542  1283               	bcf	status, 5	;RP0=0, select bank0
  2942  0543  1303               	bcf	status, 6	;RP1=0, select bank0
  2943  0544  0820               	movf	(0+(?___tmul)),w
  2944  0545  00AF               	movwf	((??_timersOFF+3)+0)
  2945  0546  0821               	movf	(1+(?___tmul)),w
  2946  0547  00B0               	movwf	((??_timersOFF+3)+0+1)
  2947  0548  0822               	movf	(2+(?___tmul)),w
  2948  0549  00B1               	movwf	((??_timersOFF+3)+0+2)
  2949  054A  01B2               	clrf	((??_timersOFF+3)+0+3)
  2950  054B  084D               	movf	(_preScaleValue),w
  2951  054C  00B3               	movwf	((??_timersOFF+7)+0)
  2952  054D  084E               	movf	(_preScaleValue+1),w
  2953  054E  00B4               	movwf	((??_timersOFF+7)+0+1)
  2954  054F  084F               	movf	(_preScaleValue+2),w
  2955  0550  00B5               	movwf	((??_timersOFF+7)+0+2)
  2956  0551  3008               	movlw	08h
  2957  0552                     u3785:
  2958  0552  1003               	clrc
  2959  0553  0DB3               	rlf	(??_timersOFF+7)+0,f
  2960  0554  0DB4               	rlf	(??_timersOFF+7)+1,f
  2961  0555  0DB5               	rlf	(??_timersOFF+7)+2,f
  2962  0556                     u3780:
  2963  0556  3EFF               	addlw	-1
  2964  0557  1D03               	skipz
  2965  0558  2D52               	goto	u3785
  2966  0559  0833               	movf	0+(??_timersOFF+7)+0,w
  2967  055A  00A0               	movwf	(?___lmul)
  2968  055B  0834               	movf	1+(??_timersOFF+7)+0,w
  2969  055C  00A1               	movwf	((?___lmul))+1
  2970  055D  0835               	movf	2+(??_timersOFF+7)+0,w
  2971  055E  00A2               	movwf	((?___lmul))+2
  2972  055F  01A3               	clrf	((?___lmul))+3
  2973  0560  0844               	movf	(_TMR0cnt+3),w
  2974  0561  00A7               	movwf	3+(?___lmul)+04h
  2975  0562  0843               	movf	(_TMR0cnt+2),w
  2976  0563  00A6               	movwf	2+(?___lmul)+04h
  2977  0564  0842               	movf	(_TMR0cnt+1),w
  2978  0565  00A5               	movwf	1+(?___lmul)+04h
  2979  0566  0841               	movf	(_TMR0cnt),w
  2980  0567  00A4               	movwf	0+(?___lmul)+04h
  2981                           
  2982  0568  2647               	fcall	___lmul
  2983  0569  1283               	bcf	status, 5	;RP0=0, select bank0
  2984  056A  1303               	bcf	status, 6	;RP1=0, select bank0
  2985  056B  0820               	movf	(0+(?___lmul)),w
  2986  056C  07AF               	addwf	(??_timersOFF+3)+0,f
  2987  056D  0821               	movf	(1+(?___lmul)),w
  2988  056E  1803               	skipnc
  2989  056F  0F21               	incfsz	(1+(?___lmul)),w
  2990  0570  2D72               	goto	u3790
  2991  0571  2D73               	goto	u3791
  2992  0572                     u3790:
  2993  0572  07B0               	addwf	(??_timersOFF+3)+1,f
  2994  0573                     u3791:
  2995  0573  0822               	movf	(2+(?___lmul)),w
  2996  0574  1803               	skipnc
  2997  0575  0F22               	incfsz	(2+(?___lmul)),w
  2998  0576  2D78               	goto	u3792
  2999  0577  2D79               	goto	u3793
  3000  0578                     u3792:
  3001  0578  07B1               	addwf	(??_timersOFF+3)+2,f
  3002  0579                     u3793:
  3003  0579  0823               	movf	(3+(?___lmul)),w
  3004  057A  1803               	skipnc
  3005  057B  0A23               	incf	(3+(?___lmul)),w
  3006  057C  07B2               	addwf	(??_timersOFF+3)+3,f
  3007  057D  0832               	movf	3+(??_timersOFF+3)+0,w
  3008  057E  00CC               	movwf	(_number+3)
  3009  057F  0831               	movf	2+(??_timersOFF+3)+0,w
  3010  0580  00CB               	movwf	(_number+2)
  3011  0581  0830               	movf	1+(??_timersOFF+3)+0,w
  3012  0582  00CA               	movwf	(_number+1)
  3013  0583  082F               	movf	0+(??_timersOFF+3)+0,w
  3014  0584  00C9               	movwf	(_number)
  3015                           
  3016                           	line	403
  3017                           	
  3018  0585                     l3726:	
  3019                           ;blink.c: 403: _delay((unsigned long)((10)*(20000000/4000.0)));
  3020                           	opt asmopt_off
  3021  0585  3041               movlw	65
  3022  0586  00AD               movwf	((??_timersOFF+0)+0+1),f
  3023  0587  30EE               	movlw	238
  3024  0588  00AC               movwf	((??_timersOFF+0)+0),f
  3025  0589                     u4057:
  3026  0589  0BAC               	decfsz	((??_timersOFF+0)+0),f
  3027  058A  2D89               	goto	u4057
  3028  058B  0BAD               	decfsz	((??_timersOFF+0)+0+1),f
  3029  058C  2D89               	goto	u4057
  3030  058D  0064               	clrwdt
  3031                           opt asmopt_on
  3032                           
  3033                           	line	404
  3034                           	
  3035  058E                     l461:	
  3036  058E  0008               	return
  3037                           	opt stack 0
  3038                           GLOBAL	__end_of_timersOFF
  3039  058F                     	__end_of_timersOFF:
  3040 ;; =============== function _timersOFF ends ============
  3041                           
  3042                           	signat	_timersOFF,88
  3043                           	global	_timersON
  3044                           psect	text791,local,class=CODE,delta=2
  3045                           global __ptext791
  3046  079B                     __ptext791:
  3047                           
  3048 ;; *************** function _timersON *****************
  3049 ;; Defined at:
  3050 ;;		line 377 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;		None
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;		None               void
  3057 ;; Registers used:
  3058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3064 ;;      Params:         0       0       0       0
  3065 ;;      Locals:         0       0       0       0
  3066 ;;      Temps:          0       0       0       0
  3067 ;;      Totals:         0       0       0       0
  3068 ;;Total ram usage:        0 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; Hardware stack levels required when called:    3
  3071 ;; This function calls:
  3072 ;;		_initTimer0
  3073 ;;		_initTimer1
  3074 ;; This function is called by:
  3075 ;;		_main
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           psect	text791
  3079                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  3080                           	line	377
  3081                           	global	__size_of_timersON
  3082  0012                     	__size_of_timersON	equ	__end_of_timersON-_timersON
  3083                           	
  3084  079B                     _timersON:	
  3085                           	opt	stack 4
  3086                           ; Regs used in _timersON: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3087                           	line	378
  3088                           	
  3089  079B                     l3702:	
  3090                           ;blink.c: 378: RA0 = 0;
  3091  079B  1283               	bcf	status, 5	;RP0=0, select bank0
  3092  079C  1303               	bcf	status, 6	;RP1=0, select bank0
  3093  079D  1005               	bcf	(40/8),(40)&7
  3094                           	line	381
  3095                           	
  3096  079E                     l3704:	
  3097                           ;blink.c: 381: TRISA = 0x10;
  3098  079E  3010               	movlw	(010h)
  3099  079F  1683               	bsf	status, 5	;RP0=1, select bank1
  3100  07A0  1303               	bcf	status, 6	;RP1=0, select bank1
  3101  07A1  0085               	movwf	(133)^080h	;volatile
  3102                           	line	383
  3103                           	
  3104  07A2                     l3706:	
  3105                           ;blink.c: 383: initTimer0();
  3106  07A2  24C1               	fcall	_initTimer0
  3107                           	line	384
  3108                           	
  3109  07A3                     l3708:	
  3110                           ;blink.c: 384: initTimer1();
  3111  07A3  27BE               	fcall	_initTimer1
  3112                           	line	386
  3113                           	
  3114  07A4                     l3710:	
  3115                           ;blink.c: 386: TMR1cnt = 0;
  3116  07A4  1283               	bcf	status, 5	;RP0=0, select bank0
  3117  07A5  1303               	bcf	status, 6	;RP1=0, select bank0
  3118  07A6  01D0               	clrf	(_TMR1cnt)
  3119  07A7  01D1               	clrf	(_TMR1cnt+1)
  3120                           	line	388
  3121                           	
  3122  07A8                     l3712:	
  3123                           ;blink.c: 388: TMR1IE = 1;
  3124  07A8  1683               	bsf	status, 5	;RP0=1, select bank1
  3125  07A9  1303               	bcf	status, 6	;RP1=0, select bank1
  3126  07AA  140C               	bsf	(1120/8)^080h,(1120)&7
  3127                           	line	389
  3128                           	
  3129  07AB                     l3714:	
  3130                           ;blink.c: 389: T0IE = 1;
  3131  07AB  168B               	bsf	(93/8),(93)&7
  3132                           	line	390
  3133                           	
  3134  07AC                     l458:	
  3135  07AC  0008               	return
  3136                           	opt stack 0
  3137                           GLOBAL	__end_of_timersON
  3138  07AD                     	__end_of_timersON:
  3139 ;; =============== function _timersON ends ============
  3140                           
  3141                           	signat	_timersON,88
  3142                           	global	_ultoa
  3143                           psect	text792,local,class=CODE,delta=2
  3144                           global __ptext792
  3145  0358                     __ptext792:
  3146                           
  3147 ;; *************** function _ultoa *****************
  3148 ;; Defined at:
  3149 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ltoa.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  buf             1    wreg     PTR unsigned char 
  3152 ;;		 -> buffer(10), 
  3153 ;;  val             4   13[BANK0 ] unsigned long 
  3154 ;;  base            2   17[BANK0 ] int 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  buf             1   24[BANK0 ] PTR unsigned char 
  3157 ;;		 -> buffer(10), 
  3158 ;;  v               4   19[BANK0 ] unsigned long 
  3159 ;;  c               1   23[BANK0 ] unsigned char 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      PTR unsigned char 
  3162 ;; Registers used:
  3163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3169 ;;      Params:         0       6       0       0
  3170 ;;      Locals:         0       6       0       0
  3171 ;;      Temps:          1       0       0       0
  3172 ;;      Totals:         1      12       0       0
  3173 ;;Total ram usage:       13 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; Hardware stack levels required when called:    2
  3176 ;; This function calls:
  3177 ;;		___lldiv
  3178 ;;		___llmod
  3179 ;; This function is called by:
  3180 ;;		_doFrequency
  3181 ;;		_ltoa
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           psect	text792
  3185                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ltoa.c"
  3186                           	line	17
  3187                           	global	__size_of_ultoa
  3188  0091                     	__size_of_ultoa	equ	__end_of_ultoa-_ultoa
  3189                           	
  3190  0358                     _ultoa:	
  3191                           	opt	stack 4
  3192                           ; Regs used in _ultoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3193                           ;ultoa@buf stored from wreg
  3194                           	line	21
  3195  0358  1283               	bcf	status, 5	;RP0=0, select bank0
  3196  0359  1303               	bcf	status, 6	;RP1=0, select bank0
  3197  035A  00B8               	movwf	(ultoa@buf)
  3198                           	
  3199  035B                     l3676:	
  3200  035B  0830               	movf	(ultoa@val+3),w
  3201  035C  00B6               	movwf	(ultoa@v+3)
  3202  035D  082F               	movf	(ultoa@val+2),w
  3203  035E  00B5               	movwf	(ultoa@v+2)
  3204  035F  082E               	movf	(ultoa@val+1),w
  3205  0360  00B4               	movwf	(ultoa@v+1)
  3206  0361  082D               	movf	(ultoa@val),w
  3207  0362  00B3               	movwf	(ultoa@v)
  3208                           
  3209  0363  2B64               	goto	l3678
  3210                           	line	22
  3211                           	
  3212  0364                     l1304:	
  3213                           	line	23
  3214                           	
  3215  0364                     l3678:	
  3216  0364  0831               	movf	(ultoa@base),w
  3217  0365  00A0               	movwf	(?___lldiv)
  3218  0366  0832               	movf	(ultoa@base+1),w
  3219  0367  00A1               	movwf	(?___lldiv+1)
  3220  0368  3000               	movlw	0
  3221  0369  1BA1               	btfsc	(?___lldiv+1),7
  3222  036A  30FF               	movlw	255
  3223  036B  00A2               	movwf	(?___lldiv+2)
  3224  036C  00A3               	movwf	(?___lldiv+3)
  3225  036D  0836               	movf	(ultoa@v+3),w
  3226  036E  00A7               	movwf	3+(?___lldiv)+04h
  3227  036F  0835               	movf	(ultoa@v+2),w
  3228  0370  00A6               	movwf	2+(?___lldiv)+04h
  3229  0371  0834               	movf	(ultoa@v+1),w
  3230  0372  00A5               	movwf	1+(?___lldiv)+04h
  3231  0373  0833               	movf	(ultoa@v),w
  3232  0374  00A4               	movwf	0+(?___lldiv)+04h
  3233                           
  3234  0375  23E9               	fcall	___lldiv
  3235  0376  1283               	bcf	status, 5	;RP0=0, select bank0
  3236  0377  1303               	bcf	status, 6	;RP1=0, select bank0
  3237  0378  0823               	movf	(3+(?___lldiv)),w
  3238  0379  00B6               	movwf	(ultoa@v+3)
  3239  037A  0822               	movf	(2+(?___lldiv)),w
  3240  037B  00B5               	movwf	(ultoa@v+2)
  3241  037C  0821               	movf	(1+(?___lldiv)),w
  3242  037D  00B4               	movwf	(ultoa@v+1)
  3243  037E  0820               	movf	(0+(?___lldiv)),w
  3244  037F  00B3               	movwf	(ultoa@v)
  3245                           
  3246                           	line	24
  3247                           	
  3248  0380                     l3680:	
  3249  0380  3001               	movlw	(01h)
  3250  0381  00F6               	movwf	(??_ultoa+0)+0
  3251  0382  0876               	movf	(??_ultoa+0)+0,w
  3252  0383  07B8               	addwf	(ultoa@buf),f
  3253                           	line	25
  3254                           	
  3255  0384                     l3682:	
  3256  0384  0836               	movf	(ultoa@v+3),w
  3257  0385  0435               	iorwf	(ultoa@v+2),w
  3258  0386  0434               	iorwf	(ultoa@v+1),w
  3259  0387  0433               	iorwf	(ultoa@v),w
  3260  0388  1D03               	skipz
  3261  0389  2B8B               	goto	u3751
  3262  038A  2B8C               	goto	u3750
  3263  038B                     u3751:
  3264  038B  2B64               	goto	l3678
  3265  038C                     u3750:
  3266  038C  2B8D               	goto	l3684
  3267                           	
  3268  038D                     l1305:	
  3269                           	line	26
  3270                           	
  3271  038D                     l3684:	
  3272  038D  0838               	movf	(ultoa@buf),w
  3273  038E  0084               	movwf	fsr0
  3274  038F  1383               	bcf	status, 7	;select IRP bank0
  3275  0390  0180               	clrf	indf
  3276                           	
  3277  0391                     l3686:	
  3278  0391  3001               	movlw	low(01h)
  3279  0392  02B8               	subwf	(ultoa@buf),f
  3280  0393  2B94               	goto	l3688
  3281                           	line	27
  3282                           	
  3283  0394                     l1306:	
  3284                           	line	28
  3285                           	
  3286  0394                     l3688:	
  3287  0394  0831               	movf	(ultoa@base),w
  3288  0395  00A0               	movwf	(?___llmod)
  3289  0396  0832               	movf	(ultoa@base+1),w
  3290  0397  00A1               	movwf	(?___llmod+1)
  3291  0398  3000               	movlw	0
  3292  0399  1BA1               	btfsc	(?___llmod+1),7
  3293  039A  30FF               	movlw	255
  3294  039B  00A2               	movwf	(?___llmod+2)
  3295  039C  00A3               	movwf	(?___llmod+3)
  3296  039D  0830               	movf	(ultoa@val+3),w
  3297  039E  00A7               	movwf	3+(?___llmod)+04h
  3298  039F  082F               	movf	(ultoa@val+2),w
  3299  03A0  00A6               	movwf	2+(?___llmod)+04h
  3300  03A1  082E               	movf	(ultoa@val+1),w
  3301  03A2  00A5               	movwf	1+(?___llmod)+04h
  3302  03A3  082D               	movf	(ultoa@val),w
  3303  03A4  00A4               	movwf	0+(?___llmod)+04h
  3304                           
  3305  03A5  258F               	fcall	___llmod
  3306  03A6  1283               	bcf	status, 5	;RP0=0, select bank0
  3307  03A7  1303               	bcf	status, 6	;RP1=0, select bank0
  3308  03A8  0820               	movf	0+(((0+(?___llmod)))),w
  3309  03A9  00F6               	movwf	(??_ultoa+0)+0
  3310  03AA  0876               	movf	(??_ultoa+0)+0,w
  3311  03AB  00B7               	movwf	(ultoa@c)
  3312                           	line	29
  3313                           	
  3314  03AC                     l3690:	
  3315  03AC  0831               	movf	(ultoa@base),w
  3316  03AD  00A0               	movwf	(?___lldiv)
  3317  03AE  0832               	movf	(ultoa@base+1),w
  3318  03AF  00A1               	movwf	(?___lldiv+1)
  3319  03B0  3000               	movlw	0
  3320  03B1  1BA1               	btfsc	(?___lldiv+1),7
  3321  03B2  30FF               	movlw	255
  3322  03B3  00A2               	movwf	(?___lldiv+2)
  3323  03B4  00A3               	movwf	(?___lldiv+3)
  3324  03B5  0830               	movf	(ultoa@val+3),w
  3325  03B6  00A7               	movwf	3+(?___lldiv)+04h
  3326  03B7  082F               	movf	(ultoa@val+2),w
  3327  03B8  00A6               	movwf	2+(?___lldiv)+04h
  3328  03B9  082E               	movf	(ultoa@val+1),w
  3329  03BA  00A5               	movwf	1+(?___lldiv)+04h
  3330  03BB  082D               	movf	(ultoa@val),w
  3331  03BC  00A4               	movwf	0+(?___lldiv)+04h
  3332                           
  3333  03BD  23E9               	fcall	___lldiv
  3334  03BE  1283               	bcf	status, 5	;RP0=0, select bank0
  3335  03BF  1303               	bcf	status, 6	;RP1=0, select bank0
  3336  03C0  0823               	movf	(3+(?___lldiv)),w
  3337  03C1  00B0               	movwf	(ultoa@val+3)
  3338  03C2  0822               	movf	(2+(?___lldiv)),w
  3339  03C3  00AF               	movwf	(ultoa@val+2)
  3340  03C4  0821               	movf	(1+(?___lldiv)),w
  3341  03C5  00AE               	movwf	(ultoa@val+1)
  3342  03C6  0820               	movf	(0+(?___lldiv)),w
  3343  03C7  00AD               	movwf	(ultoa@val)
  3344                           
  3345                           	line	30
  3346                           	
  3347  03C8                     l3692:	
  3348  03C8  300A               	movlw	(0Ah)
  3349  03C9  0237               	subwf	(ultoa@c),w
  3350  03CA  1C03               	skipc
  3351  03CB  2BCD               	goto	u3761
  3352  03CC  2BCE               	goto	u3760
  3353  03CD                     u3761:
  3354  03CD  2BD2               	goto	l1307
  3355  03CE                     u3760:
  3356                           	line	31
  3357                           	
  3358  03CE                     l3694:	
  3359  03CE  3007               	movlw	(07h)
  3360  03CF  00F6               	movwf	(??_ultoa+0)+0
  3361  03D0  0876               	movf	(??_ultoa+0)+0,w
  3362  03D1  07B7               	addwf	(ultoa@c),f
  3363                           	
  3364  03D2                     l1307:	
  3365                           	line	32
  3366  03D2  3030               	movlw	(030h)
  3367  03D3  00F6               	movwf	(??_ultoa+0)+0
  3368  03D4  0876               	movf	(??_ultoa+0)+0,w
  3369  03D5  07B7               	addwf	(ultoa@c),f
  3370                           	line	33
  3371                           	
  3372  03D6                     l3696:	
  3373  03D6  0837               	movf	(ultoa@c),w
  3374  03D7  00F6               	movwf	(??_ultoa+0)+0
  3375  03D8  0838               	movf	(ultoa@buf),w
  3376  03D9  0084               	movwf	fsr0
  3377  03DA  0876               	movf	(??_ultoa+0)+0,w
  3378  03DB  1383               	bcf	status, 7	;select IRP bank0
  3379  03DC  0080               	movwf	indf
  3380                           	
  3381  03DD                     l3698:	
  3382  03DD  3001               	movlw	low(01h)
  3383  03DE  02B8               	subwf	(ultoa@buf),f
  3384                           	line	34
  3385                           	
  3386  03DF                     l3700:	
  3387  03DF  0830               	movf	(ultoa@val+3),w
  3388  03E0  042F               	iorwf	(ultoa@val+2),w
  3389  03E1  042E               	iorwf	(ultoa@val+1),w
  3390  03E2  042D               	iorwf	(ultoa@val),w
  3391  03E3  1D03               	skipz
  3392  03E4  2BE6               	goto	u3771
  3393  03E5  2BE7               	goto	u3770
  3394  03E6                     u3771:
  3395  03E6  2B94               	goto	l3688
  3396  03E7                     u3770:
  3397  03E7  2BE8               	goto	l1309
  3398                           	
  3399  03E8                     l1308:	
  3400                           	line	36
  3401                           ;	Return value of _ultoa is never used
  3402                           	
  3403  03E8                     l1309:	
  3404  03E8  0008               	return
  3405                           	opt stack 0
  3406                           GLOBAL	__end_of_ultoa
  3407  03E9                     	__end_of_ultoa:
  3408 ;; =============== function _ultoa ends ============
  3409                           
  3410                           	signat	_ultoa,12409
  3411                           	global	___tmul
  3412                           psect	text793,local,class=CODE,delta=2
  3413                           global __ptext793
  3414  06DA                     __ptext793:
  3415                           
  3416 ;; *************** function ___tmul *****************
  3417 ;; Defined at:
  3418 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\tmul.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;  multiplier      3    0[BANK0 ] unsigned um
  3421 ;;  multiplicand    3    3[BANK0 ] unsigned um
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;  product         3    4[COMMON] unsigned um
  3424 ;; Return value:  Size  Location     Type
  3425 ;;                  3    0[BANK0 ] unsigned um
  3426 ;; Registers used:
  3427 ;;		wreg, status,2, status,0
  3428 ;; Tracked objects:
  3429 ;;		On entry : 0/0
  3430 ;;		On exit  : 0/0
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3433 ;;      Params:         0       6       0       0
  3434 ;;      Locals:         3       0       0       0
  3435 ;;      Temps:          0       0       0       0
  3436 ;;      Totals:         3       6       0       0
  3437 ;;Total ram usage:        9 bytes
  3438 ;; Hardware stack levels used:    1
  3439 ;; Hardware stack levels required when called:    1
  3440 ;; This function calls:
  3441 ;;		Nothing
  3442 ;; This function is called by:
  3443 ;;		_timersOFF
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           psect	text793
  3447                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\tmul.c"
  3448                           	line	3
  3449                           	global	__size_of___tmul
  3450  003E                     	__size_of___tmul	equ	__end_of___tmul-___tmul
  3451                           	
  3452  06DA                     ___tmul:	
  3453                           	opt	stack 5
  3454                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  3455                           	line	4
  3456                           	
  3457  06DA                     l3662:	
  3458  06DA  3000               	movlw	0
  3459  06DB  00F4               	movwf	(___tmul@product)
  3460  06DC  3000               	movlw	0
  3461  06DD  00F5               	movwf	(___tmul@product+1)
  3462  06DE  3000               	movlw	0
  3463  06DF  00F6               	movwf	(___tmul@product+2)
  3464  06E0  2EE1               	goto	l3664
  3465                           	line	6
  3466                           	
  3467  06E1                     l1644:	
  3468                           	line	7
  3469                           	
  3470  06E1                     l3664:	
  3471  06E1  1283               	bcf	status, 5	;RP0=0, select bank0
  3472  06E2  1303               	bcf	status, 6	;RP1=0, select bank0
  3473  06E3  1C20               	btfss	(___tmul@multiplier),(0)&7
  3474  06E4  2EE6               	goto	u3701
  3475  06E5  2EE7               	goto	u3700
  3476  06E6                     u3701:
  3477  06E6  2EF8               	goto	l3668
  3478  06E7                     u3700:
  3479                           	line	8
  3480                           	
  3481  06E7                     l3666:	
  3482  06E7  0823               	movf	(___tmul@multiplicand),w
  3483  06E8  07F4               	addwf	(___tmul@product),f
  3484  06E9  0824               	movf	(___tmul@multiplicand+1),w
  3485  06EA  1103               	clrz
  3486  06EB  1803               	skipnc
  3487  06EC  0A24               	incf	(___tmul@multiplicand+1),w
  3488  06ED  1903               	skipnz
  3489  06EE  2EF0               	goto	u3711
  3490  06EF  07F5               	addwf	(___tmul@product+1),f
  3491  06F0                     u3711:
  3492  06F0  0825               	movf	(___tmul@multiplicand+2),w
  3493  06F1  1103               	clrz
  3494  06F2  1803               	skipnc
  3495  06F3  0A25               	incf	(___tmul@multiplicand+2),w
  3496  06F4  1903               	skipnz
  3497  06F5  2EF7               	goto	u3712
  3498  06F6  07F6               	addwf	(___tmul@product+2),f
  3499  06F7                     u3712:
  3500                           
  3501  06F7  2EF8               	goto	l3668
  3502                           	
  3503  06F8                     l1645:	
  3504                           	line	9
  3505                           	
  3506  06F8                     l3668:	
  3507  06F8  3001               	movlw	01h
  3508  06F9                     u3725:
  3509  06F9  1003               	clrc
  3510  06FA  0DA3               	rlf	(___tmul@multiplicand),f
  3511  06FB  0DA4               	rlf	(___tmul@multiplicand+1),f
  3512  06FC  0DA5               	rlf	(___tmul@multiplicand+2),f
  3513  06FD  3EFF               	addlw	-1
  3514  06FE  1D03               	skipz
  3515  06FF  2EF9               	goto	u3725
  3516                           	line	10
  3517                           	
  3518  0700                     l3670:	
  3519  0700  3001               	movlw	01h
  3520  0701                     u3735:
  3521  0701  1003               	clrc
  3522  0702  0CA2               	rrf	(___tmul@multiplier+2),f
  3523  0703  0CA1               	rrf	(___tmul@multiplier+1),f
  3524  0704  0CA0               	rrf	(___tmul@multiplier),f
  3525  0705  3EFF               	addlw	-1
  3526  0706  1D03               	skipz
  3527  0707  2F01               	goto	u3735
  3528                           
  3529                           	line	11
  3530  0708  0822               	movf	(___tmul@multiplier+2),w
  3531  0709  0421               	iorwf	(___tmul@multiplier+1),w
  3532  070A  0420               	iorwf	(___tmul@multiplier),w
  3533  070B  1D03               	skipz
  3534  070C  2F0E               	goto	u3741
  3535  070D  2F0F               	goto	u3740
  3536  070E                     u3741:
  3537  070E  2EE1               	goto	l3664
  3538  070F                     u3740:
  3539  070F  2F10               	goto	l3672
  3540                           	
  3541  0710                     l1646:	
  3542                           	line	12
  3543                           	
  3544  0710                     l3672:	
  3545  0710  0874               	movf	(___tmul@product),w
  3546  0711  00A0               	movwf	(?___tmul)
  3547  0712  0875               	movf	(___tmul@product+1),w
  3548  0713  00A1               	movwf	(?___tmul+1)
  3549  0714  0876               	movf	(___tmul@product+2),w
  3550  0715  00A2               	movwf	(?___tmul+2)
  3551  0716  2F17               	goto	l1647
  3552                           	
  3553  0717                     l3674:	
  3554                           	line	13
  3555                           	
  3556  0717                     l1647:	
  3557  0717  0008               	return
  3558                           	opt stack 0
  3559                           GLOBAL	__end_of___tmul
  3560  0718                     	__end_of___tmul:
  3561 ;; =============== function ___tmul ends ============
  3562                           
  3563                           	signat	___tmul,8315
  3564                           	global	___awmod
  3565                           psect	text794,local,class=CODE,delta=2
  3566                           global __ptext794
  3567  0459                     __ptext794:
  3568                           
  3569 ;; *************** function ___awmod *****************
  3570 ;; Defined at:
  3571 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awmod.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;  divisor         2    0[BANK0 ] int 
  3574 ;;  dividend        2    2[BANK0 ] int 
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  sign            1    6[COMMON] unsigned char 
  3577 ;;  counter         1    5[COMMON] unsigned char 
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  2    0[BANK0 ] int 
  3580 ;; Registers used:
  3581 ;;		wreg, status,2, status,0
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3587 ;;      Params:         0       4       0       0
  3588 ;;      Locals:         2       0       0       0
  3589 ;;      Temps:          1       0       0       0
  3590 ;;      Totals:         3       4       0       0
  3591 ;;Total ram usage:        7 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:    1
  3594 ;; This function calls:
  3595 ;;		Nothing
  3596 ;; This function is called by:
  3597 ;;		_lcd_putnumber
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           psect	text794
  3601                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awmod.c"
  3602                           	line	5
  3603                           	global	__size_of___awmod
  3604  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  3605                           	
  3606  0459                     ___awmod:	
  3607                           	opt	stack 4
  3608                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3609                           	line	8
  3610                           	
  3611  0459                     l3628:	
  3612  0459  01F6               	clrf	(___awmod@sign)
  3613                           	line	9
  3614  045A  1283               	bcf	status, 5	;RP0=0, select bank0
  3615  045B  1303               	bcf	status, 6	;RP1=0, select bank0
  3616  045C  1FA3               	btfss	(___awmod@dividend+1),7
  3617  045D  2C5F               	goto	u3611
  3618  045E  2C60               	goto	u3610
  3619  045F                     u3611:
  3620  045F  2C69               	goto	l3632
  3621  0460                     u3610:
  3622                           	line	10
  3623                           	
  3624  0460                     l3630:	
  3625  0460  09A2               	comf	(___awmod@dividend),f
  3626  0461  09A3               	comf	(___awmod@dividend+1),f
  3627  0462  0AA2               	incf	(___awmod@dividend),f
  3628  0463  1903               	skipnz
  3629  0464  0AA3               	incf	(___awmod@dividend+1),f
  3630                           	line	11
  3631  0465  01F6               	clrf	(___awmod@sign)
  3632  0466  1403               	bsf	status,0
  3633  0467  0DF6               	rlf	(___awmod@sign),f
  3634  0468  2C69               	goto	l3632
  3635                           	line	12
  3636                           	
  3637  0469                     l1526:	
  3638                           	line	13
  3639                           	
  3640  0469                     l3632:	
  3641  0469  1FA1               	btfss	(___awmod@divisor+1),7
  3642  046A  2C6C               	goto	u3621
  3643  046B  2C6D               	goto	u3620
  3644  046C                     u3621:
  3645  046C  2C73               	goto	l3636
  3646  046D                     u3620:
  3647                           	line	14
  3648                           	
  3649  046D                     l3634:	
  3650  046D  09A0               	comf	(___awmod@divisor),f
  3651  046E  09A1               	comf	(___awmod@divisor+1),f
  3652  046F  0AA0               	incf	(___awmod@divisor),f
  3653  0470  1903               	skipnz
  3654  0471  0AA1               	incf	(___awmod@divisor+1),f
  3655  0472  2C73               	goto	l3636
  3656                           	
  3657  0473                     l1527:	
  3658                           	line	15
  3659                           	
  3660  0473                     l3636:	
  3661  0473  0821               	movf	(___awmod@divisor+1),w
  3662  0474  0420               	iorwf	(___awmod@divisor),w
  3663  0475  1903               	skipnz
  3664  0476  2C78               	goto	u3631
  3665  0477  2C79               	goto	u3630
  3666  0478                     u3631:
  3667  0478  2CAF               	goto	l3654
  3668  0479                     u3630:
  3669                           	line	16
  3670                           	
  3671  0479                     l3638:	
  3672  0479  01F5               	clrf	(___awmod@counter)
  3673  047A  1403               	bsf	status,0
  3674  047B  0DF5               	rlf	(___awmod@counter),f
  3675                           	line	17
  3676  047C  2C89               	goto	l3644
  3677                           	
  3678  047D                     l1530:	
  3679                           	line	18
  3680                           	
  3681  047D                     l3640:	
  3682  047D  3001               	movlw	01h
  3683                           	
  3684  047E                     u3645:
  3685  047E  1003               	clrc
  3686  047F  0DA0               	rlf	(___awmod@divisor),f
  3687  0480  0DA1               	rlf	(___awmod@divisor+1),f
  3688  0481  3EFF               	addlw	-1
  3689  0482  1D03               	skipz
  3690  0483  2C7E               	goto	u3645
  3691                           	line	19
  3692                           	
  3693  0484                     l3642:	
  3694  0484  3001               	movlw	(01h)
  3695  0485  00F4               	movwf	(??___awmod+0)+0
  3696  0486  0874               	movf	(??___awmod+0)+0,w
  3697  0487  07F5               	addwf	(___awmod@counter),f
  3698  0488  2C89               	goto	l3644
  3699                           	line	20
  3700                           	
  3701  0489                     l1529:	
  3702                           	line	17
  3703                           	
  3704  0489                     l3644:	
  3705  0489  1FA1               	btfss	(___awmod@divisor+1),(15)&7
  3706  048A  2C8C               	goto	u3651
  3707  048B  2C8D               	goto	u3650
  3708  048C                     u3651:
  3709  048C  2C7D               	goto	l3640
  3710  048D                     u3650:
  3711  048D  2C8F               	goto	l3646
  3712                           	
  3713  048E                     l1531:	
  3714  048E  2C8F               	goto	l3646
  3715                           	line	21
  3716                           	
  3717  048F                     l1532:	
  3718                           	line	22
  3719                           	
  3720  048F                     l3646:	
  3721  048F  0821               	movf	(___awmod@divisor+1),w
  3722  0490  0223               	subwf	(___awmod@dividend+1),w
  3723  0491  1D03               	skipz
  3724  0492  2C95               	goto	u3665
  3725  0493  0820               	movf	(___awmod@divisor),w
  3726  0494  0222               	subwf	(___awmod@dividend),w
  3727  0495                     u3665:
  3728  0495  1C03               	skipc
  3729  0496  2C98               	goto	u3661
  3730  0497  2C99               	goto	u3660
  3731  0498                     u3661:
  3732  0498  2CA0               	goto	l3650
  3733  0499                     u3660:
  3734                           	line	23
  3735                           	
  3736  0499                     l3648:	
  3737  0499  0820               	movf	(___awmod@divisor),w
  3738  049A  02A2               	subwf	(___awmod@dividend),f
  3739  049B  0821               	movf	(___awmod@divisor+1),w
  3740  049C  1C03               	skipc
  3741  049D  03A3               	decf	(___awmod@dividend+1),f
  3742  049E  02A3               	subwf	(___awmod@dividend+1),f
  3743  049F  2CA0               	goto	l3650
  3744                           	
  3745  04A0                     l1533:	
  3746                           	line	24
  3747                           	
  3748  04A0                     l3650:	
  3749  04A0  3001               	movlw	01h
  3750                           	
  3751  04A1                     u3675:
  3752  04A1  1003               	clrc
  3753  04A2  0CA1               	rrf	(___awmod@divisor+1),f
  3754  04A3  0CA0               	rrf	(___awmod@divisor),f
  3755  04A4  3EFF               	addlw	-1
  3756  04A5  1D03               	skipz
  3757  04A6  2CA1               	goto	u3675
  3758                           	line	25
  3759                           	
  3760  04A7                     l3652:	
  3761  04A7  3001               	movlw	low(01h)
  3762  04A8  02F5               	subwf	(___awmod@counter),f
  3763  04A9  1D03               	btfss	status,2
  3764  04AA  2CAC               	goto	u3681
  3765  04AB  2CAD               	goto	u3680
  3766  04AC                     u3681:
  3767  04AC  2C8F               	goto	l3646
  3768  04AD                     u3680:
  3769  04AD  2CAF               	goto	l3654
  3770                           	
  3771  04AE                     l1534:	
  3772  04AE  2CAF               	goto	l3654
  3773                           	line	26
  3774                           	
  3775  04AF                     l1528:	
  3776                           	line	27
  3777                           	
  3778  04AF                     l3654:	
  3779  04AF  0876               	movf	(___awmod@sign),w
  3780  04B0  1D03               	skipz
  3781  04B1  2CB3               	goto	u3690
  3782  04B2  2CB9               	goto	l3658
  3783  04B3                     u3690:
  3784                           	line	28
  3785                           	
  3786  04B3                     l3656:	
  3787  04B3  09A2               	comf	(___awmod@dividend),f
  3788  04B4  09A3               	comf	(___awmod@dividend+1),f
  3789  04B5  0AA2               	incf	(___awmod@dividend),f
  3790  04B6  1903               	skipnz
  3791  04B7  0AA3               	incf	(___awmod@dividend+1),f
  3792  04B8  2CB9               	goto	l3658
  3793                           	
  3794  04B9                     l1535:	
  3795                           	line	29
  3796                           	
  3797  04B9                     l3658:	
  3798  04B9  0823               	movf	(___awmod@dividend+1),w
  3799  04BA  01A1               	clrf	(?___awmod+1)
  3800  04BB  07A1               	addwf	(?___awmod+1)
  3801  04BC  0822               	movf	(___awmod@dividend),w
  3802  04BD  01A0               	clrf	(?___awmod)
  3803  04BE  07A0               	addwf	(?___awmod)
  3804                           
  3805  04BF  2CC0               	goto	l1536
  3806                           	
  3807  04C0                     l3660:	
  3808                           	line	30
  3809                           	
  3810  04C0                     l1536:	
  3811  04C0  0008               	return
  3812                           	opt stack 0
  3813                           GLOBAL	__end_of___awmod
  3814  04C1                     	__end_of___awmod:
  3815 ;; =============== function ___awmod ends ============
  3816                           
  3817                           	signat	___awmod,8314
  3818                           	global	___lldiv
  3819                           psect	text795,local,class=CODE,delta=2
  3820                           global __ptext795
  3821  03E9                     __ptext795:
  3822                           
  3823 ;; *************** function ___lldiv *****************
  3824 ;; Defined at:
  3825 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lldiv.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;  divisor         4    0[BANK0 ] unsigned long 
  3828 ;;  dividend        4    4[BANK0 ] unsigned long 
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;  quotient        4    8[BANK0 ] unsigned long 
  3831 ;;  counter         1   12[BANK0 ] unsigned char 
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  4    0[BANK0 ] unsigned long 
  3834 ;; Registers used:
  3835 ;;		wreg, status,2, status,0
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3841 ;;      Params:         0       8       0       0
  3842 ;;      Locals:         0       5       0       0
  3843 ;;      Temps:          1       0       0       0
  3844 ;;      Totals:         1      13       0       0
  3845 ;;Total ram usage:       14 bytes
  3846 ;; Hardware stack levels used:    1
  3847 ;; Hardware stack levels required when called:    1
  3848 ;; This function calls:
  3849 ;;		Nothing
  3850 ;; This function is called by:
  3851 ;;		_lcd_putnumber
  3852 ;;		_ultoa
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           psect	text795
  3856                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lldiv.c"
  3857                           	line	5
  3858                           	global	__size_of___lldiv
  3859  0070                     	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  3860                           	
  3861  03E9                     ___lldiv:	
  3862                           	opt	stack 4
  3863                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3864                           	line	9
  3865                           	
  3866  03E9                     l3604:	
  3867  03E9  3000               	movlw	0
  3868  03EA  1283               	bcf	status, 5	;RP0=0, select bank0
  3869  03EB  1303               	bcf	status, 6	;RP1=0, select bank0
  3870  03EC  00AB               	movwf	(___lldiv@quotient+3)
  3871  03ED  3000               	movlw	0
  3872  03EE  00AA               	movwf	(___lldiv@quotient+2)
  3873  03EF  3000               	movlw	0
  3874  03F0  00A9               	movwf	(___lldiv@quotient+1)
  3875  03F1  3000               	movlw	0
  3876  03F2  00A8               	movwf	(___lldiv@quotient)
  3877                           
  3878                           	line	10
  3879  03F3  0823               	movf	(___lldiv@divisor+3),w
  3880  03F4  0422               	iorwf	(___lldiv@divisor+2),w
  3881  03F5  0421               	iorwf	(___lldiv@divisor+1),w
  3882  03F6  0420               	iorwf	(___lldiv@divisor),w
  3883  03F7  1903               	skipnz
  3884  03F8  2BFA               	goto	u3541
  3885  03F9  2BFB               	goto	u3540
  3886  03FA                     u3541:
  3887  03FA  2C4F               	goto	l3624
  3888  03FB                     u3540:
  3889                           	line	11
  3890                           	
  3891  03FB                     l3606:	
  3892  03FB  01AC               	clrf	(___lldiv@counter)
  3893  03FC  1403               	bsf	status,0
  3894  03FD  0DAC               	rlf	(___lldiv@counter),f
  3895                           	line	12
  3896  03FE  2C0D               	goto	l3610
  3897                           	
  3898  03FF                     l1492:	
  3899                           	line	13
  3900                           	
  3901  03FF                     l3608:	
  3902  03FF  3001               	movlw	01h
  3903  0400  00F4               	movwf	(??___lldiv+0)+0
  3904  0401                     u3555:
  3905  0401  1003               	clrc
  3906  0402  0DA0               	rlf	(___lldiv@divisor),f
  3907  0403  0DA1               	rlf	(___lldiv@divisor+1),f
  3908  0404  0DA2               	rlf	(___lldiv@divisor+2),f
  3909  0405  0DA3               	rlf	(___lldiv@divisor+3),f
  3910  0406  0BF4               	decfsz	(??___lldiv+0)+0
  3911  0407  2C01               	goto	u3555
  3912                           	line	14
  3913  0408  3001               	movlw	(01h)
  3914  0409  00F4               	movwf	(??___lldiv+0)+0
  3915  040A  0874               	movf	(??___lldiv+0)+0,w
  3916  040B  07AC               	addwf	(___lldiv@counter),f
  3917  040C  2C0D               	goto	l3610
  3918                           	line	15
  3919                           	
  3920  040D                     l1491:	
  3921                           	line	12
  3922                           	
  3923  040D                     l3610:	
  3924  040D  1FA3               	btfss	(___lldiv@divisor+3),(31)&7
  3925  040E  2C10               	goto	u3561
  3926  040F  2C11               	goto	u3560
  3927  0410                     u3561:
  3928  0410  2BFF               	goto	l3608
  3929  0411                     u3560:
  3930  0411  2C13               	goto	l3612
  3931                           	
  3932  0412                     l1493:	
  3933  0412  2C13               	goto	l3612
  3934                           	line	16
  3935                           	
  3936  0413                     l1494:	
  3937                           	line	17
  3938                           	
  3939  0413                     l3612:	
  3940  0413  3001               	movlw	01h
  3941  0414  00F4               	movwf	(??___lldiv+0)+0
  3942  0415                     u3575:
  3943  0415  1003               	clrc
  3944  0416  0DA8               	rlf	(___lldiv@quotient),f
  3945  0417  0DA9               	rlf	(___lldiv@quotient+1),f
  3946  0418  0DAA               	rlf	(___lldiv@quotient+2),f
  3947  0419  0DAB               	rlf	(___lldiv@quotient+3),f
  3948  041A  0BF4               	decfsz	(??___lldiv+0)+0
  3949  041B  2C15               	goto	u3575
  3950                           	line	18
  3951                           	
  3952  041C                     l3614:	
  3953  041C  0823               	movf	(___lldiv@divisor+3),w
  3954  041D  0227               	subwf	(___lldiv@dividend+3),w
  3955  041E  1D03               	skipz
  3956  041F  2C2A               	goto	u3585
  3957  0420  0822               	movf	(___lldiv@divisor+2),w
  3958  0421  0226               	subwf	(___lldiv@dividend+2),w
  3959  0422  1D03               	skipz
  3960  0423  2C2A               	goto	u3585
  3961  0424  0821               	movf	(___lldiv@divisor+1),w
  3962  0425  0225               	subwf	(___lldiv@dividend+1),w
  3963  0426  1D03               	skipz
  3964  0427  2C2A               	goto	u3585
  3965  0428  0820               	movf	(___lldiv@divisor),w
  3966  0429  0224               	subwf	(___lldiv@dividend),w
  3967  042A                     u3585:
  3968  042A  1C03               	skipc
  3969  042B  2C2D               	goto	u3581
  3970  042C  2C2E               	goto	u3580
  3971  042D                     u3581:
  3972  042D  2C3E               	goto	l3620
  3973  042E                     u3580:
  3974                           	line	19
  3975                           	
  3976  042E                     l3616:	
  3977  042E  0820               	movf	(___lldiv@divisor),w
  3978  042F  02A4               	subwf	(___lldiv@dividend),f
  3979  0430  0821               	movf	(___lldiv@divisor+1),w
  3980  0431  1C03               	skipc
  3981  0432  0F21               	incfsz	(___lldiv@divisor+1),w
  3982  0433  02A5               	subwf	(___lldiv@dividend+1),f
  3983  0434  0822               	movf	(___lldiv@divisor+2),w
  3984  0435  1C03               	skipc
  3985  0436  0F22               	incfsz	(___lldiv@divisor+2),w
  3986  0437  02A6               	subwf	(___lldiv@dividend+2),f
  3987  0438  0823               	movf	(___lldiv@divisor+3),w
  3988  0439  1C03               	skipc
  3989  043A  0F23               	incfsz	(___lldiv@divisor+3),w
  3990  043B  02A7               	subwf	(___lldiv@dividend+3),f
  3991                           	line	20
  3992                           	
  3993  043C                     l3618:	
  3994  043C  1428               	bsf	(___lldiv@quotient)+(0/8),(0)&7
  3995  043D  2C3E               	goto	l3620
  3996                           	line	21
  3997                           	
  3998  043E                     l1495:	
  3999                           	line	22
  4000                           	
  4001  043E                     l3620:	
  4002  043E  3001               	movlw	01h
  4003  043F                     u3595:
  4004  043F  1003               	clrc
  4005  0440  0CA3               	rrf	(___lldiv@divisor+3),f
  4006  0441  0CA2               	rrf	(___lldiv@divisor+2),f
  4007  0442  0CA1               	rrf	(___lldiv@divisor+1),f
  4008  0443  0CA0               	rrf	(___lldiv@divisor),f
  4009  0444  3EFF               	addlw	-1
  4010  0445  1D03               	skipz
  4011  0446  2C3F               	goto	u3595
  4012                           
  4013                           	line	23
  4014                           	
  4015  0447                     l3622:	
  4016  0447  3001               	movlw	low(01h)
  4017  0448  02AC               	subwf	(___lldiv@counter),f
  4018  0449  1D03               	btfss	status,2
  4019  044A  2C4C               	goto	u3601
  4020  044B  2C4D               	goto	u3600
  4021  044C                     u3601:
  4022  044C  2C13               	goto	l3612
  4023  044D                     u3600:
  4024  044D  2C4F               	goto	l3624
  4025                           	
  4026  044E                     l1496:	
  4027  044E  2C4F               	goto	l3624
  4028                           	line	24
  4029                           	
  4030  044F                     l1490:	
  4031                           	line	25
  4032                           	
  4033  044F                     l3624:	
  4034  044F  082B               	movf	(___lldiv@quotient+3),w
  4035  0450  00A3               	movwf	(?___lldiv+3)
  4036  0451  082A               	movf	(___lldiv@quotient+2),w
  4037  0452  00A2               	movwf	(?___lldiv+2)
  4038  0453  0829               	movf	(___lldiv@quotient+1),w
  4039  0454  00A1               	movwf	(?___lldiv+1)
  4040  0455  0828               	movf	(___lldiv@quotient),w
  4041  0456  00A0               	movwf	(?___lldiv)
  4042                           
  4043  0457  2C58               	goto	l1497
  4044                           	
  4045  0458                     l3626:	
  4046                           	line	26
  4047                           	
  4048  0458                     l1497:	
  4049  0458  0008               	return
  4050                           	opt stack 0
  4051                           GLOBAL	__end_of___lldiv
  4052  0459                     	__end_of___lldiv:
  4053 ;; =============== function ___lldiv ends ============
  4054                           
  4055                           	signat	___lldiv,8316
  4056                           	global	___llmod
  4057                           psect	text796,local,class=CODE,delta=2
  4058                           global __ptext796
  4059  058F                     __ptext796:
  4060                           
  4061 ;; *************** function ___llmod *****************
  4062 ;; Defined at:
  4063 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\llmod.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  divisor         4    0[BANK0 ] unsigned long 
  4066 ;;  dividend        4    4[BANK0 ] unsigned long 
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;  counter         1    5[COMMON] unsigned char 
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  4    0[BANK0 ] unsigned long 
  4071 ;; Registers used:
  4072 ;;		wreg, status,2, status,0
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4078 ;;      Params:         0       8       0       0
  4079 ;;      Locals:         1       0       0       0
  4080 ;;      Temps:          1       0       0       0
  4081 ;;      Totals:         2       8       0       0
  4082 ;;Total ram usage:       10 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; Hardware stack levels required when called:    1
  4085 ;; This function calls:
  4086 ;;		Nothing
  4087 ;; This function is called by:
  4088 ;;		_lcd_putnumber
  4089 ;;		_ultoa
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           psect	text796
  4093                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\llmod.c"
  4094                           	line	5
  4095                           	global	__size_of___llmod
  4096  005E                     	__size_of___llmod	equ	__end_of___llmod-___llmod
  4097                           	
  4098  058F                     ___llmod:	
  4099                           	opt	stack 4
  4100                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4101                           	line	8
  4102                           	
  4103  058F                     l3162:	
  4104  058F  1283               	bcf	status, 5	;RP0=0, select bank0
  4105  0590  1303               	bcf	status, 6	;RP1=0, select bank0
  4106  0591  0823               	movf	(___llmod@divisor+3),w
  4107  0592  0422               	iorwf	(___llmod@divisor+2),w
  4108  0593  0421               	iorwf	(___llmod@divisor+1),w
  4109  0594  0420               	iorwf	(___llmod@divisor),w
  4110  0595  1903               	skipnz
  4111  0596  2D98               	goto	u2841
  4112  0597  2D99               	goto	u2840
  4113  0598                     u2841:
  4114  0598  2DE3               	goto	l3178
  4115  0599                     u2840:
  4116                           	line	9
  4117                           	
  4118  0599                     l3164:	
  4119  0599  01F5               	clrf	(___llmod@counter)
  4120  059A  1403               	bsf	status,0
  4121  059B  0DF5               	rlf	(___llmod@counter),f
  4122                           	line	10
  4123  059C  2DAB               	goto	l3168
  4124                           	
  4125  059D                     l1473:	
  4126                           	line	11
  4127                           	
  4128  059D                     l3166:	
  4129  059D  3001               	movlw	01h
  4130  059E  00F4               	movwf	(??___llmod+0)+0
  4131  059F                     u2855:
  4132  059F  1003               	clrc
  4133  05A0  0DA0               	rlf	(___llmod@divisor),f
  4134  05A1  0DA1               	rlf	(___llmod@divisor+1),f
  4135  05A2  0DA2               	rlf	(___llmod@divisor+2),f
  4136  05A3  0DA3               	rlf	(___llmod@divisor+3),f
  4137  05A4  0BF4               	decfsz	(??___llmod+0)+0
  4138  05A5  2D9F               	goto	u2855
  4139                           	line	12
  4140  05A6  3001               	movlw	(01h)
  4141  05A7  00F4               	movwf	(??___llmod+0)+0
  4142  05A8  0874               	movf	(??___llmod+0)+0,w
  4143  05A9  07F5               	addwf	(___llmod@counter),f
  4144  05AA  2DAB               	goto	l3168
  4145                           	line	13
  4146                           	
  4147  05AB                     l1472:	
  4148                           	line	10
  4149                           	
  4150  05AB                     l3168:	
  4151  05AB  1FA3               	btfss	(___llmod@divisor+3),(31)&7
  4152  05AC  2DAE               	goto	u2861
  4153  05AD  2DAF               	goto	u2860
  4154  05AE                     u2861:
  4155  05AE  2D9D               	goto	l3166
  4156  05AF                     u2860:
  4157  05AF  2DB1               	goto	l3170
  4158                           	
  4159  05B0                     l1474:	
  4160  05B0  2DB1               	goto	l3170
  4161                           	line	14
  4162                           	
  4163  05B1                     l1475:	
  4164                           	line	15
  4165                           	
  4166  05B1                     l3170:	
  4167  05B1  0823               	movf	(___llmod@divisor+3),w
  4168  05B2  0227               	subwf	(___llmod@dividend+3),w
  4169  05B3  1D03               	skipz
  4170  05B4  2DBF               	goto	u2875
  4171  05B5  0822               	movf	(___llmod@divisor+2),w
  4172  05B6  0226               	subwf	(___llmod@dividend+2),w
  4173  05B7  1D03               	skipz
  4174  05B8  2DBF               	goto	u2875
  4175  05B9  0821               	movf	(___llmod@divisor+1),w
  4176  05BA  0225               	subwf	(___llmod@dividend+1),w
  4177  05BB  1D03               	skipz
  4178  05BC  2DBF               	goto	u2875
  4179  05BD  0820               	movf	(___llmod@divisor),w
  4180  05BE  0224               	subwf	(___llmod@dividend),w
  4181  05BF                     u2875:
  4182  05BF  1C03               	skipc
  4183  05C0  2DC2               	goto	u2871
  4184  05C1  2DC3               	goto	u2870
  4185  05C2                     u2871:
  4186  05C2  2DD2               	goto	l3174
  4187  05C3                     u2870:
  4188                           	line	16
  4189                           	
  4190  05C3                     l3172:	
  4191  05C3  0820               	movf	(___llmod@divisor),w
  4192  05C4  02A4               	subwf	(___llmod@dividend),f
  4193  05C5  0821               	movf	(___llmod@divisor+1),w
  4194  05C6  1C03               	skipc
  4195  05C7  0F21               	incfsz	(___llmod@divisor+1),w
  4196  05C8  02A5               	subwf	(___llmod@dividend+1),f
  4197  05C9  0822               	movf	(___llmod@divisor+2),w
  4198  05CA  1C03               	skipc
  4199  05CB  0F22               	incfsz	(___llmod@divisor+2),w
  4200  05CC  02A6               	subwf	(___llmod@dividend+2),f
  4201  05CD  0823               	movf	(___llmod@divisor+3),w
  4202  05CE  1C03               	skipc
  4203  05CF  0F23               	incfsz	(___llmod@divisor+3),w
  4204  05D0  02A7               	subwf	(___llmod@dividend+3),f
  4205  05D1  2DD2               	goto	l3174
  4206                           	
  4207  05D2                     l1476:	
  4208                           	line	17
  4209                           	
  4210  05D2                     l3174:	
  4211  05D2  3001               	movlw	01h
  4212  05D3                     u2885:
  4213  05D3  1003               	clrc
  4214  05D4  0CA3               	rrf	(___llmod@divisor+3),f
  4215  05D5  0CA2               	rrf	(___llmod@divisor+2),f
  4216  05D6  0CA1               	rrf	(___llmod@divisor+1),f
  4217  05D7  0CA0               	rrf	(___llmod@divisor),f
  4218  05D8  3EFF               	addlw	-1
  4219  05D9  1D03               	skipz
  4220  05DA  2DD3               	goto	u2885
  4221                           
  4222                           	line	18
  4223                           	
  4224  05DB                     l3176:	
  4225  05DB  3001               	movlw	low(01h)
  4226  05DC  02F5               	subwf	(___llmod@counter),f
  4227  05DD  1D03               	btfss	status,2
  4228  05DE  2DE0               	goto	u2891
  4229  05DF  2DE1               	goto	u2890
  4230  05E0                     u2891:
  4231  05E0  2DB1               	goto	l3170
  4232  05E1                     u2890:
  4233  05E1  2DE3               	goto	l3178
  4234                           	
  4235  05E2                     l1477:	
  4236  05E2  2DE3               	goto	l3178
  4237                           	line	19
  4238                           	
  4239  05E3                     l1471:	
  4240                           	line	20
  4241                           	
  4242  05E3                     l3178:	
  4243  05E3  0827               	movf	(___llmod@dividend+3),w
  4244  05E4  00A3               	movwf	(?___llmod+3)
  4245  05E5  0826               	movf	(___llmod@dividend+2),w
  4246  05E6  00A2               	movwf	(?___llmod+2)
  4247  05E7  0825               	movf	(___llmod@dividend+1),w
  4248  05E8  00A1               	movwf	(?___llmod+1)
  4249  05E9  0824               	movf	(___llmod@dividend),w
  4250  05EA  00A0               	movwf	(?___llmod)
  4251                           
  4252  05EB  2DEC               	goto	l1478
  4253                           	
  4254  05EC                     l3180:	
  4255                           	line	21
  4256                           	
  4257  05EC                     l1478:	
  4258  05EC  0008               	return
  4259                           	opt stack 0
  4260                           GLOBAL	__end_of___llmod
  4261  05ED                     	__end_of___llmod:
  4262 ;; =============== function ___llmod ends ============
  4263                           
  4264                           	signat	___llmod,8316
  4265                           	global	___lmul
  4266                           psect	text797,local,class=CODE,delta=2
  4267                           global __ptext797
  4268  0647                     __ptext797:
  4269                           
  4270 ;; *************** function ___lmul *****************
  4271 ;; Defined at:
  4272 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lmul.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;  multiplier      4    0[BANK0 ] unsigned long 
  4275 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  product         4    8[BANK0 ] unsigned long 
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  4    0[BANK0 ] unsigned long 
  4280 ;; Registers used:
  4281 ;;		wreg, status,2, status,0
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4287 ;;      Params:         0       8       0       0
  4288 ;;      Locals:         0       4       0       0
  4289 ;;      Temps:          1       0       0       0
  4290 ;;      Totals:         1      12       0       0
  4291 ;;Total ram usage:       13 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; Hardware stack levels required when called:    1
  4294 ;; This function calls:
  4295 ;;		Nothing
  4296 ;; This function is called by:
  4297 ;;		_doFrequency
  4298 ;;		_timersOFF
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           psect	text797
  4302                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lmul.c"
  4303                           	line	3
  4304                           	global	__size_of___lmul
  4305  004C                     	__size_of___lmul	equ	__end_of___lmul-___lmul
  4306                           	
  4307  0647                     ___lmul:	
  4308                           	opt	stack 5
  4309                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4310                           	line	4
  4311                           	
  4312  0647                     l3590:	
  4313  0647  3000               	movlw	0
  4314  0648  1283               	bcf	status, 5	;RP0=0, select bank0
  4315  0649  1303               	bcf	status, 6	;RP1=0, select bank0
  4316  064A  00AB               	movwf	(___lmul@product+3)
  4317  064B  3000               	movlw	0
  4318  064C  00AA               	movwf	(___lmul@product+2)
  4319  064D  3000               	movlw	0
  4320  064E  00A9               	movwf	(___lmul@product+1)
  4321  064F  3000               	movlw	0
  4322  0650  00A8               	movwf	(___lmul@product)
  4323                           
  4324  0651  2E52               	goto	l3592
  4325                           	line	6
  4326                           	
  4327  0652                     l1393:	
  4328                           	line	7
  4329                           	
  4330  0652                     l3592:	
  4331  0652  1C20               	btfss	(___lmul@multiplier),(0)&7
  4332  0653  2E55               	goto	u3491
  4333  0654  2E56               	goto	u3490
  4334  0655                     u3491:
  4335  0655  2E6E               	goto	l3596
  4336  0656                     u3490:
  4337                           	line	8
  4338                           	
  4339  0656                     l3594:	
  4340  0656  0824               	movf	(___lmul@multiplicand),w
  4341  0657  07A8               	addwf	(___lmul@product),f
  4342  0658  0825               	movf	(___lmul@multiplicand+1),w
  4343  0659  1103               	clrz
  4344  065A  1803               	skipnc
  4345  065B  3E01               	addlw	1
  4346  065C  1903               	skipnz
  4347  065D  2E5F               	goto	u3501
  4348  065E  07A9               	addwf	(___lmul@product+1),f
  4349  065F                     u3501:
  4350  065F  0826               	movf	(___lmul@multiplicand+2),w
  4351  0660  1103               	clrz
  4352  0661  1803               	skipnc
  4353  0662  3E01               	addlw	1
  4354  0663  1903               	skipnz
  4355  0664  2E66               	goto	u3502
  4356  0665  07AA               	addwf	(___lmul@product+2),f
  4357  0666                     u3502:
  4358  0666  0827               	movf	(___lmul@multiplicand+3),w
  4359  0667  1103               	clrz
  4360  0668  1803               	skipnc
  4361  0669  3E01               	addlw	1
  4362  066A  1903               	skipnz
  4363  066B  2E6D               	goto	u3503
  4364  066C  07AB               	addwf	(___lmul@product+3),f
  4365  066D                     u3503:
  4366                           
  4367  066D  2E6E               	goto	l3596
  4368                           	
  4369  066E                     l1394:	
  4370                           	line	9
  4371                           	
  4372  066E                     l3596:	
  4373  066E  3001               	movlw	01h
  4374  066F  00F4               	movwf	(??___lmul+0)+0
  4375  0670                     u3515:
  4376  0670  1003               	clrc
  4377  0671  0DA4               	rlf	(___lmul@multiplicand),f
  4378  0672  0DA5               	rlf	(___lmul@multiplicand+1),f
  4379  0673  0DA6               	rlf	(___lmul@multiplicand+2),f
  4380  0674  0DA7               	rlf	(___lmul@multiplicand+3),f
  4381  0675  0BF4               	decfsz	(??___lmul+0)+0
  4382  0676  2E70               	goto	u3515
  4383                           	line	10
  4384                           	
  4385  0677                     l3598:	
  4386  0677  3001               	movlw	01h
  4387  0678                     u3525:
  4388  0678  1003               	clrc
  4389  0679  0CA3               	rrf	(___lmul@multiplier+3),f
  4390  067A  0CA2               	rrf	(___lmul@multiplier+2),f
  4391  067B  0CA1               	rrf	(___lmul@multiplier+1),f
  4392  067C  0CA0               	rrf	(___lmul@multiplier),f
  4393  067D  3EFF               	addlw	-1
  4394  067E  1D03               	skipz
  4395  067F  2E78               	goto	u3525
  4396                           
  4397                           	line	11
  4398  0680  0823               	movf	(___lmul@multiplier+3),w
  4399  0681  0422               	iorwf	(___lmul@multiplier+2),w
  4400  0682  0421               	iorwf	(___lmul@multiplier+1),w
  4401  0683  0420               	iorwf	(___lmul@multiplier),w
  4402  0684  1D03               	skipz
  4403  0685  2E87               	goto	u3531
  4404  0686  2E88               	goto	u3530
  4405  0687                     u3531:
  4406  0687  2E52               	goto	l3592
  4407  0688                     u3530:
  4408  0688  2E89               	goto	l3600
  4409                           	
  4410  0689                     l1395:	
  4411                           	line	12
  4412                           	
  4413  0689                     l3600:	
  4414  0689  082B               	movf	(___lmul@product+3),w
  4415  068A  00A3               	movwf	(?___lmul+3)
  4416  068B  082A               	movf	(___lmul@product+2),w
  4417  068C  00A2               	movwf	(?___lmul+2)
  4418  068D  0829               	movf	(___lmul@product+1),w
  4419  068E  00A1               	movwf	(?___lmul+1)
  4420  068F  0828               	movf	(___lmul@product),w
  4421  0690  00A0               	movwf	(?___lmul)
  4422                           
  4423  0691  2E92               	goto	l1396
  4424                           	
  4425  0692                     l3602:	
  4426                           	line	13
  4427                           	
  4428  0692                     l1396:	
  4429  0692  0008               	return
  4430                           	opt stack 0
  4431                           GLOBAL	__end_of___lmul
  4432  0693                     	__end_of___lmul:
  4433 ;; =============== function ___lmul ends ============
  4434                           
  4435                           	signat	___lmul,8316
  4436                           	global	_doScale
  4437                           psect	text798,local,class=CODE,delta=2
  4438                           global __ptext798
  4439  02BA                     __ptext798:
  4440                           
  4441 ;; *************** function _doScale *****************
  4442 ;; Defined at:
  4443 ;;		line 270 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;		None
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;		None
  4448 ;; Return value:  Size  Location     Type
  4449 ;;		None               void
  4450 ;; Registers used:
  4451 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4457 ;;      Params:         0       0       0       0
  4458 ;;      Locals:         0       0       0       0
  4459 ;;      Temps:          0       4       0       0
  4460 ;;      Totals:         0       4       0       0
  4461 ;;Total ram usage:        4 bytes
  4462 ;; Hardware stack levels used:    2
  4463 ;; Hardware stack levels required when called:    1
  4464 ;; This function calls:
  4465 ;;		Nothing
  4466 ;; This function is called by:
  4467 ;;		_main
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           psect	text798
  4471                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  4472                           	line	270
  4473                           	global	__size_of_doScale
  4474  009E                     	__size_of_doScale	equ	__end_of_doScale-_doScale
  4475                           	
  4476  02BA                     _doScale:	
  4477                           	opt	stack 5
  4478                           ; Regs used in _doScale: [wreg-fsr0h+status,2+status,0+pclath]
  4479                           	line	272
  4480                           	
  4481  02BA                     l3548:	
  4482                           ;blink.c: 272: number = number >> (17);
  4483  02BA  1283               	bcf	status, 5	;RP0=0, select bank0
  4484  02BB  1303               	bcf	status, 6	;RP1=0, select bank0
  4485  02BC  0849               	movf	(_number),w
  4486  02BD  00A0               	movwf	(??_doScale+0)+0
  4487  02BE  084A               	movf	(_number+1),w
  4488  02BF  00A1               	movwf	((??_doScale+0)+0+1)
  4489  02C0  084B               	movf	(_number+2),w
  4490  02C1  00A2               	movwf	((??_doScale+0)+0+2)
  4491  02C2  084C               	movf	(_number+3),w
  4492  02C3  00A3               	movwf	((??_doScale+0)+0+3)
  4493  02C4  3011               	movlw	011h
  4494  02C5                     u3405:
  4495  02C5  1003               	clrc
  4496  02C6  0CA3               	rrf	(??_doScale+0)+3,f
  4497  02C7  0CA2               	rrf	(??_doScale+0)+2,f
  4498  02C8  0CA1               	rrf	(??_doScale+0)+1,f
  4499  02C9  0CA0               	rrf	(??_doScale+0)+0,f
  4500  02CA                     u3400:
  4501  02CA  3EFF               	addlw	-1
  4502  02CB  1D03               	skipz
  4503  02CC  2AC5               	goto	u3405
  4504  02CD  0823               	movf	3+(??_doScale+0)+0,w
  4505  02CE  00CC               	movwf	(_number+3)
  4506  02CF  0822               	movf	2+(??_doScale+0)+0,w
  4507  02D0  00CB               	movwf	(_number+2)
  4508  02D1  0821               	movf	1+(??_doScale+0)+0,w
  4509  02D2  00CA               	movwf	(_number+1)
  4510  02D3  0820               	movf	0+(??_doScale+0)+0,w
  4511  02D4  00C9               	movwf	(_number)
  4512                           
  4513                           	line	274
  4514                           	
  4515  02D5                     l3550:	
  4516                           ;blink.c: 274: TMR0cnt = 1;
  4517  02D5  3000               	movlw	0
  4518  02D6  00C4               	movwf	(_TMR0cnt+3)
  4519  02D7  3000               	movlw	0
  4520  02D8  00C3               	movwf	(_TMR0cnt+2)
  4521  02D9  3000               	movlw	0
  4522  02DA  00C2               	movwf	(_TMR0cnt+1)
  4523  02DB  3001               	movlw	01h
  4524  02DC  00C1               	movwf	(_TMR0cnt)
  4525                           
  4526                           	line	275
  4527                           	
  4528  02DD                     l3552:	
  4529                           ;blink.c: 275: for (preScaleSelect =0; preScaleSelect <= 7; preScaleSelect++)
  4530  02DD  01E2               	clrf	(_preScaleSelect)
  4531                           	
  4532  02DE                     l3554:	
  4533  02DE  3008               	movlw	(08h)
  4534  02DF  0262               	subwf	(_preScaleSelect),w
  4535  02E0  1C03               	skipc
  4536  02E1  2AE3               	goto	u3411
  4537  02E2  2AE4               	goto	u3410
  4538  02E3                     u3411:
  4539  02E3  2AE6               	goto	l3558
  4540  02E4                     u3410:
  4541  02E4  2B1E               	goto	l3566
  4542                           	
  4543  02E5                     l3556:	
  4544  02E5  2B1E               	goto	l3566
  4545                           	line	276
  4546                           	
  4547  02E6                     l443:	
  4548                           	line	277
  4549                           	
  4550  02E6                     l3558:	
  4551                           ;blink.c: 276: {
  4552                           ;blink.c: 277: if (TMR0cnt > number)
  4553  02E6  0844               	movf	(_TMR0cnt+3),w
  4554  02E7  024C               	subwf	(_number+3),w
  4555  02E8  1D03               	skipz
  4556  02E9  2AF4               	goto	u3425
  4557  02EA  0843               	movf	(_TMR0cnt+2),w
  4558  02EB  024B               	subwf	(_number+2),w
  4559  02EC  1D03               	skipz
  4560  02ED  2AF4               	goto	u3425
  4561  02EE  0842               	movf	(_TMR0cnt+1),w
  4562  02EF  024A               	subwf	(_number+1),w
  4563  02F0  1D03               	skipz
  4564  02F1  2AF4               	goto	u3425
  4565  02F2  0841               	movf	(_TMR0cnt),w
  4566  02F3  0249               	subwf	(_number),w
  4567  02F4                     u3425:
  4568  02F4  1803               	skipnc
  4569  02F5  2AF7               	goto	u3421
  4570  02F6  2AF8               	goto	u3420
  4571  02F7                     u3421:
  4572  02F7  2AFA               	goto	l3562
  4573  02F8                     u3420:
  4574  02F8  2B1E               	goto	l3566
  4575                           	line	279
  4576                           	
  4577  02F9                     l3560:	
  4578                           ;blink.c: 278: {
  4579                           ;blink.c: 279: break;
  4580  02F9  2B1E               	goto	l3566
  4581                           	line	280
  4582                           	
  4583  02FA                     l445:	
  4584                           	line	281
  4585                           	
  4586  02FA                     l3562:	
  4587                           ;blink.c: 280: }
  4588                           ;blink.c: 281: TMR0cnt = TMR0cnt << 1;
  4589  02FA  0841               	movf	(_TMR0cnt),w
  4590  02FB  00A0               	movwf	(??_doScale+0)+0
  4591  02FC  0842               	movf	(_TMR0cnt+1),w
  4592  02FD  00A1               	movwf	((??_doScale+0)+0+1)
  4593  02FE  0843               	movf	(_TMR0cnt+2),w
  4594  02FF  00A2               	movwf	((??_doScale+0)+0+2)
  4595  0300  0844               	movf	(_TMR0cnt+3),w
  4596  0301  00A3               	movwf	((??_doScale+0)+0+3)
  4597  0302  3001               	movlw	01h
  4598  0303                     u3435:
  4599  0303  1003               	clrc
  4600  0304  0DA0               	rlf	(??_doScale+0)+0,f
  4601  0305  0DA1               	rlf	(??_doScale+0)+1,f
  4602  0306  0DA2               	rlf	(??_doScale+0)+2,f
  4603  0307  0DA3               	rlf	(??_doScale+0)+3,f
  4604  0308                     u3430:
  4605  0308  3EFF               	addlw	-1
  4606  0309  1D03               	skipz
  4607  030A  2B03               	goto	u3435
  4608  030B  0823               	movf	3+(??_doScale+0)+0,w
  4609  030C  00C4               	movwf	(_TMR0cnt+3)
  4610  030D  0822               	movf	2+(??_doScale+0)+0,w
  4611  030E  00C3               	movwf	(_TMR0cnt+2)
  4612  030F  0821               	movf	1+(??_doScale+0)+0,w
  4613  0310  00C2               	movwf	(_TMR0cnt+1)
  4614  0311  0820               	movf	0+(??_doScale+0)+0,w
  4615  0312  00C1               	movwf	(_TMR0cnt)
  4616                           
  4617                           	line	275
  4618  0313  3001               	movlw	(01h)
  4619  0314  00A0               	movwf	(??_doScale+0)+0
  4620  0315  0820               	movf	(??_doScale+0)+0,w
  4621  0316  07E2               	addwf	(_preScaleSelect),f
  4622                           	
  4623  0317                     l3564:	
  4624  0317  3008               	movlw	(08h)
  4625  0318  0262               	subwf	(_preScaleSelect),w
  4626  0319  1C03               	skipc
  4627  031A  2B1C               	goto	u3441
  4628  031B  2B1D               	goto	u3440
  4629  031C                     u3441:
  4630  031C  2AE6               	goto	l3558
  4631  031D                     u3440:
  4632  031D  2B1E               	goto	l3566
  4633                           	
  4634  031E                     l444:	
  4635                           	line	283
  4636                           	
  4637  031E                     l3566:	
  4638                           ;blink.c: 282: }
  4639                           ;blink.c: 283: if (preScaleSelect>7)
  4640  031E  3008               	movlw	(08h)
  4641  031F  0262               	subwf	(_preScaleSelect),w
  4642  0320  1C03               	skipc
  4643  0321  2B23               	goto	u3451
  4644  0322  2B24               	goto	u3450
  4645  0323                     u3451:
  4646  0323  2B29               	goto	l3570
  4647  0324                     u3450:
  4648                           	line	285
  4649                           	
  4650  0324                     l3568:	
  4651                           ;blink.c: 284: {
  4652                           ;blink.c: 285: preScaleSelect=7;
  4653  0324  3007               	movlw	(07h)
  4654  0325  00A0               	movwf	(??_doScale+0)+0
  4655  0326  0820               	movf	(??_doScale+0)+0,w
  4656  0327  00E2               	movwf	(_preScaleSelect)
  4657  0328  2B29               	goto	l3570
  4658                           	line	286
  4659                           	
  4660  0329                     l446:	
  4661                           	line	288
  4662                           	
  4663  0329                     l3570:	
  4664                           ;blink.c: 286: }
  4665                           ;blink.c: 288: preScaleValue = (1 << prescaleInternalShift[preScaleSelect] << prescaleEx
                                 ternalShift[preScaleSelect]);
  4666  0329  0862               	movf	(_preScaleSelect),w
  4667  032A  3E18               	addlw	low((_prescaleExternalShift-__stringbase))
  4668  032B  0084               	movwf	fsr0
  4669  032C  220A               	fcall	stringdir
  4670  032D  00A0               	movwf	(??_doScale+0)+0
  4671  032E  0AA0               	incf	(??_doScale+0)+0,f
  4672  032F  0862               	movf	(_preScaleSelect),w
  4673  0330  3E71               	addlw	low((_prescaleInternalShift-__stringbase))
  4674  0331  0084               	movwf	fsr0
  4675  0332  220A               	fcall	stringdir
  4676  0333  00A1               	movwf	(??_doScale+1)+0
  4677  0334  0AA1               	incf	(??_doScale+1)+0,f
  4678  0335  3001               	movlw	low(01h)
  4679  0336  00A2               	movwf	(??_doScale+2)+0
  4680  0337  3000               	movlw	high(01h)
  4681  0338  00A3               	movwf	(??_doScale+2)+0+1
  4682  0339  2B3D               	goto	u3464
  4683  033A                     u3465:
  4684  033A  1003               	clrc
  4685  033B  0DA2               	rlf	(??_doScale+2)+0,f
  4686  033C  0DA3               	rlf	(??_doScale+2)+1,f
  4687  033D                     u3464:
  4688  033D  0BA1               	decfsz	(??_doScale+1)+0,f
  4689  033E  2B3A               	goto	u3465
  4690  033F  2B43               	goto	u3474
  4691  0340                     u3475:
  4692  0340  1003               	clrc
  4693  0341  0DA2               	rlf	(??_doScale+2)+0,f
  4694  0342  0DA3               	rlf	(??_doScale+2)+1,f
  4695  0343                     u3474:
  4696  0343  0BA0               	decfsz	(??_doScale+0)+0,f
  4697  0344  2B40               	goto	u3475
  4698  0345  0822               	movf	0+(??_doScale+2)+0,w
  4699  0346  00CD               	movwf	(_preScaleValue)
  4700  0347  0823               	movf	1+(??_doScale+2)+0,w
  4701  0348  00CE               	movwf	(_preScaleValue+1)
  4702  0349  3000               	movlw	0
  4703  034A  1BA3               	btfsc	1+(??_doScale+2)+0,7
  4704  034B  30FF               	movlw	255
  4705  034C  00CF               	movwf	(_preScaleValue+2)
  4706                           
  4707                           	line	289
  4708                           	
  4709  034D                     l3572:	
  4710                           ;blink.c: 289: calcScaleValue = preScaleSelect;
  4711  034D  0862               	movf	(_preScaleSelect),w
  4712  034E  00A0               	movwf	((??_doScale+0)+0)
  4713  034F  01A1               	clrf	((??_doScale+0)+0+1)
  4714  0350  01A2               	clrf	((??_doScale+0)+0+2)
  4715  0351  0820               	movf	0+(??_doScale+0)+0,w
  4716  0352  00F7               	movwf	(_calcScaleValue)
  4717  0353  0821               	movf	1+(??_doScale+0)+0,w
  4718  0354  00F8               	movwf	(_calcScaleValue+1)
  4719  0355  0822               	movf	2+(??_doScale+0)+0,w
  4720  0356  00F9               	movwf	(_calcScaleValue+2)
  4721                           	line	300
  4722                           	
  4723  0357                     l447:	
  4724  0357  0008               	return
  4725                           	opt stack 0
  4726                           GLOBAL	__end_of_doScale
  4727  0358                     	__end_of_doScale:
  4728 ;; =============== function _doScale ends ============
  4729                           
  4730                           	signat	_doScale,88
  4731                           	global	_initTimer1
  4732                           psect	text799,local,class=CODE,delta=2
  4733                           global __ptext799
  4734  07BE                     __ptext799:
  4735                           
  4736 ;; *************** function _initTimer1 *****************
  4737 ;; Defined at:
  4738 ;;		line 157 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;		None
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;		None
  4743 ;; Return value:  Size  Location     Type
  4744 ;;		None               void
  4745 ;; Registers used:
  4746 ;;		wreg
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4752 ;;      Params:         0       0       0       0
  4753 ;;      Locals:         0       0       0       0
  4754 ;;      Temps:          0       0       0       0
  4755 ;;      Totals:         0       0       0       0
  4756 ;;Total ram usage:        0 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    1
  4759 ;; This function calls:
  4760 ;;		Nothing
  4761 ;; This function is called by:
  4762 ;;		_timersON
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           psect	text799
  4766                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  4767                           	line	157
  4768                           	global	__size_of_initTimer1
  4769  000C                     	__size_of_initTimer1	equ	__end_of_initTimer1-_initTimer1
  4770                           	
  4771  07BE                     _initTimer1:	
  4772                           	opt	stack 5
  4773                           ; Regs used in _initTimer1: [wreg]
  4774                           	line	191
  4775                           	
  4776  07BE                     l3090:	
  4777                           ;blink.c: 191: T1CON = 0x31;
  4778  07BE  3031               	movlw	(031h)
  4779  07BF  1283               	bcf	status, 5	;RP0=0, select bank0
  4780  07C0  1303               	bcf	status, 6	;RP1=0, select bank0
  4781  07C1  0090               	movwf	(16)	;volatile
  4782                           	line	192
  4783                           	
  4784  07C2                     l3092:	
  4785                           ;blink.c: 192: TMR1IF = 0;
  4786  07C2  100C               	bcf	(96/8),(96)&7
  4787                           	line	199
  4788                           ;blink.c: 199: TMR1H = 0x09;
  4789  07C3  3009               	movlw	(09h)
  4790  07C4  008F               	movwf	(15)	;volatile
  4791                           	line	200
  4792                           ;blink.c: 200: TMR1L = 0xAC;
  4793  07C5  30AC               	movlw	(0ACh)
  4794  07C6  008E               	movwf	(14)	;volatile
  4795                           	line	206
  4796                           ;blink.c: 206: INTCON = 0xC0;
  4797  07C7  30C0               	movlw	(0C0h)
  4798  07C8  008B               	movwf	(11)	;volatile
  4799                           	line	207
  4800                           	
  4801  07C9                     l435:	
  4802  07C9  0008               	return
  4803                           	opt stack 0
  4804                           GLOBAL	__end_of_initTimer1
  4805  07CA                     	__end_of_initTimer1:
  4806 ;; =============== function _initTimer1 ends ============
  4807                           
  4808                           	signat	_initTimer1,88
  4809                           	global	_initTimer0
  4810                           psect	text800,local,class=CODE,delta=2
  4811                           global __ptext800
  4812  04C1                     __ptext800:
  4813                           
  4814 ;; *************** function _initTimer0 *****************
  4815 ;; Defined at:
  4816 ;;		line 116 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;		None
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;		None
  4821 ;; Return value:  Size  Location     Type
  4822 ;;		None               void
  4823 ;; Registers used:
  4824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4830 ;;      Params:         0       0       0       0
  4831 ;;      Locals:         0       0       0       0
  4832 ;;      Temps:          0       4       0       0
  4833 ;;      Totals:         0       4       0       0
  4834 ;;Total ram usage:        4 bytes
  4835 ;; Hardware stack levels used:    2
  4836 ;; Hardware stack levels required when called:    1
  4837 ;; This function calls:
  4838 ;;		Nothing
  4839 ;; This function is called by:
  4840 ;;		_timersON
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           psect	text800
  4844                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  4845                           	line	116
  4846                           	global	__size_of_initTimer0
  4847  0068                     	__size_of_initTimer0	equ	__end_of_initTimer0-_initTimer0
  4848                           	
  4849  04C1                     _initTimer0:	
  4850                           	opt	stack 4
  4851                           ; Regs used in _initTimer0: [wreg-fsr0h+status,2+status,0+pclath]
  4852                           	line	117
  4853                           	
  4854  04C1                     l3530:	
  4855                           ;blink.c: 117: INTCON = 0xA0;
  4856  04C1  30A0               	movlw	(0A0h)
  4857  04C2  008B               	movwf	(11)	;volatile
  4858                           	line	135
  4859                           ;blink.c: 135: OPTION_REG = 0b10100000;
  4860  04C3  30A0               	movlw	(0A0h)
  4861  04C4  1683               	bsf	status, 5	;RP0=1, select bank1
  4862  04C5  1303               	bcf	status, 6	;RP1=0, select bank1
  4863  04C6  0081               	movwf	(129)^080h	;volatile
  4864                           	line	136
  4865                           	
  4866  04C7                     l3532:	
  4867                           ;blink.c: 136: OPTION_REG |= prescaleInternalBits[preScaleSelect];
  4868  04C7  1283               	bcf	status, 5	;RP0=0, select bank0
  4869  04C8  1303               	bcf	status, 6	;RP1=0, select bank0
  4870  04C9  0862               	movf	(_preScaleSelect),w
  4871  04CA  3E23               	addlw	low((_prescaleInternalBits-__stringbase))
  4872  04CB  0084               	movwf	fsr0
  4873  04CC  220A               	fcall	stringdir
  4874  04CD  00A0               	movwf	(??_initTimer0+0)+0
  4875  04CE  0820               	movf	(??_initTimer0+0)+0,w
  4876  04CF  1683               	bsf	status, 5	;RP0=1, select bank1
  4877  04D0  1303               	bcf	status, 6	;RP1=0, select bank1
  4878  04D1  0481               	iorwf	(129)^080h,f	;volatile
  4879                           	line	138
  4880                           	
  4881  04D2                     l3534:	
  4882                           ;blink.c: 138: RB4 = !(!((prescaleExternalBits[preScaleSelect]) & (1 <<(0))));
  4883  04D2  1283               	bcf	status, 5	;RP0=0, select bank0
  4884  04D3  1303               	bcf	status, 6	;RP1=0, select bank0
  4885  04D4  0862               	movf	(_preScaleSelect),w
  4886  04D5  3E0D               	addlw	low((_prescaleExternalBits-__stringbase))
  4887  04D6  0084               	movwf	fsr0
  4888  04D7  220A               	fcall	stringdir
  4889  04D8  3901               	andlw	01h
  4890  04D9  1D03               	btfss	status,2
  4891  04DA  2CDC               	goto	u3341
  4892  04DB  2CE0               	goto	u3340
  4893                           	
  4894  04DC                     u3341:
  4895  04DC  1283               	bcf	status, 5	;RP0=0, select bank0
  4896  04DD  1303               	bcf	status, 6	;RP1=0, select bank0
  4897  04DE  1606               	bsf	(52/8),(52)&7
  4898  04DF  2CE3               	goto	u3354
  4899  04E0                     u3340:
  4900  04E0  1283               	bcf	status, 5	;RP0=0, select bank0
  4901  04E1  1303               	bcf	status, 6	;RP1=0, select bank0
  4902  04E2  1206               	bcf	(52/8),(52)&7
  4903  04E3                     u3354:
  4904                           	line	139
  4905                           	
  4906  04E3                     l3536:	
  4907                           ;blink.c: 139: RB5 = !(!((prescaleExternalBits[preScaleSelect]) & (1 <<(1))));
  4908  04E3  0862               	movf	(_preScaleSelect),w
  4909  04E4  3E0D               	addlw	low((_prescaleExternalBits-__stringbase))
  4910  04E5  0084               	movwf	fsr0
  4911  04E6  220A               	fcall	stringdir
  4912  04E7  3902               	andlw	02h
  4913  04E8  1D03               	btfss	status,2
  4914  04E9  2CEB               	goto	u3361
  4915  04EA  2CEF               	goto	u3360
  4916                           	
  4917  04EB                     u3361:
  4918  04EB  1283               	bcf	status, 5	;RP0=0, select bank0
  4919  04EC  1303               	bcf	status, 6	;RP1=0, select bank0
  4920  04ED  1686               	bsf	(53/8),(53)&7
  4921  04EE  2CF2               	goto	u3374
  4922  04EF                     u3360:
  4923  04EF  1283               	bcf	status, 5	;RP0=0, select bank0
  4924  04F0  1303               	bcf	status, 6	;RP1=0, select bank0
  4925  04F1  1286               	bcf	(53/8),(53)&7
  4926  04F2                     u3374:
  4927                           	line	142
  4928                           	
  4929  04F2                     l3538:	
  4930                           ;blink.c: 142: preScaleValue = (1 << prescaleInternalShift[preScaleSelect] << prescaleEx
                                 ternalShift[preScaleSelect]);
  4931  04F2  0862               	movf	(_preScaleSelect),w
  4932  04F3  3E18               	addlw	low((_prescaleExternalShift-__stringbase))
  4933  04F4  0084               	movwf	fsr0
  4934  04F5  220A               	fcall	stringdir
  4935  04F6  00A0               	movwf	(??_initTimer0+0)+0
  4936  04F7  0AA0               	incf	(??_initTimer0+0)+0,f
  4937  04F8  0862               	movf	(_preScaleSelect),w
  4938  04F9  3E71               	addlw	low((_prescaleInternalShift-__stringbase))
  4939  04FA  0084               	movwf	fsr0
  4940  04FB  220A               	fcall	stringdir
  4941  04FC  00A1               	movwf	(??_initTimer0+1)+0
  4942  04FD  0AA1               	incf	(??_initTimer0+1)+0,f
  4943  04FE  3001               	movlw	low(01h)
  4944  04FF  00A2               	movwf	(??_initTimer0+2)+0
  4945  0500  3000               	movlw	high(01h)
  4946  0501  00A3               	movwf	(??_initTimer0+2)+0+1
  4947  0502  2D06               	goto	u3384
  4948  0503                     u3385:
  4949  0503  1003               	clrc
  4950  0504  0DA2               	rlf	(??_initTimer0+2)+0,f
  4951  0505  0DA3               	rlf	(??_initTimer0+2)+1,f
  4952  0506                     u3384:
  4953  0506  0BA1               	decfsz	(??_initTimer0+1)+0,f
  4954  0507  2D03               	goto	u3385
  4955  0508  2D0C               	goto	u3394
  4956  0509                     u3395:
  4957  0509  1003               	clrc
  4958  050A  0DA2               	rlf	(??_initTimer0+2)+0,f
  4959  050B  0DA3               	rlf	(??_initTimer0+2)+1,f
  4960  050C                     u3394:
  4961  050C  0BA0               	decfsz	(??_initTimer0+0)+0,f
  4962  050D  2D09               	goto	u3395
  4963  050E  0822               	movf	0+(??_initTimer0+2)+0,w
  4964  050F  00CD               	movwf	(_preScaleValue)
  4965  0510  0823               	movf	1+(??_initTimer0+2)+0,w
  4966  0511  00CE               	movwf	(_preScaleValue+1)
  4967  0512  3000               	movlw	0
  4968  0513  1BA3               	btfsc	1+(??_initTimer0+2)+0,7
  4969  0514  30FF               	movlw	255
  4970  0515  00CF               	movwf	(_preScaleValue+2)
  4971                           
  4972                           	line	144
  4973                           	
  4974  0516                     l3540:	
  4975                           ;blink.c: 144: TMR0 = 0;
  4976  0516  0181               	clrf	(1)	;volatile
  4977                           	line	145
  4978                           	
  4979  0517                     l3542:	
  4980                           ;blink.c: 145: TMR0cnt = 0;
  4981  0517  3000               	movlw	0
  4982  0518  00C4               	movwf	(_TMR0cnt+3)
  4983  0519  3000               	movlw	0
  4984  051A  00C3               	movwf	(_TMR0cnt+2)
  4985  051B  3000               	movlw	0
  4986  051C  00C2               	movwf	(_TMR0cnt+1)
  4987  051D  3000               	movlw	0
  4988  051E  00C1               	movwf	(_TMR0cnt)
  4989                           
  4990                           	line	146
  4991                           	
  4992  051F                     l3544:	
  4993                           ;blink.c: 146: number = 0;
  4994  051F  3000               	movlw	0
  4995  0520  00CC               	movwf	(_number+3)
  4996  0521  3000               	movlw	0
  4997  0522  00CB               	movwf	(_number+2)
  4998  0523  3000               	movlw	0
  4999  0524  00CA               	movwf	(_number+1)
  5000  0525  3000               	movlw	0
  5001  0526  00C9               	movwf	(_number)
  5002                           
  5003                           	line	151
  5004                           	
  5005  0527                     l3546:	
  5006                           ;blink.c: 151: GIE = 1;
  5007  0527  178B               	bsf	(95/8),(95)&7
  5008                           	line	152
  5009                           	
  5010  0528                     l432:	
  5011  0528  0008               	return
  5012                           	opt stack 0
  5013                           GLOBAL	__end_of_initTimer0
  5014  0529                     	__end_of_initTimer0:
  5015 ;; =============== function _initTimer0 ends ============
  5016                           
  5017                           	signat	_initTimer0,88
  5018                           	global	_init
  5019                           psect	text801,local,class=CODE,delta=2
  5020                           global __ptext801
  5021  07CA                     __ptext801:
  5022                           
  5023 ;; *************** function _init *****************
  5024 ;; Defined at:
  5025 ;;		line 94 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;		None
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;		None
  5030 ;; Return value:  Size  Location     Type
  5031 ;;		None               void
  5032 ;; Registers used:
  5033 ;;		wreg, status,2
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5039 ;;      Params:         0       0       0       0
  5040 ;;      Locals:         0       0       0       0
  5041 ;;      Temps:          0       0       0       0
  5042 ;;      Totals:         0       0       0       0
  5043 ;;Total ram usage:        0 bytes
  5044 ;; Hardware stack levels used:    1
  5045 ;; Hardware stack levels required when called:    1
  5046 ;; This function calls:
  5047 ;;		Nothing
  5048 ;; This function is called by:
  5049 ;;		_main
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           psect	text801
  5053                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  5054                           	line	94
  5055                           	global	__size_of_init
  5056  000A                     	__size_of_init	equ	__end_of_init-_init
  5057                           	
  5058  07CA                     _init:	
  5059                           	opt	stack 6
  5060                           ; Regs used in _init: [wreg+status,2]
  5061                           	line	101
  5062                           	
  5063  07CA                     l3068:	
  5064                           ;blink.c: 101: CMCON = 0b00000111;
  5065  07CA  3007               	movlw	(07h)
  5066  07CB  1283               	bcf	status, 5	;RP0=0, select bank0
  5067  07CC  1303               	bcf	status, 6	;RP1=0, select bank0
  5068  07CD  009F               	movwf	(31)	;volatile
  5069                           	line	106
  5070                           ;blink.c: 106: TRISA = 0x10;
  5071  07CE  3010               	movlw	(010h)
  5072  07CF  1683               	bsf	status, 5	;RP0=1, select bank1
  5073  07D0  1303               	bcf	status, 6	;RP1=0, select bank1
  5074  07D1  0085               	movwf	(133)^080h	;volatile
  5075                           	line	107
  5076                           	
  5077  07D2                     l3070:	
  5078                           ;blink.c: 107: TRISB = 0x00;
  5079  07D2  0186               	clrf	(134)^080h	;volatile
  5080                           	line	112
  5081                           	
  5082  07D3                     l429:	
  5083  07D3  0008               	return
  5084                           	opt stack 0
  5085                           GLOBAL	__end_of_init
  5086  07D4                     	__end_of_init:
  5087 ;; =============== function _init ends ============
  5088                           
  5089                           	signat	_init,88
  5090                           	global	_ISR
  5091                           psect	text802,local,class=CODE,delta=2
  5092                           global __ptext802
  5093  0718                     __ptext802:
  5094                           
  5095 ;; *************** function _ISR *****************
  5096 ;; Defined at:
  5097 ;;		line 210 in file "C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;		None
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;		None
  5102 ;; Return value:  Size  Location     Type
  5103 ;;		None               void
  5104 ;; Registers used:
  5105 ;;		wreg
  5106 ;; Tracked objects:
  5107 ;;		On entry : 0/0
  5108 ;;		On exit  : 0/0
  5109 ;;		Unchanged: 0/0
  5110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5111 ;;      Params:         0       0       0       0
  5112 ;;      Locals:         0       0       0       0
  5113 ;;      Temps:          4       0       0       0
  5114 ;;      Totals:         4       0       0       0
  5115 ;;Total ram usage:        4 bytes
  5116 ;; Hardware stack levels used:    1
  5117 ;; This function calls:
  5118 ;;		Nothing
  5119 ;; This function is called by:
  5120 ;;		Interrupt level 1
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           psect	text802
  5124                           	file	"C:\Users\davidq\Downloads\Program1 blink\Program1\blink.c"
  5125                           	line	210
  5126                           	global	__size_of_ISR
  5127  002F                     	__size_of_ISR	equ	__end_of_ISR-_ISR
  5128                           	
  5129  0718                     _ISR:	
  5130                           	opt	stack 3
  5131                           ; Regs used in _ISR: [wreg]
  5132                           psect	intentry,class=CODE,delta=2
  5133                           global __pintentry
  5134  0004                     __pintentry:
  5135                           global interrupt_function
  5136  0004                     interrupt_function:
  5137                           	global saved_w
  5138  007E                     	saved_w	set	btemp+0
  5139  0004  00FE               	movwf	saved_w
  5140  0005  0E03               	swapf	status,w
  5141  0006  00F0               	movwf	(??_ISR+0)
  5142  0007  0804               	movf	fsr0,w
  5143  0008  00F1               	movwf	(??_ISR+1)
  5144  0009  080A               	movf	pclath,w
  5145  000A  00F2               	movwf	(??_ISR+2)
  5146  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  5147  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  5148  000D  087F               	movf	btemp+1,w
  5149  000E  00F3               	movwf	(??_ISR+3)
  5150  000F  2F18               	ljmp	_ISR
  5151                           psect	text802
  5152                           	line	215
  5153                           	
  5154  0718                     i1l3094:	
  5155                           ;blink.c: 215: if (TMR0IF)
  5156  0718  1D0B               	btfss	(90/8),(90)&7
  5157  0719  2F1B               	goto	u268_21
  5158  071A  2F1C               	goto	u268_20
  5159  071B                     u268_21:
  5160  071B  2F2C               	goto	i1l3100
  5161  071C                     u268_20:
  5162                           	line	217
  5163                           	
  5164  071C                     i1l3096:	
  5165                           ;blink.c: 216: {
  5166                           ;blink.c: 217: TMR0IF = 0;
  5167  071C  110B               	bcf	(90/8),(90)&7
  5168                           	line	229
  5169                           	
  5170  071D                     i1l3098:	
  5171                           ;blink.c: 229: TMR0cnt++;
  5172  071D  3001               	movlw	01h
  5173  071E  07C1               	addwf	(_TMR0cnt),f
  5174  071F  3000               	movlw	0
  5175  0720  1803               	skipnc
  5176  0721  3001               movlw 1
  5177  0722  07C2               	addwf	(_TMR0cnt+1),f
  5178  0723  3000               	movlw	0
  5179  0724  1803               	skipnc
  5180  0725  3001               movlw 1
  5181  0726  07C3               	addwf	(_TMR0cnt+2),f
  5182  0727  3000               	movlw	0
  5183  0728  1803               	skipnc
  5184  0729  3001               movlw 1
  5185  072A  07C4               	addwf	(_TMR0cnt+3),f
  5186  072B  2F2C               	goto	i1l3100
  5187                           	line	231
  5188                           	
  5189  072C                     i1l438:	
  5190                           	line	237
  5191                           	
  5192  072C                     i1l3100:	
  5193                           ;blink.c: 231: }
  5194                           ;blink.c: 237: if (TMR1IF)
  5195  072C  1C0C               	btfss	(96/8),(96)&7
  5196  072D  2F2F               	goto	u269_21
  5197  072E  2F30               	goto	u269_20
  5198  072F                     u269_21:
  5199  072F  2F3C               	goto	i1l440
  5200  0730                     u269_20:
  5201                           	line	253
  5202                           	
  5203  0730                     i1l3102:	
  5204                           ;blink.c: 238: {
  5205                           ;blink.c: 253: TMR1H = 0x0B;
  5206  0730  300B               	movlw	(0Bh)
  5207  0731  008F               	movwf	(15)	;volatile
  5208                           	line	254
  5209                           ;blink.c: 254: TMR1L = 0xDC;
  5210  0732  30DC               	movlw	(0DCh)
  5211  0733  008E               	movwf	(14)	;volatile
  5212                           	line	256
  5213                           	
  5214  0734                     i1l3104:	
  5215                           ;blink.c: 256: TMR1IF = 0;
  5216  0734  100C               	bcf	(96/8),(96)&7
  5217                           	line	258
  5218                           ;blink.c: 258: TMR1cnt++;
  5219  0735  3001               	movlw	low(01h)
  5220  0736  07D0               	addwf	(_TMR1cnt),f
  5221  0737  1803               	skipnc
  5222  0738  0AD1               	incf	(_TMR1cnt+1),f
  5223  0739  3000               	movlw	high(01h)
  5224  073A  07D1               	addwf	(_TMR1cnt+1),f
  5225  073B  2F3C               	goto	i1l440
  5226                           	line	259
  5227                           	
  5228  073C                     i1l439:	
  5229                           	line	260
  5230                           	
  5231  073C                     i1l440:	
  5232  073C  0873               	movf	(??_ISR+3),w
  5233  073D  00FF               	movwf	btemp+1
  5234  073E  0872               	movf	(??_ISR+2),w
  5235  073F  008A               	movwf	pclath
  5236  0740  0871               	movf	(??_ISR+1),w
  5237  0741  0084               	movwf	fsr0
  5238  0742  0E70               	swapf	(??_ISR+0)^0FFFFFF80h,w
  5239  0743  0083               	movwf	status
  5240  0744  0EFE               	swapf	saved_w,f
  5241  0745  0E7E               	swapf	saved_w,w
  5242  0746  0009               	retfie
  5243                           	opt stack 0
  5244                           GLOBAL	__end_of_ISR
  5245  0747                     	__end_of_ISR:
  5246 ;; =============== function _ISR ends ============
  5247                           
  5248                           	signat	_ISR,88
  5249                           psect	text803,local,class=CODE,delta=2
  5250                           global __ptext803
  5251  0000                     __ptext803:
  5252                           	global	btemp
  5253  007E                     	btemp set 07Eh
  5254                           
  5255                           	DABS	1,126,2	;btemp
  5256                           	global	wtemp0
  5257  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Sun Sep 20 17:40:42 2015

                     pc 0002                      _RD 04E0                      _HZ 0210                      _WR 04E1  
                    fsr 0004           ?_lcd_putdigit 0070                     l432 0528                     l450 013E  
                   l435 07C9                     l443 02E6                     l451 0146                     l444 031E  
                   l452 015B                     l429 07D3                     l445 02FA                     l461 058E  
                   l453 0195                     l446 0329                     l454 016F                     l470 0645  
                   l447 0357                     l455 01FE                     l471 0646                     l472 0646  
                   l464 0610                     l465 0612                     l458 07AC                     l466 0611  
                   l467 0622                     l468 0639                     l469 0643                     l863 06D9  
                   l872 077D                     l881 07EB                     l873 076E                     l866 0769  
                   l874 0788                     l890 010A                     l875 0788                     l891 00A9  
                   l884 07E3                     l869 07BD                     l893 0071                     l894 00A8  
                   l895 00D9                     l896 00D1                     l897 011F                     l889 0033  
                   _GIE 005F                     _RA0 0028                     _RA1 0029                     _RA3 002B  
                   _RB4 0034                     _RB5 0035                     _RB7 0037                     _ISR 0718  
                   _sig 0054                     fsr0 0004                     indf 0000  lcd_putnumber@displayHZ 0033  
          ___awmod@sign 0076             lcd_goto@pos 0020                    ?_ISR 0070                    l1304 0364  
                  l1305 038D                    l1306 0394                    l1307 03D2                    l1308 03E8  
                  l1309 03E8                    l1530 047D                    l1531 048E                    l1532 048F  
                  l1533 04A0                    l3070 07D2                    l1534 04AE                    l1526 0469  
                  l1471 05E3                    l1535 04B9                    l1527 0473                    l1472 05AB  
                  l1536 04C0                    l1528 04AF                    l1393 0652                    l1473 059D  
                  l1529 0489                    l3090 07BE                    l1394 066E                    l1474 05B0  
                  l3170 05B1                    l3162 058F                    l1490 044F                    l1395 0689  
                  l1475 05B1                    l1491 040D                    l3068 07CA                    l3092 07C2  
                  l1396 0692                    l3180 05EC                    l1476 05D2                    l3172 05C3  
                  l3164 0599                    l1492 03FF                    l1644 06E1                    l1477 05E2  
                  l1493 0412                    l1645 06F8                    l1478 05EC                    l3174 05D2  
                  l3166 059D                    l1494 0413                    l1646 0710                    l1495 043E  
                  l1647 0717                    l3600 0689                    l3176 05DB                    l3168 05AB  
                  l1496 044E                    l1497 0458                    l3530 04C1                    l3602 0692  
                  l3178 05E3                    l3610 040D                    l3540 0516                    l3532 04C7  
                  l3620 043E                    l3612 0413                    l3604 03E9                    l3700 03DF  
                  l3542 0517                    l3534 04D2                    l3550 02D5                    l3622 0447  
                  l3614 041C                    l3606 03FB                    l3630 0460                    l3710 07A4  
                  l3702 079B                    l3544 051F                    l3536 04E3                    l3560 02F9  
                  l3552 02DD                    l3616 042E                    l3608 03FF                    l3624 044F  
                  l3640 047D                    l3632 0469                    l3712 07A8                    l3704 079E  
                  l3720 052D                    l3800 00D9                    l3546 0527                    l3538 04F2  
                  l3570 0329                    l3562 02FA                    l3554 02DE                    l3626 0458  
                  l3618 043C                    l3650 04A0                    l3642 0484                    l3634 046D  
                  l3714 07AB                    l3706 07A2                    l3722 052E                    l3730 074D  
                  l3810 0118                    l3802 00F6                    l3572 034D                    l3564 0317  
                  l3556 02E5                    l3548 02BA                    l3660 04C0                    l3652 04A7  
                  l3644 0489                    l3636 0473                    l3628 0459                    l3708 07A3  
                  l3724 0531                    l3716 0529                    l3740 0768                    l3732 075E  
                  l3804 00FC                    l3820 06AA                    l3812 0693                    l3900 05ED  
                  l3566 031E                    l3558 02E6                    l3590 0647                    l3646 048F  
                  l3638 0479                    l3654 04AF                    l3670 0700                    l3662 06DA  
                  l3726 0585                    l3718 052C                    l3734 075F                    l3742 07E7  
                  l3750 0774                    l3806 010A                    l3830 06BF                    l3822 06AB  
                  l3814 0696                    l3910 0600                    l3902 05EF                    l3568 0324  
                  l3592 0652                    l3656 04B3                    l3648 0499                    l3672 0710  
                  l3664 06E1                    l3680 0380                    l3736 0760                    l3728 0748  
                  l3744 07E8                    l3752 077D                    l3760 07DF                    l3808 0113  
                  l3840 06D2                    l3832 06C2                    l3824 06B4                    l3816 06A3  
                  l3920 062F                    l3912 060E                    l3904 05F0                    l3594 0656  
                  l3658 04B9                    l3674 0717                    l3666 06E7                    l3690 03AC  
                  l3682 0384                    l3738 0767                    l3746 076A                    l3754 07AD  
                  l3762 07E0                    l3770 0022                    l3842 06D4                    l3834 06C3  
                  l3826 06B7                    l3818 06A9                    l3850 0128                    l3922 0630  
                  l3914 0612                    l3906 05F7                    l3596 066E                    l3668 06F8  
                  l3692 03C8                    l3684 038D                    l3676 035B                    l3748 076E  
                  l3756 07B0                    l3780 006C                    l3772 0024                    l3764 0011  
                  l3844 06D6                    l3836 06D0                    l3828 06B8                    l3860 0148  
                  l3852 012A                    l3924 0639                    l3916 0622                    l3908 05F9  
                  l3598 0677                    l3694 03CE                    l3686 0391                    l3678 0364  
                  l3758 07B2                    l3790 009C                    l3782 0071                    l3774 0032  
                  l3766 0019                    l3846 06D7                    l3838 06D1                    l3870 016E  
                  l3862 0152                    l3854 0134                    l3926 063A                    l3918 0623  
                  l3696 03D6                    l3688 0394                    l3792 00A1                    l3784 0073  
                  l3776 0033                    l3768 0021                    l3880 019A                    l3872 016F  
                  l3864 0153                    l3856 013E                    l3848 0120                    l3928 0643  
                  l3698 03DD                    l3786 0079                    l3794 00A9                    l3778 0067  
                  l3890 01B9                    l3882 01A0                    l3874 018A                    l3866 015A  
                  l3858 0146                    l3796 00C5                    l3788 0095                    l3892 01C8  
                  l3884 01A4                    l3876 018E                    l3868 015B                    l3798 00CC  
                  l3894 01CF                    l3886 01AB                    l3878 0195                    l3896 01D5  
                  l3888 01B2                    l3898 01F9                    STR_1 02AF                    STR_2 02B2  
                  STR_3 02AC                    STR_4 02B5                    STR_5 02A0                    STR_6 02A9  
                  STR_7 02A6                    STR_8 02A3                    STR_9 029D                    _T0IE 005D  
                  _FREQ 023D                    u4007 06AF                    u3400 02CA                    u4017 06BA  
                  u3410 02E4                    u3411 02E3                    u4027 06C5                    u3340 04E0  
                  u3420 02F8                    u3341 04DC                    u3421 02F7                    u3405 02C5  
                  u3501 065F                    u4037 07B8                    u3430 0308                    u3502 0666  
                  u3503 066D                    u4047 074A                    u3360 04EF                    u3440 031D  
                  u3600 044D                    u3361 04EB                    u3441 031C                    u3425 02F4  
                  u3601 044C                    u4057 0589                    u3354 04E3                    u3450 0324  
                  u3530 0688                    u3610 0460                    u3451 0323                    u3435 0303  
                  u3531 0687                    u3515 0670                    u3611 045F                    u3540 03FB  
                  u3620 046D                    u3700 06E7                    u3525 0678                    u3541 03FA  
                  u3621 046C                    u3701 06E6                    u3374 04F2                    u3630 0479  
                  u3631 0478                    u3711 06F0                    u3384 0506                    u3464 033D  
                  u2840 0599                    u3560 0411                    u3712 06F7                    u3385 0503  
                  u3465 033A                    u2841 0598                    u3561 0410                    u3394 050C  
                  u3474 0343                    u3490 0656                    u3650 048D                    u3810 0787  
                  u3395 0509                    u3475 0340                    u3491 0655                    u3555 0401  
                  u3651 048C                    u3811 0786                    u2860 05AF                    u3580 042E  
                  u3660 0499                    u3740 070F                    u3820 0031                    u3900 0134  
                  u2861 05AE                    u3581 042D                    u3661 0498                    u3645 047E  
                  u3741 070E                    u3725 06F9                    u3805 0755                    u3821 0030  
                  u3901 0133                    u2870 05C3                    u3750 038C                    u3830 006C  
                  u3910 0159                    u2871 05C2                    u2855 059F                    u3575 0415  
                  u3735 0701                    u3751 038B                    u3831 006B                    u3911 0158  
                  u3680 04AD                    u3760 03CE                    u3840 0070                    u3920 016D  
                  u3585 042A                    u3681 04AC                    u3665 0495                    u3761 03CD  
                  u3825 002D                    u3921 016C                    u2890 05E1                    u3690 04B3  
                  u3770 03E7                    u3850 0095                    u3930 0194                    u2891 05E0  
                  u2875 05BF                    u3595 043F                    u3675 04A1                    u3771 03E6  
                  u3851 0094                    u3931 0193                    u3780 0556                    u3860 009C  
                  u2885 05D3                    u3861 009B                    u3925 0169                    u3790 0572  
                  u3870 00C5                    u3791 0573                    u3871 00C4                    u3792 0578  
                  u3880 00CC                    u3944 01E9                    u3960 0621                    u3793 0579  
                  u3785 0552                    u3881 00CB                    u3945 01E6                    u3961 0620  
                  u3890 0109                    u3954 01EF                    u3970 062F                    u3891 0108  
                  u3955 01EC                    u3971 062E                    u3965 061D                    u3895 0105  
                  u3987 0608                    u3997 069C                    _TMR0 0001                    _WREN 04E2  
        ?_lcd_putnumber 002D                    _band 0052                    _main 05ED                    _init 07CA  
                  btemp 007E                    start 0010                   ??_ISR 0070          ??_lcd_putdigit 0077  
                 ?_main 0070    __size_of_doFrequency 00DF                   ?_init 0070                   _EEADR 009B  
                 STR_10 028B                   STR_11 02B8                   STR_12 0296                   STR_13 0292  
                 STR_14 0294                   STR_15 0294                   STR_16 029A         __end_of___awmod 04C1  
                 _CARRY 0018                   _CMCON 001F         __end_of___lldiv 0459                   _T1CON 0010  
       __end_of___llmod 05ED                   i1l440 073C                   i1l438 072C                   i1l439 073C  
                 _SCALE 023E                   _TMR1H 000F                   _TMR1L 000E                   _PORTB 0006  
                 _TRISA 0085                   _TRISB 0086         __end_of_doScale 0358     ___lmul@multiplicand 0024  
                 _bands 0261                   _divBy 0045                   _digit 0053                   _ultoa 0358  
                 pclath 000A                   status 0003                   wtemp0 007E          _preScaleSelect 0062  
          __end_of_main 0647            __end_of_init 07D4                  ??_main 003E                  ??_init 0074  
      ___llmod@dividend 0024                  _EEDATA 009A                  _EECON1 009C                  _EECON2 009D  
       ??_lcd_putnumber 0031                  ?_ultoa 002D                  i1l3100 072C                  i1l3102 0730  
                i1l3104 0734                  i1l3094 0718                  i1l3096 071C                  i1l3098 071D  
                _INTCON 000B                  u268_20 071C                  u268_21 071B                  u269_20 0730  
                u269_21 072F                  _TMR0IF 005A                  _TMR1IE 0460                  _TMR1IF 0060  
      __end_of_lcd_init 06DA        __end_of_lcd_goto 07EC        __end_of_lcd_puts 0789                  ___lmul 0647  
                ___tmul 06DA               ??___awmod 0074               ??___lldiv 0074               ??___llmod 0074  
                _buffer 0055               ??_doScale 0020         ___awmod@divisor 0020                  _qbytes 0271  
                _number 0049         ___awmod@counter 0075                  clrloop 07D5           lcd_putdigit@c 0020  
                saved_w 007E        __end_of_timersON 07AD                  ultoa@c 0037                  ultoa@v 0033  
  __end_of_lcd_putdigit 07E4          __pcstackCOMMON 0070            __pidataBANK0 07EC           __end_of_ultoa 03E9  
    __size_of_lcd_clear 0011      __size_of_lcd_write 0023                 ??_ultoa 0076              __pbssBANK0 0041  
            __pmaintext 05ED                 ?___lmul 0020                 ?___tmul 0020              __pintentry 0004  
        ___lmul@product 0028      __size_of_timersOFF 0066                 _TMR0cnt 0041                 _TMR1cnt 0050  
             ?_lcd_init 0070               ?_lcd_goto 0070               ?_lcd_puts 0020       __end_of_lcd_clear 07BE  
             ?_timersON 0070              _initTimer0 04C1              _initTimer1 07BE         __size_of___lmul 004C  
               ___awmod 0459       __end_of_lcd_write 076A         __size_of___tmul 003E           ??_doFrequency 0039  
               ___lldiv 03E9                 ___llmod 058F                 _doScale 02BA    _prescaleInternalBits 0232  
          __size_of_ISR 002F        ___awmod@dividend 0022                 _noinput 023F                 _version 0250  
 __size_of_lcd_putdigit 0008              ??_lcd_init 0022              ??_lcd_goto 0077              ??_lcd_puts 0077  
  end_of_initialization 0799    _prescaleExternalBits 021C         ___lldiv@divisor 0020       __end_of_timersOFF 058F  
       ___lldiv@counter 002C              ??_timersON 0074            _lcd_putdigit 07DC     __end_of_doFrequency 01FF  
     doFrequency@pBands 003D   __end_of_lcd_putnumber 0120              lcd_write@c 0076             ?_initTimer0 0070  
           ?_initTimer1 0070          __end_of___lmul 0693          __end_of___tmul 0718           _preScaleValue 004D  
   start_initialization 0789             __end_of_ISR 0747          _calcScaleValue 0077         ___llmod@divisor 0020  
       ___llmod@counter 0075                ??___lmul 0074                ??___tmul 0074             __pdataBANK0 005F  
           _doFrequency 0120          ___tmul@product 0074             __pbssCOMMON 0077           __pcstackBANK0 0020  
   lcd_putnumber@number 002D     __size_of_initTimer0 0068     __size_of_initTimer1 000C       __size_of_lcd_init 0047  
     __size_of_lcd_goto 0008       __size_of_lcd_puts 001F                ?___awmod 0020               __ptext800 04C1  
             __ptext801 07CA               __ptext802 0718               __ptext803 0000               __ptext790 0529  
             __ptext782 0120               __ptext791 079B               __ptext783 0693               __ptext792 0358  
             __ptext784 0011               __ptext793 06DA               __ptext785 07DC               __ptext794 0459  
             __ptext786 07AD               __ptext795 03E9               __ptext787 076A               __ptext796 058F  
             __ptext788 07E4               __ptext797 0647               __ptext789 0747               __ptext798 02BA  
             __ptext799 07BE                ?___lldiv 0020                ?___llmod 0020               _findScale 0061  
              ?_doScale 0070               _lcd_clear 07AD       __size_of_timersON 0012               __pstrings 0200  
             _lcd_write 0747          __size_of_ultoa 0091       interrupt_function 0004               _timersOFF 0529  
            ?_lcd_clear 0070             __stringbase 020F              ?_lcd_write 0070               lcd_puts@s 0020  
   ___tmul@multiplicand 0023       ___lmul@multiplier 0020            ??_initTimer0 0020            ??_initTimer1 0074  
            ?_timersOFF 0070        __size_of___awmod 0068        __size_of___lldiv 0070        __size_of___llmod 005E  
      __size_of_doScale 009E   _prescaleInternalShift 0280                _lcd_init 0693                _lcd_goto 07E4  
              _lcd_puts 076A      __end_of_initTimer0 0529      __end_of_initTimer1 07CA           __size_of_main 005A  
         __size_of_init 000A                clear_ram 07D4                _timersON 079B            ?_doFrequency 0070  
           ??_lcd_clear 0020             ??_lcd_write 0074  __size_of_lcd_putnumber 010F       lcd_putnumber@F612 005F  
 _prescaleExternalShift 0227               ultoa@base 0031       lcd_putnumber@loop 0035                intlevel1 0000  
      ___lldiv@dividend 0024               stringcode 020A             ??_timersOFF 002C       ___tmul@multiplier 0020  
              ultoa@buf 0038                ultoa@val 002D              _OPTION_REG 0081        ___lldiv@quotient 0028  
              stringdir 020A                stringtab 0200           _lcd_putnumber 0011  
